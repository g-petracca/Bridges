allow actlmand actlmand_exec:file { entrypoint open read execute getattr };
allow actlmand actlmand_tmpfs:file { read write };
allow actlmand block_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow actlmand block_device:dir { open getattr read search ioctl };
allow actlmand dw_mmc_device:dir { open getattr read search ioctl };
allow actlmand efsblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow actlmand emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow actlmand init:process sigchld;
allow actlmand self:capability { setuid setgid dac_override };
allow actlmand self:capability sys_rawio;
allow actlmand system_data_file:dir { open search write add_name remove_name };
allow actlmand system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow actlmand system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow adbd adb_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow adbd adb_keys_file:dir { open getattr read search ioctl };
allow adbd adb_keys_file:dir search;
allow adbd adb_keys_file:file { getattr open read ioctl lock };
allow adbd anr_data_file:dir { open getattr read search ioctl };
allow adbd anr_data_file:file { getattr open read ioctl lock };
allow adbd app_data_file:dir search;
allow adbd app_data_file:dir search;
allow adbd app_data_file:file { getattr open read ioctl lock };
allow adbd app_data_file:lnk_file { getattr open read ioctl lock };
allow adbd app_data_file:sock_file write;
allow adbd app_data_file:sock_file write;
allow adbd appdomain:unix_stream_socket connectto;
allow adbd app_library_file:file { getattr open read ioctl lock };
allow adbd at_distributor_exec:file getattr;
allow adbd ATFWD-daemon_exec:file getattr;
allow adbd bintvoutservice_exec:file getattr;
allow adbd bugreport_exec:file { execute execute_no_trans };
allow adbd cache_file:dir { open search write add_name remove_name };
allow adbd cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow adbd carrier_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow adbd cgroup:dir { write add_name create };
allow adbd devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow adbd dev_type:dir { open getattr read search ioctl };
allow adbd dev_type:lnk_file read;
allow adbd dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow adbd dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow adbd dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow adbd dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow adbd dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow adbd dumpstate_exec:file { execute execute_no_trans };
allow adbd dumpsys_exec:file { execute execute_no_trans };
allow adbd exec_type:file { getattr open read ioctl lock };
allow adbd functionfs:dir search;
allow adbd functionfs:file { { getattr open read ioctl lock } { open append write } };
allow adbd functionfs:file { read write ioctl open };
allow adbd gad_untrusted_app_data_file:dir search;
allow adbd gad_untrusted_app_data_file:dir search;
allow adbd gad_untrusted_app_data_file:file { getattr open read ioctl lock };
allow adbd gad_untrusted_app_data_file:lnk_file { getattr open read ioctl lock };
allow adbd gad_untrusted_app_data_file:sock_file write;
allow adbd gad_untrusted_app_data_file:sock_file write;
allow adbd gpu_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow adbd graphics_device:chr_file { getattr open read ioctl lock };
allow adbd graphics_device:dir search;
allow adbd init:process sigchld;
allow adbd init:process sigchld;
allow adbd init:unix_stream_socket { accept listen read write };
allow adbd init:unix_stream_socket connectto;
allow adbd input_device:chr_file { read write open };
allow adbd kernel:process setsched;
allow adbd kernel:security read_policy;
allow adbd media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow adbd media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow adbd media_rw_data_file:file { { getattr open read ioctl lock } { open append write } };
allow adbd newAttr30:{ dir { { chr_file blk_file } { file lnk_file sock_file fifo_file } } } getattr;
allow adbd newAttr33:dir { open getattr read search ioctl };
allow adbd newAttr33:{ file lnk_file } { getattr open read ioctl lock };
allow adbd newAttr54:{ dir { { chr_file blk_file } { file lnk_file sock_file fifo_file } } } getattr;
allow adbd newAttr54:dir { open getattr read search ioctl };
allow adbd newAttr74:{ dir { { chr_file blk_file } { file lnk_file sock_file fifo_file } } } getattr;
allow adbd newAttr74:dir { open getattr read search ioctl };
allow adbd newAttr9:unix_stream_socket connectto;
allow adbd node:tcp_socket node_bind;
allow adbd obb_apk_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow adbd obb_apk_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow adbd platform_app_data_file:dir { open getattr read search ioctl };
allow adbd platform_app_data_file:file { getattr open read ioctl lock };
allow adbd port:tcp_socket name_bind;
allow adbd port:tcp_socket name_connect;
allow adbd powerctl_prop:property_service set;
allow adbd powervr_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow adbd property_socket:sock_file write;
allow adbd radio_data_file:dir { open getattr read search ioctl };
allow adbd radio_data_file:file { getattr open read ioctl lock };
allow adbd rootfs:file { entrypoint open read execute getattr };
allow adbd rootfs:file { getattr open read ioctl lock };
allow adbd runas_exec:file { getattr open read ioctl lock };
allow adbd sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow adbd sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow adbd self:capability2 syslog;
allow adbd self:capability { net_raw fowner dac_override sys_boot sys_admin };
allow adbd self:capability setpcap;
allow adbd self:capability { setuid setgid };
allow adbd self:tcp_socket *;
allow adbd self:unix_stream_socket *;
allow adbd servicemanager:binder { call transfer };
allow adbd shell_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow adbd shell_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow adbd shell_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow adbd shell_data_file:lnk_file { getattr open read ioctl lock };
allow adbd shell_exec:file { getattr open read execute };
allow adbd shell:process noatsecure;
allow adbd shell:process { siginh rlimitinh };
allow adbd shell:process transition;
allow adbd shell_prop:property_service set;
allow adbd sprintitson_file:file { getattr open read ioctl lock };
allow adbd surfaceflinger:binder { call transfer };
allow adbd surfaceflinger:binder transfer;
allow adbd surfaceflinger:binder transfer;
allow adbd surfaceflinger:fd use;
allow adbd sysrq_proc:file { open append write };
allow adbd system:binder { call transfer };
allow adbd system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow adbd system_data_file:dir { open getattr read search ioctl };
allow adbd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow adbd system_data_file:file { open append write };
allow adbd system:fd use;
allow adbd system_file:file { getattr open read ioctl lock };
allow adbd system_file:file { getattr open read ioctl lock };
allow adbd system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow adbd system_file:lnk_file getattr;
allow adbd system_prop:property_service set;
allow adbd tombstone_data_file:dir getattr;
allow adbd ump_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow adbd zygote_exec:file { getattr execute execute_no_trans };
allow adbd zygote_exec:file { getattr open read ioctl lock };
allow adbd zygote_exec:file { getattr open read ioctl lock };
allow adsprpcd adsprpc_device:chr_file { getattr open read ioctl lock };
allow adsprpcd adsprpcd_exec:file { entrypoint open read execute getattr };
allow adsprpcd adsprpcd_service:service_manager add;
allow adsprpcd adsprpcd_tmpfs:file { read write };
allow adsprpcd init:process sigchld;
allow adsprpcd qdsp_device:chr_file { read ioctl open };
allow androidshmservice androidshmservice_exec:file { entrypoint open read execute getattr };
allow androidshmservice androidshmservice_tmpfs:file { read write };
allow androidshmservice init:process sigchld;
allow androidshmservice init:unix_stream_socket connectto;
allow androidshmservice init:unix_stream_socket { read write };
allow androidshmservice servicemanager:binder { call transfer };
allow apaservice apaservice_exec:file { entrypoint open read execute getattr };
allow apaservice apaservice_service:service_manager add;
allow apaservice apaservice_tmpfs:file { read write };
allow apaservice apk_data_file:file execute;
allow apaservice app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow apaservice app_data_file:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow apaservice appdomain:binder transfer;
allow apaservice app_library_file:dir { open getattr read search ioctl };
allow apaservice app_library_file:file execute;
allow apaservice bbccontainer_app_data_backend:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow apaservice bbccontainer_app_data_backend:file { { getattr open read ioctl lock } { open append write } };
allow apaservice container_app:binder { call transfer };
allow apaservice container_app:binder transfer;
allow apaservice container_app_data_backend:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow apaservice container_app_data_backend:file { { getattr open read ioctl lock } { open append write } };
allow apaservice container_app:fd use;
allow apaservice container_app_sdcard_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow apaservice container_app_sdcard_file:file { { getattr open read ioctl lock } { open append write } };
allow apaservice dumpstate:binder transfer;
allow apaservice dumpsys:binder transfer;
allow apaservice gad_untrusted_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow apaservice gad_untrusted_app_data_file:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow apaservice init:process sigchld;
allow apaservice init:unix_stream_socket connectto;
allow apaservice init:unix_stream_socket { read write };
allow apaservice jack_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow apaservice jack_data_file:{ file sock_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow apaservice jackservice:binder { call transfer };
allow apaservice jackservice:fd use;
allow apaservice jackservice:unix_stream_socket connectto;
allow apaservice jack_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow apaservice jack_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow apaservice media_rw_data_file:dir { open search write add_name remove_name };
allow apaservice media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow apaservice platform_app:binder { call transfer };
allow apaservice platform_app_data_file:dir { open getattr read search ioctl };
allow apaservice platform_app:fd use;
allow apaservice radio:binder transfer;
allow apaservice radio:fd use;
allow apaservice sdcard_internal:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow apaservice sdcard_internal:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow apaservice servicemanager:binder { call transfer };
allow apaservice s_platform_app:binder { call transfer };
allow apaservice s_platform_app:fd use;
allow apaservice s_system_app:fd use;
allow apaservice system_app:fd use;
allow apaservice system_data_file:dir { open search write add_name remove_name };
allow apaservice system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow apaservice system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow apaservice system_file:file { getattr execute execute_no_trans };
allow apaservice untrusteddomain:fd use;
allow apaservice untrusteddomain:unix_stream_socket connectto;
allow appdomain adbd:process sigchld;
allow appdomain anr_data_file:dir { { open getattr read search ioctl } add_name write };
allow appdomain anr_data_file:dir search;
allow appdomain anr_data_file:file { getattr open read ioctl lock };
allow appdomain anr_data_file:file { { getattr open read ioctl lock } { open append write } };
allow appdomain anr_data_file:file { open append };
allow appdomain apaservice:binder { call transfer };
allow appdomain apaservice:fd use;
allow appdomain { apaservice jackservice }:unix_dgram_socket sendto;
allow appdomain apk_data_file:dir { open getattr read search ioctl };
allow appdomain apk_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow appdomain apk_data_file:lnk_file read;
allow appdomain app_efs_file:dir { open getattr read search ioctl };
allow appdomain app_efs_file:file { getattr open read ioctl lock };
allow appdomain app_library_file:dir { execmod setattr { open getattr read search ioctl } };
allow appdomain app_library_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod setattr };
allow appdomain app_library_file:lnk_file read;
allow appdomain ashmem_device:chr_file execute;
allow appdomain backup_data_file:file { read write getattr };
allow appdomain bluetooth:unix_stream_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow appdomain bugreport_exec:file { execute execute_no_trans };
allow appdomain cache_backup_file:dir getattr;
allow appdomain cache_backup_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow appdomain cache_backup_file:file { read write getattr };
allow appdomain cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow appdomain cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow appdomain cnd_socket:sock_file write;
allow appdomain cnd:unix_stream_socket connectto;
allow appdomain dalvikcache_data_file:dir { open getattr read search ioctl };
allow appdomain dalvikcache_data_file:file execute;
allow appdomain dalvikcache_data_file:lnk_file { getattr open read ioctl lock };
allow appdomain dalvikcache_data_file:lnk_file read;
allow appdomain dalvikcache_profiles_data_file:dir { search getattr };
allow appdomain dalvikcache_profiles_data_file:file { { getattr open read ioctl lock } { open append write } };
allow appdomain devpts:chr_file { getattr read write ioctl };
allow appdomain dev_type:dir { open getattr read search ioctl };
allow appdomain dev_type:lnk_file read;
allow appdomain dex2oat_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow appdomain dnsproxyd_socket:sock_file write;
allow appdomain domain:process getattr;
allow appdomain dpmd:unix_stream_socket connectto;
allow appdomain dpmwrapper_socket:sock_file write;
allow appdomain drmserver:binder transfer;
allow appdomain dumpstate:binder transfer;
allow appdomain dumpstate_exec:file { execute execute_no_trans };
allow appdomain dumpstate:fd use;
allow appdomain dumpstate:unix_stream_socket { read write getopt getattr shutdown };
allow appdomain dumpsys_exec:file { execute execute_no_trans };
allow appdomain exec_type:file { getattr open read ioctl lock };
allow appdomain genlock_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow appdomain gpu_device:chr_file { { { getattr open read ioctl lock } { open append write } } execute };
allow appdomain ime_app:binder transfer;
allow appdomain init_tmpfs:file read;
allow appdomain init:unix_stream_socket { getattr getopt read write };
allow appdomain input_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow appdomain jackservice:unix_stream_socket connectto;
allow appdomain jack_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow appdomain jack_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow appdomain jack_socket:sock_file write;
allow appdomain kernel:security check_context;
allow appdomain kernel:security compute_av;
allow appdomain keychain_data_file:dir { open getattr read search ioctl };
allow appdomain keychain_data_file:file { getattr open read ioctl lock };
allow appdomain keystore:binder { call transfer };
allow appdomain keystore:fd use;
allow appdomain keystore:keystore_key { test get insert delete exist saw sign verify };
allow appdomain kgsl_device:chr_file { { { getattr open read ioctl lock } { open append write } } execute };
allow appdomain logdr_socket:sock_file write;
allow appdomain logd_socket:sock_file write;
allow appdomain logd:unix_stream_socket connectto;
allow appdomain logd:unix_stream_socket connectto;
allow appdomain lptcp_data_file:sock_file { { getattr open read ioctl lock } { open append write } };
allow appdomain lptcpgc:unix_stream_socket connectto;
allow appdomain lptcp_socket:sock_file write;
allow appdomain media_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow appdomain media_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow appdomain media_rw_data_file:file { read getattr };
allow appdomain mediaserver:binder { call transfer };
allow appdomain mediaserver:binder transfer;
allow appdomain mediaserver:fd use;
allow appdomain misc_user_data_file:dir { open getattr read search ioctl };
allow appdomain misc_user_data_file:file { getattr open read ioctl lock };
allow appdomain mpctl_socket:dir { open getattr read search ioctl };
allow appdomain mpctl_socket:sock_file write;
allow appdomain mpctl_socket:sock_file write;
allow appdomain mpctl_socket:sock_file write;
allow appdomain mpdecision:unix_stream_socket connectto;
allow appdomain netd:unix_stream_socket connectto;
allow appdomain newAttr30:{ dir { { chr_file blk_file } { file lnk_file sock_file fifo_file } } } getattr;
allow appdomain newAttr33:dir { open read search getattr };
allow appdomain newAttr33:{ file lnk_file } { open read getattr };
allow appdomain node:{ udp_socket tcp_socket rawip_socket } node_bind;
allow appdomain oemfs:dir { open getattr read search ioctl };
allow appdomain oemfs:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow appdomain perfd:unix_dgram_socket sendto;
allow appdomain perfd:unix_stream_socket connectto;
allow appdomain perfd:unix_stream_socket connectto;
allow appdomain platform_app_data_file:file { getattr read write };
allow appdomain port_type:tcp_socket name_connect;
allow appdomain powervr_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow appdomain qdsp_device:chr_file { getattr open read ioctl lock };
allow appdomain qlogd_socket:sock_file write;
allow appdomain qlogd:unix_stream_socket connectto;
allow appdomain qtaguid_device:chr_file { getattr open read ioctl lock };
allow appdomain qtaguid_proc:file { { getattr open read ioctl lock } { open append write } };
allow appdomain radio_data_file:file { read write getattr };
allow appdomain reset_reason_service_file:file { { getattr open read ioctl lock } { open append write } };
allow appdomain resourcecache_data_file:dir { open getattr read search ioctl };
allow appdomain resourcecache_data_file:file { getattr open read ioctl lock };
allow appdomain runas_exec:file getattr;
allow appdomain self:netlink_route_socket { read bind create nlmsg_read ioctl getattr setattr getopt setopt shutdown };
allow appdomain self:netlink_selinux_socket *;
allow appdomain self:packet_socket create;
allow appdomain self:process execmem;
allow appdomain self:process ptrace;
allow appdomain self:rawip_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow appdomain selinuxfs:file { { getattr open read ioctl lock } { open append write } };
allow appdomain selinuxfs:file { { getattr open read ioctl lock } { open append write } };
allow appdomain shared_relro_file:dir search;
allow appdomain shared_relro_file:file { getattr open read ioctl lock };
allow appdomain shell:process sigchld;
allow appdomain s_system_app:binder transfer;
allow appdomain surfaceflinger:binder { call transfer };
allow appdomain surfaceflinger:binder transfer;
allow appdomain surfaceflinger:fd use;
allow appdomain surfaceflinger:unix_stream_socket { read write setopt };
allow appdomain surfaceflinger:unix_stream_socket { read write setopt getattr getopt shutdown };
allow appdomain sysfs_app_writable:file { { getattr open read ioctl lock } { open append write } };
allow appdomain sysfs_music_power_writable:file { { getattr open read ioctl lock } { open append write } };
allow appdomain system_app:binder transfer;
allow appdomain system_app_data_file:file { getattr open read ioctl lock };
allow appdomain system:binder { call transfer };
allow appdomain system_data_file:dir { open getattr read search ioctl };
allow appdomain system_data_file:file { execute execute_no_trans open execmod };
allow appdomain system_data_file:lnk_file getattr;
allow appdomain system:fd use;
allow appdomain system:fifo_file { { getattr open read ioctl lock } { open append write } };
allow appdomain system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow appdomain system_library_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow appdomain system_server:binder transfer;
allow appdomain system_server:fifo_file { { getattr open read ioctl lock } { open append write } };
allow appdomain system_server:tcp_socket { read write getattr getopt shutdown };
allow appdomain system_server:unix_stream_socket { read write setopt getattr getopt shutdown };
allow appdomain system:unix_stream_socket { read write setopt };
allow appdomain tmpfs_file_type:file { read write };
allow appdomain tombstone_data_file:dir { open getattr read search ioctl };
allow appdomain tombstone_data_file:file { getattr open read ioctl lock };
allow appdomain tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow appdomain ump_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow appdomain usbaccessory_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow appdomain usbaccessory_device:chr_file { read write getattr };
allow appdomain usb_bus_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow appdomain usb_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow appdomain usb_device:chr_file { read write getattr ioctl };
allow appdomain wallpaper_file:file { getattr read write };
allow appdomain zero_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow appdomain zygote:binder transfer;
allow appdomain zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow appdomain zygote:fd use;
allow appdomain zygote:process sigchld;
allow appdomain zygote_tmpfs:file read;
allow appdomain zygote:unix_dgram_socket write;
allow argosd argosd_exec:file { entrypoint open read execute getattr };
allow argosd argosd_tmpfs:file { read write };
allow argosd init:process sigchld;
allow argosd radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow at_distributor adbd:dir { open getattr read search ioctl };
allow at_distributor alarm_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow at_distributor app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow at_distributor app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow at_distributor ashmem_device:chr_file { getattr execute execute_no_trans };
allow at_distributor at_distributor_exec:file { entrypoint open read execute getattr };
allow at_distributor at_distributor_tmpfs:file { read write };
allow at_distributor binderservicedomain:binder { call transfer };
allow at_distributor binderservicedomain:fd use;
allow at_distributor bintvoutservice:binder { call transfer };
allow at_distributor bintvoutservice:fd use;
allow at_distributor block_device:dir { open getattr read search ioctl };
allow at_distributor bugreport_exec:file { execute execute_no_trans };
allow at_distributor carrier_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow at_distributor carrier_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow at_distributor cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow at_distributor cgroup:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow at_distributor daemon_app_process:process { siginh rlimitinh };
allow at_distributor daemon_app_process:process transition;
allow at_distributor dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow at_distributor dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow at_distributor dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow at_distributor dumpstate_exec:file { execute execute_no_trans };
allow at_distributor dumpsys_exec:file { execute execute_no_trans };
allow at_distributor efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow at_distributor efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow at_distributor firmware:dir { open getattr read search ioctl };
allow at_distributor firmware:file { getattr open read ioctl lock };
allow at_distributor imei_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow at_distributor imei_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow at_distributor init:process sigchld;
allow at_distributor init:unix_stream_socket connectto;
allow at_distributor kernel:system syslog_read;
allow at_distributor mobicoredaemon:unix_stream_socket connectto;
allow at_distributor mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow at_distributor mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow at_distributor newAttr59:dir { open getattr read search ioctl };
allow at_distributor newAttr59:{ file lnk_file } { getattr open read ioctl lock };
allow at_distributor nfc:binder { call transfer };
allow at_distributor nfc:fd use;
allow at_distributor property_socket:sock_file write;
allow at_distributor qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow at_distributor radio:binder { call transfer };
allow at_distributor radio_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow at_distributor radio_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow at_distributor radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow at_distributor radio:fd use;
allow at_distributor rild_prop:property_service set;
allow at_distributor rild:unix_stream_socket connectto;
allow at_distributor sec_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow at_distributor sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow at_distributor sec-ril:unix_stream_socket connectto;
allow at_distributor self:capability { dac_override setuid fowner chown fsetid };
allow at_distributor self:netlink_route_socket { write getattr setopt read bind create nlmsg_read };
allow at_distributor sensorhubservice:binder { call transfer };
allow at_distributor sensorhubservice:fd use;
allow at_distributor servicemanager:binder call;
allow at_distributor servicemanager:binder { call transfer };
allow at_distributor servicemanager:binder { call transfer };
allow at_distributor servicemanager:fd use;
allow at_distributor shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow at_distributor s_system_app:binder { call transfer };
allow at_distributor s_system_app:fd use;
allow at_distributor su_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow at_distributor syscope_app:binder { call transfer };
allow at_distributor syscope_app:fd use;
allow at_distributor sysfs:file { open append write };
allow at_distributor sysfs_sec:file { { { getattr open read ioctl lock } { open append write } } setattr };
allow at_distributor sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow at_distributor sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow at_distributor system_app:binder { call transfer };
allow at_distributor system_app:fd use;
allow at_distributor system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow at_distributor system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow at_distributor system_file:file { getattr execute execute_no_trans };
allow at_distributor system_server:binder transfer;
allow at_distributor uart_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow at_distributor zygote_exec:file { getattr open read execute };
allow at_distributor zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow atfwd atfwd_exec:file { entrypoint open read execute getattr };
allow atfwd atfwd_tmpfs:file { read write };
allow ATFWD-daemon ctl_default_prop:property_service set;
allow ATFWD-daemon init:unix_stream_socket connectto;
allow ATFWD-daemon property_socket:sock_file { open append write };
allow ATFWD-daemon qmuxd:unix_stream_socket connectto;
allow ATFWD-daemon qmux_radio_socket:dir { open search write add_name remove_name };
allow ATFWD-daemon qmux_radio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ATFWD-daemon servicemanager:binder { call transfer };
allow atfwd init:process sigchld;
allow atfwd init:unix_stream_socket connectto;
allow atfwd property_socket:sock_file write;
allow atfwd qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow atfwd qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow atfwd qmuxd_socket:sock_file write;
allow atfwd qmuxd:unix_stream_socket connectto;
allow atfwd radio_prop:property_service set;
allow atfwd self:udp_socket create;
allow atfwd servicemanager:binder { call transfer };
allow atfwd servicemanager:binder { call transfer };
allow atfwd servicemanager:fd use;
allow atfwd s_system_app:binder { call transfer };
allow atfwd s_system_app:fd use;
allow atfwd sysfs_ssr:dir { open getattr read search ioctl };
allow atfwd sysfs_ssr:{ file lnk_file } { getattr open read ioctl lock };
allow atfwd system_app:binder { call transfer };
allow atfwd system_app:fd use;
allow audiod audio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow audiod audiod_exec:file { entrypoint open read execute getattr };
allow audiod audiod_tmpfs:file { read write };
allow audiod init:process sigchld;
allow audiod init:unix_stream_socket connectto;
allow audiod mediaserver:binder { call transfer };
allow audiod mediaserver:fd use;
allow audiod proc_audiod:file { getattr open read ioctl lock };
allow audiod property_socket:sock_file write;
allow audiod servicemanager:binder { call transfer };
allow auditd auditd_exec:file { entrypoint open read execute getattr };
allow auditd auditd_tmpfs:file { read write };
allow auditd audit_log:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow auditd audit_log:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow auditd cgroup:dir { create add_name };
allow auditd denial_prop:property_service { set };
allow auditd drsd_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow auditd drsd:unix_stream_socket connectto;
allow auditd init:process sigchld;
allow auditd init:unix_stream_socket connectto;
allow auditd kernel:system syslog_read;
allow auditd property_socket:sock_file { open append write };
allow auditd security_file:dir { open getattr read search ioctl };
allow auditd security_file:file { getattr open read ioctl lock };
allow auditd security_spota_file:dir { open getattr read search ioctl };
allow auditd security_spota_file:file { getattr open read ioctl lock };
allow auditd self:capability2 syslog;
allow auditd self:capability { audit_control setuid setgid };
allow auditd self:netlink_audit_socket { write create nlmsg_write read };
allow auditd selinuxfs:dir search;
allow auditd selinuxfs:file { read open };
allow auditd servicemanager:binder { call transfer };
allow auditd servicemanager:fd use;
allow auditd system_data_file:dir { { open getattr read search ioctl } add_name write };
allow auditd system_data_file:dir { { open getattr read search ioctl } remove_name };
allow auditd system_data_file:file { { getattr open read ioctl lock } unlink };
allow auditd system_server:binder { call transfer };
allow auditd system_server:fd use;
allow bauthserver appdomain:fd use;
allow bauthserver bauthserver_exec:file { entrypoint open read execute getattr };
allow bauthserver bauthserver_service:service_manager add;
allow bauthserver bauthserver_tmpfs:file { read write };
allow bauthserver init:process sigchld;
allow bauthserver { isolated_app_tmpfs untrusted_app_tmpfs }:file write;
allow bauthserver media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow bauthserver media_rw_data_file:file append;
allow bauthserver media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bauthserver mobicoredaemon:unix_stream_socket connectto;
allow bauthserver mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bauthserver qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bauthserver s5p_smem_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bauthserver sbfs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow bauthserver sbfs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bauthserver servicemanager:binder { call transfer };
allow bauthserver s_system_app:binder { call transfer };
allow bauthserver s_system_app:fd use;
allow bauthserver sysfs:file { { getattr open read ioctl lock } { open append write } };
allow bauthserver system_app:binder { call transfer };
allow bauthserver system_app:fd use;
allow bauthserver system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow bauthserver system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bauthserver vfsspi_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bbccontainer_app_data_backend xsdcardfs:filesystem associate;
allow binderservicedomain appdomain:fd use;
allow binderservicedomain appdomain:fd use;
allow binderservicedomain appdomain:fifo_file write;
allow binderservicedomain appdomain:fifo_file write;
allow binderservicedomain at_distributor:binder transfer;
allow binderservicedomain console_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow binderservicedomain devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow binderservicedomain devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow binderservicedomain dumpstate:binder transfer;
allow binderservicedomain dumpstate:fd use;
allow binderservicedomain dumpstate:fd use;
allow binderservicedomain dumpstate:unix_stream_socket { read write getopt getattr };
allow binderservicedomain dumpstate:unix_stream_socket { read write getopt getattr };
allow binderservicedomain keystore:binder { call transfer };
allow binderservicedomain keystore:fd use;
allow binderservicedomain keystore:keystore_key { test get insert delete exist saw sign verify };
allow binderservicedomain mediaserver:binder transfer;
allow binderservicedomain newAttr1:binder transfer;
allow binderservicedomain shell_data_file:file { getattr write };
allow binderservicedomain shell_data_file:file { getattr write };
allow binderservicedomain surfaceflinger:binder transfer;
allow binderservicedomain system_server:binder transfer;
allow bintvoutservice app_data_file:file write;
allow bintvoutservice at_distributor:binder transfer;
allow bintvoutservice at_distributor:fd use;
allow bintvoutservice bintvoutservice_exec:file { entrypoint open read execute getattr };
allow bintvoutservice bintvoutservice_service:service_manager add;
allow bintvoutservice bintvoutservice_tmpfs:file { read write };
allow bintvoutservice bugreport_exec:file { execute execute_no_trans };
allow bintvoutservice dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow bintvoutservice dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bintvoutservice dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bintvoutservice dumpstate:binder transfer;
allow bintvoutservice dumpstate_exec:file { execute execute_no_trans };
allow bintvoutservice dumpsys:binder transfer;
allow bintvoutservice dumpsys_exec:file { execute execute_no_trans };
allow bintvoutservice gad_untrusted_app_data_file:file write;
allow bintvoutservice graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bintvoutservice graphics_device:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow bintvoutservice hpd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bintvoutservice ime_app:binder transfer;
allow bintvoutservice init:process sigchld;
allow bintvoutservice init:unix_stream_socket { connectto read write };
allow bintvoutservice platform_app_data_file:file { open append write };
allow bintvoutservice radio:binder transfer;
allow bintvoutservice radio:fd use;
allow bintvoutservice sdcard_type:file { open append write };
allow bintvoutservice servicemanager:binder { call transfer };
allow bintvoutservice shell:binder transfer;
allow bintvoutservice s_system_app:binder transfer;
allow bintvoutservice s_system_app:fd use;
allow bintvoutservice s_system_app:fifo_file { open append write };
allow bintvoutservice surfaceflinger:binder { call transfer };
allow bintvoutservice surfaceflinger:binder transfer;
allow bintvoutservice surfaceflinger:fd use;
allow bintvoutservice surfaceflinger:fd use;
allow bintvoutservice sysfs:file { open append write };
allow bintvoutservice sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow bintvoutservice system_app:binder transfer;
allow bintvoutservice system_app:fd use;
allow bintvoutservice system_app:fifo_file { open append write };
allow bintvoutservice system_server:binder transfer;
allow bintvoutservice ump_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bintvoutservice untrusteddomain:binder transfer;
allow bintvoutservice untrusteddomain:fd use;
allow bluetooth anr_data_file:dir { open search write add_name remove_name };
allow bluetooth appdomain:fifo_file { getattr open read ioctl lock };
allow bluetooth app_efs_file:dir { open getattr read search ioctl };
allow bluetooth app_efs_file:file { getattr open read ioctl lock };
allow bluetooth bluetooth_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow bluetooth bluetooth_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bluetooth bluetooth_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bluetooth bluetooth_efs_file:dir { open getattr read search ioctl };
allow bluetooth bluetooth_efs_file:{ file lnk_file } { getattr open read ioctl lock };
allow bluetooth bluetooth_prop:property_service set;
allow bluetooth bluetooth_prop:property_service set;
allow bluetooth bluetooth_serial_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bluetooth bluetooth_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bluetooth bluetooth_tmpfs:file execute;
allow bluetooth bluetooth_tmpfs:file { read write };
allow bluetooth bt_firmware_file:dir { open getattr read search ioctl };
allow bluetooth bt_firmware_file:file { getattr open read ioctl lock };
allow bluetooth btsnoop_exec:file { entrypoint open read execute getattr };
allow bluetooth bugreport_exec:file { execute execute_no_trans };
allow bluetooth ctl_dhcp_pan_prop:property_service set;
allow bluetooth dalvikcache_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow bluetooth dalvikcache_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bluetooth devpts:chr_file { read write };
allow bluetoothdomain bluetooth:unix_stream_socket { getopt setopt getattr read write ioctl shutdown };
allow bluetoothdomain self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow bluetooth dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow bluetooth dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bluetooth dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bluetooth dumpstate_exec:file { execute execute_no_trans };
allow bluetooth dumpsys_exec:file { execute execute_no_trans };
allow bluetooth dun-server_exec:file { entrypoint open read execute getattr };
allow bluetooth efs_file:dir search;
allow bluetooth fixmo_app:binder transfer;
allow bluetooth fixmo_app:file { getattr open read ioctl lock };
allow bluetooth good_app:binder { call transfer };
allow bluetooth good_app:binder transfer;
allow bluetooth good_app:fd use;
allow bluetooth hci_attach_dev:chr_file { { getattr open read ioctl lock } { open append write } };
allow bluetooth init:process sigchld;
allow bluetooth init:process sigchld;
allow bluetooth init:process sigchld;
allow bluetooth init_tmpfs:file read;
allow bluetooth init:unix_stream_socket connectto;
allow bluetooth init:unix_stream_socket connectto;
allow bluetooth init:unix_stream_socket { read write };
allow bluetooth input_device:chr_file { getattr open read ioctl lock };
allow bluetooth input_device:chr_file { getattr open read ioctl lock };
allow bluetooth input_device:chr_file { open read write ioctl };
allow bluetooth node:tcp_socket node_bind;
allow bluetooth pan_result_prop:property_service set;
allow bluetooth persist_file:dir search;
allow bluetooth persist_file:file { { getattr open read ioctl lock } { open append write } };
allow bluetooth platform_app_data_file:file { getattr open read ioctl lock };
allow bluetooth port:tcp_socket name_bind;
allow bluetooth proc_bluetooth_writable:file { { getattr open read ioctl lock } { open append write } };
allow bluetooth proc:file { open append };
allow bluetooth property_socket:sock_file write;
allow bluetooth qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow bluetooth qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow bluetooth qmuxd_socket:sock_file write;
allow bluetooth qmuxd:unix_stream_socket connectto;
allow bluetooth rild:unix_stream_socket connectto;
allow bluetooth rild:unix_stream_socket connectto;
allow bluetooth sapd_exec:file { entrypoint open read execute getattr };
allow bluetooth sdcard_internal:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow bluetooth sdcard_internal:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bluetooth sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow bluetooth sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bluetooth self:capability2 wake_alarm;
allow bluetooth self:capability net_admin;
allow bluetooth self:capability net_admin;
allow bluetooth self:tcp_socket { create setopt bind accept listen };
allow bluetooth self:tun_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow bluetooth self:udp_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow bluetooth serial_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bluetooth servicemanager:binder { call transfer };
allow bluetooth servicemanager:binder { call transfer };
allow bluetooth servicemanager:fd use;
allow bluetooth smd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bluetooth smd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bluetooth s_system_app:binder { call transfer };
allow bluetooth s_system_app:fd use;
allow bluetooth s_system_app:fifo_file { open append write };
allow bluetooth surfaceflinger:binder transfer;
allow bluetooth sysfs_bluetooth_writable:file { { getattr open read ioctl lock } { open append write } };
allow bluetooth sysfs:file { { getattr open read ioctl lock } { open append write } };
allow bluetooth sysfs:file { { getattr open read ioctl lock } { open append write } };
allow bluetooth sysfs_sec:file { { getattr open read ioctl lock } { open append write } };
allow bluetooth sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow bluetooth sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow bluetooth system_app:binder { call transfer };
allow bluetooth system_app:fd use;
allow bluetooth system_app:fifo_file { open append write };
allow bluetooth system_data_file:dir { open getattr read search ioctl };
allow bluetooth system_data_file:file { getattr open read ioctl lock };
allow bluetooth system_prop:property_service set;
allow bluetooth tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bluetooth { tun_device uhid_device hci_attach_dev }:chr_file { { getattr open read ioctl lock } { open append write } };
allow bluetooth uart_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bluetooth uhid_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bootanim audio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bootanim audio_device:dir { open getattr read search ioctl };
allow bootanim audio_prop:property_service set;
allow bootanim bootanim_exec:file { entrypoint open read execute getattr };
allow bootanim bootanim_tmpfs:file { read write };
allow bootanim boot_prop:property_service set;
allow bootanim carrier_efs_file:dir { open getattr read search ioctl };
allow bootanim carrier_efs_file:file { getattr open read ioctl lock };
allow bootanim carrier_file:dir { open getattr read search ioctl };
allow bootanim carrier_file:file { getattr open read ioctl lock };
allow bootanim efs_file:dir { open getattr read search ioctl };
allow bootanim efs_file:file { getattr open read ioctl lock };
allow bootanim gpu_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bootanim graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bootanim imei_efs_file:dir { open getattr read search ioctl };
allow bootanim imei_efs_file:file { getattr open read ioctl lock };
allow bootanim init:process sigchld;
allow bootanim init:unix_stream_socket connectto;
allow bootanim oemfs:dir search;
allow bootanim oemfs:file { getattr open read ioctl lock };
allow bootanim property_socket:sock_file write;
allow bootanim pvrsync_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bootanim servicemanager:binder { call transfer };
allow bootanim servicemanager:binder { call transfer };
allow bootanim servicemanager:binder { call transfer };
allow bootanim servicemanager:fd use;
allow bootanim shell_data_file:dir search;
allow bootanim surfaceflinger:binder { call transfer };
allow bootanim surfaceflinger:binder { call transfer };
allow bootanim surfaceflinger:binder transfer;
allow bootanim surfaceflinger:fd use;
allow bootanim surfaceflinger:fd use;
allow bootanim surfaceflinger:fd use;
allow bootanim sysfs:file write;
allow bootanim sysfs_sec:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow bootanim sysfs_sec:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow bootanim sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow bootanim system_prop:property_service set;
allow bootanim ump_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bootanim ump_device:sock_file { getattr open read ioctl lock };
allow bootchecker bootchecker_exec:file { entrypoint open read execute getattr };
allow bootchecker bootchecker_tmpfs:file { read write };
allow bootchecker bugreport_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow bootchecker ctl_dumpstate_prop:property_service set;
allow bootchecker device:sock_file write;
allow bootchecker dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow bootchecker dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bootchecker dumpstate_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow bootchecker init:process sigchld;
allow bootchecker init:unix_stream_socket connectto;
allow bootchecker kernel:system syslog_read;
allow bootchecker property_socket:sock_file write;
allow bootchecker shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow brcm_patchram_plus bluetooth_efs_file:dir { open getattr read search ioctl };
allow brcm_patchram_plus bluetooth_efs_file:file { getattr open read ioctl lock };
allow brcm_patchram_plus brcm_patchram_plus_exec:file { entrypoint open read execute getattr };
allow brcm_patchram_plus brcm_patchram_plus_tmpfs:file { read write };
allow brcm_patchram_plus init:process sigchld;
allow brcm_patchram_plus kernel:system module_request;
allow brcm_patchram_plus uart_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow bridged_platform_app bbccontainer_app_data_backend:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow bridged_platform_app bbccontainer_app_data_backend:file { { getattr open read ioctl lock } { open append write } };
allow bridged_platform_app bridged_platform_app_tmpfs:file execute;
allow bridged_platform_app bridged_platform_app_tmpfs:file { read write };
allow bridged_platform_app container_app_data_backend:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow bridged_platform_app container_app_data_backend:file { { getattr open read ioctl lock } { open append write } };
allow bridged_platform_app container_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow bridged_platform_app container_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow bridged_platform_app container_app:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow bridged_platform_app container_app:file { { getattr open read ioctl lock } { open append write } };
allow bridged_platform_app container_app_sdcard_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow bridged_platform_app container_app_sdcard_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bridged_platform_app fixmo_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow bridged_platform_app fixmo_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow bridged_platform_app fixmo_app:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow bridged_platform_app fixmo_app:file { { getattr open read ioctl lock } { open append write } };
allow bridged_platform_app good_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow bridged_platform_app good_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow bridged_platform_app good_app:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow bridged_platform_app good_app:file { { getattr open read ioctl lock } { open append write } };
allow bridged_platform_app hidden_file:dir { open getattr read search ioctl };
allow bridged_platform_app hidden_file:file { getattr open read ioctl lock };
allow bugreport adbd:process sigchld;
allow bugreport bugreport_exec:file { entrypoint open read execute getattr };
allow bugreport ctl_dumpstate_prop:property_service set;
allow bugreport device:sock_file write;
allow bugreport devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow bugreport dumpstate_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow bugreport init:unix_stream_socket { read write connectto };
allow bugreport media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bugreport property_socket:sock_file write;
allow bugreport sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow bugreport self:capability dac_override;
allow bugreport shell:fd use;
allow bugreport shell:process sigchld;
allow bugreport tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow carrier_app anr_data_file:file { getattr open read ioctl lock };
allow carrier_app { apk_tmp_file apk_private_tmp_file }:dir { open getattr read search ioctl };
allow carrier_app { apk_tmp_file apk_private_tmp_file }:file { getattr open read ioctl lock };
allow carrier_app app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow carrier_app app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow carrier_app app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow carrier_app asec_apk_file:file { getattr open read ioctl lock };
allow carrier_app asec_public_file:file execute;
allow carrier_app asec_public_file:file { execute execmod };
allow carrier_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow carrier_app block_device:blk_file getattr;
allow carrier_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow carrier_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow carrier_app container_app_data_backend:dir { open getattr read search ioctl };
allow carrier_app DMM-daemon:unix_stream_socket connectto;
allow carrier_app download_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow carrier_app download_file:fd use;
allow carrier_app download_file:file { unlink { { getattr open read ioctl lock } { open append write } } };
allow carrier_app gad_untrusted_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow carrier_app gad_untrusted_app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow carrier_app gad_untrusted_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow carrier_app itsonclient_app:unix_dgram_socket sendto;
allow carrier_app itsonclient_app:unix_stream_socket connectto;
allow carrier_app itson_socket:dir { open getattr read search ioctl };
allow carrier_app itson_socket:{ file lnk_file } { getattr open read ioctl lock };
allow carrier_app itson_socket:sock_file write;
allow carrier_app itson_socket:sock_file write;
allow carrier_app knox_dar_shared_device:chr_file write;
allow carrier_app knox_kap_device:chr_file getattr;
allow carrier_app knox_untrusted_app:process sigkill;
allow carrier_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow carrier_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow carrier_app mmb_data_file:sock_file write;
allow carrier_app mmb_mw:unix_stream_socket connectto;
allow carrier_app mpctl_socket:sock_file write;
allow carrier_app mpctl_socket:sock_file write;
allow carrier_app mpdecision:unix_dgram_socket sendto;
allow carrier_app mpdecision:unix_stream_socket connectto;
allow carrier_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow carrier_app platform_app_data_file:file { rename unlink };
allow carrier_app shell_data_file:dir { open getattr read search ioctl };
allow carrier_app shell_data_file:file { getattr open read ioctl lock };
allow carrier_app sprintitson_file:dir { open getattr read search ioctl };
allow carrier_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow carrier_app s_system_app:unix_stream_socket connectto;
allow carrier_app s_system_app:unix_stream_socket { read write };
allow carrier_app system_app_data_file:file { read write getattr };
allow carrier_app system_app:unix_stream_socket connectto;
allow carrier_app system_app:unix_stream_socket { read write };
allow carrier_app system_server:unix_stream_socket connectto;
allow carrier_app tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow carrier_app untrusted_app_devpts:chr_file { open getattr read write ioctl };
allow carrier_app untrusted_app_tmpfs:file execmod;
allow carrier_app untrusted_app_tmpfs:file execute;
allow carrier_app untrusted_app_tmpfs:file { read write };
allow cbd bin_nv_data_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow cbd block_device:dir { open getattr read search ioctl };
allow cbd cbd_exec:file { entrypoint open read execute getattr };
allow cbd cbd_tmpfs:file { read write };
allow cbd cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow cbd device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow cbd efs_file:dir { open getattr read search ioctl };
allow cbd emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow cbd init:process sigchld;
allow cbd init:unix_stream_socket connectto;
allow cbd kernel:system syslog_read;
allow cbd log_device:chr_file { getattr open read ioctl lock };
allow cbd media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow cbd media_rw_data_file:dir { { open getattr read search ioctl } add_name write };
allow cbd media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow cbd media_rw_data_file:file { { getattr open read ioctl lock } { open append write } };
allow cbd mif_device:chr_file { getattr open read ioctl lock };
allow cbd mif_device:chr_file { open append write };
allow cbd mobicoredaemon:unix_stream_socket connectto;
allow cbd mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow cbd mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow cbd nv_core_efs_file:file { getattr open read ioctl lock };
allow cbd property_socket:sock_file { open append write };
allow cbd radioblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow cbd radio_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow cbd radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow cbd radio:file { getattr open read ioctl lock };
allow cbd rild_prop:property_service set;
allow cbd rootfs:file entrypoint;
allow cbd sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow cbd sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow cbd sdcard_type:file { open append write };
allow cbd self:capability2 { syslog };
allow cbd self:capability { setuid dac_override sys_boot };
allow cbd shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow cbd spi_boot_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow cbd sysfs:file { open append write };
allow cbd sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow cbd system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow cbd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow cbd system_file:file { getattr execute execute_no_trans };
allow cbd uart_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow cbd usbfs:dir { open getattr read search ioctl };
allow cellgeofenced cellgeofenced_exec:file { entrypoint open read execute getattr };
allow cellgeofenced cellgeofenced_tmpfs:file { read write };
allow cellgeofenced init:process sigchld;
allow cellgeofenced rild:unix_stream_socket connectto;
allow cellgeofenced rild:unix_stream_socket { read write };
allow cellgeofenced sysfs:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow cellgeofenced sysfs:file { { getattr open read ioctl lock } { open append write } };
allow cellgeofenced sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow cellgeofenced sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow charger_monitor charger_monitor_exec:file { entrypoint open read execute getattr };
allow charger_monitor charger_monitor_tmpfs:file { read write };
allow charger_monitor init:process sigchld;
allow charger_monitor self:capability net_admin;
allow charger_monitor self:netlink_kobject_uevent_socket { read create setopt bind };
allow charger_monitor sysfs_battery_supply:dir search;
allow charger_monitor sysfs_battery_supply:file { { getattr open read ioctl lock } { open append write } };
allow charger_monitor sysfs:file { { getattr open read ioctl lock } { open append write } };
allow charger_monitor sysfs:file { open append write };
allow charger_monitor sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow charger_monitor sysfs_usb_supply:dir search;
allow charger_monitor sysfs_usb_supply:file { getattr open read ioctl lock };
allow charger_monitor sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow charon cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow charon cgroup:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow charon charon_exec:file { entrypoint open read execute getattr };
allow charon charon_tmpfs:file { read write };
allow charon dnsproxyd_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow charon init:process sigchld;
allow charon init:unix_stream_socket connectto;
allow charon init:unix_stream_socket { read write };
allow charon kernel:system module_request;
allow charon keystore:binder { call transfer };
allow charon keystore:fd use;
allow charon keystore:keystore_key { get sign verify };
allow charon netd:unix_stream_socket connectto;
allow charon netd:unix_stream_socket { read write };
allow charon node:{ tcp_socket udp_socket } node_bind;
allow charon port:{ tcp_socket udp_socket } name_bind;
allow charon ppp_system_file:dir { open getattr read search ioctl };
allow charon ppp_system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow charon proc:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow charon proc:file { { getattr open read ioctl lock } { open append write } };
allow charon proc_net:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow charon proc_net:file { { getattr open read ioctl lock } { open append write } };
allow charon property_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow charon self:capability { net_admin setuid net_bind_service };
allow charon servicemanager:binder { call transfer };
allow charon servicemanager:fd use;
allow charon tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow charon vpn_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow charon vpn_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow charon vpn_prop:property_service set;
allow clatd cgroup:dir { create add_name };
allow clatd clatd_exec:file { entrypoint open read execute getattr };
allow clatd clatd_exec:file { entrypoint open read execute getattr };
allow clatd clatd_tmpfs:file { read write };
allow clatd init:process sigchld;
allow clatd kernel:system module_request;
allow clatd netd:fd use;
allow clatd netd:fifo_file { read write };
allow clatd netd:netlink_kobject_uevent_socket { read write };
allow clatd netd:netlink_nflog_socket { read write };
allow clatd netd:netlink_route_socket { read write };
allow clatd netd:process sigchld;
allow clatd netd:udp_socket { read write };
allow clatd netd:unix_dgram_socket { read write };
allow clatd netd:unix_stream_socket { read write };
allow clatd proc:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow clatd proc:file { { getattr open read ioctl lock } { open append write } };
allow clatd proc_net:file { open append write };
allow clatd self:capability { net_admin net_raw setuid setgid };
allow clatd self:capability { net_admin setgid setuid dac_override };
allow clatd self:netlink_route_socket nlmsg_write;
allow clatd self:{ packet_socket rawip_socket tun_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow clatd tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow cnd appdomain:dir { open getattr read search ioctl };
allow cnd appdomain:fd use;
allow cnd appdomain:file { getattr open read ioctl lock };
allow cnd appdomain:tcp_socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow cnd cnd_data_file:dir { open read write add_name remove_name search };
allow cnd cnd_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow cnd cnd_data_file:sock_file { unlink create setattr };
allow cnd cnd_exec:file { entrypoint open read execute getattr };
allow cnd cnd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow cnd cnd_socket:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow cnd cnd_tmpfs:file { read write };
allow cnd device:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow cnd diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow cnd diag_device:chr_file { read write open ioctl };
allow cnd init:process sigchld;
allow cnd init:unix_stream_socket connectto;
allow cnd init:unix_stream_socket connectto;
allow cnd init:unix_stream_socket connectto;
allow cnd ipa_dev:chr_file { getattr open read ioctl lock };
allow cnd kernel:system module_request;
allow cnd mediaserver:dir { open getattr read search ioctl };
allow cnd mediaserver:fd use;
allow cnd mediaserver:file { getattr open read ioctl lock };
allow cnd mediaserver:tcp_socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow cnd mtp:dir { open getattr read search ioctl };
allow cnd mtp:fd use;
allow cnd mtp:file { getattr open read ioctl lock };
allow cnd mtp:tcp_socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow cnd property_socket:sock_file write;
allow cnd property_socket:sock_file write;
allow cnd qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow cnd qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow cnd qmuxd_socket:sock_file write;
allow cnd qmuxd:unix_stream_socket connectto;
allow cnd qmuxd:unix_stream_socket connectto;
allow cnd qmux_radio_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow cnd qmux_radio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow cnd self:capability2 block_suspend;
allow cnd self:capability { setuid setgid dac_override net_raw chown fsetid net_admin sys_module };
allow cnd self:capability { setuid setgid fsetid dac_override net_admin net_raw };
allow cnd self:netlink_route_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow cnd self:netlink_route_socket { read bind create write nlmsg_read };
allow cnd self:netlink_socket { create setopt getopt bind getattr write read };
allow cnd self:netlink_tcpdiag_socket { bind create write read nlmsg_read getopt };
allow cnd self:netlink_tcpdiag_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow cnd self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow cnd smem_log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow cnd socket_device:dir { { open getattr read search ioctl } add_name write };
allow cnd socket_device:dir remove_name;
allow cnd sysfs:file { open append write };
allow cnd sysfs_wake_lock:file { open append };
allow cnd system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow cnd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow cnd system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow cnd system_prop:property_service set;
allow cnd system_server:dir { open getattr read search ioctl };
allow cnd system_server:fd use;
allow cnd system_server:file { getattr open read ioctl lock };
allow cnd system_server:tcp_socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow cnd wifi_data_file:dir search;
allow cnd wpa_socket:dir { write remove_name search add_name search };
allow cnd wpa_socket:sock_file { write create unlink setattr };
allow cnd wpa:unix_dgram_socket sendto;
allow commonplatformappdomain apk_private_data_file:dir search;
allow commonplatformappdomain app_data_file:file { getattr execute execute_no_trans };
allow commonplatformappdomain appdomain:fifo_file { { getattr open read ioctl lock } { open append write } };
allow commonplatformappdomain app_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow commonplatformappdomain app_library_file:dir { open getattr read search ioctl };
allow commonplatformappdomain asec_apk_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow commonplatformappdomain asec_apk_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow commonplatformappdomain at_distributor_exec:file { getattr open read ioctl lock };
allow commonplatformappdomain audit_log:dir { open getattr read search ioctl };
allow commonplatformappdomain audit_log:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow commonplatformappdomain bluetooth_data_file:dir { open getattr read search ioctl };
allow commonplatformappdomain bluetooth:unix_stream_socket { read write getattr };
allow commonplatformappdomain bluetooth:unix_stream_socket shutdown;
allow commonplatformappdomain bugreport_exec:file { execute execute_no_trans };
allow commonplatformappdomain cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow commonplatformappdomain cache_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow commonplatformappdomain cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow commonplatformappdomain dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow commonplatformappdomain dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow commonplatformappdomain dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow commonplatformappdomain dumpstate_exec:file { execute execute_no_trans };
allow commonplatformappdomain dumpsys_exec:file { execute execute_no_trans };
allow commonplatformappdomain epmd:unix_stream_socket connectto;
allow commonplatformappdomain epm_socket:sock_file write;
allow commonplatformappdomain gad_untrusted_app_data_file:file { getattr execute execute_no_trans };
allow commonplatformappdomain graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow commonplatformappdomain icd_device:file { { getattr open read ioctl lock } { open append write } };
allow commonplatformappdomain imei_efs_file:file { getattr open read ioctl lock };
allow commonplatformappdomain jackservice:binder { transfer call };
allow commonplatformappdomain knox_clipboard_file:dir { open getattr read search ioctl };
allow commonplatformappdomain knox_clipboard_file:file { getattr open read ioctl lock };
allow commonplatformappdomain knox_dar_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow commonplatformappdomain knox_dar_shared_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow commonplatformappdomain location-mq:unix_stream_socket connectto;
allow commonplatformappdomain mediaserver:unix_stream_socket connectto;
allow commonplatformappdomain mpdecision:unix_stream_socket connectto;
allow commonplatformappdomain newAttr33 :dir { { open getattr read search ioctl } getattr };
allow commonplatformappdomain newAttr33 :file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow commonplatformappdomain newAttr54:file { getattr open read ioctl lock };
allow commonplatformappdomain nfc_data_file:dir { open getattr read search ioctl };
allow commonplatformappdomain persdata_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow commonplatformappdomain persdata_data_file:file { { getattr open read ioctl lock } { open append write } };
allow commonplatformappdomain platform_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow commonplatformappdomain platform_app_data_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } { getattr execute execute_no_trans } };
allow commonplatformappdomain platform_media_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow commonplatformappdomain platform_media_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow commonplatformappdomain qmuxd:unix_stream_socket connectto;
allow commonplatformappdomain qmux_gps_socket:dir { open search write add_name remove_name };
allow commonplatformappdomain qmux_gps_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow commonplatformappdomain radio_data_file:file { getattr open read ioctl lock };
allow commonplatformappdomain rild:unix_stream_socket connectto;
allow commonplatformappdomain sec-ril:unix_stream_socket connectto;
allow commonplatformappdomain secure_storage_device:dir { open getattr read search ioctl };
allow commonplatformappdomain secure_storage_device:file { getattr open read ioctl lock };
allow commonplatformappdomain secure_storage_device:sock_file { open append write };
allow commonplatformappdomain secure_storage:unix_stream_socket connectto;
allow commonplatformappdomain security_file:file { getattr open read ioctl lock };
allow commonplatformappdomain security_spota_file:file { getattr open read ioctl lock };
allow commonplatformappdomain self:netlink_kobject_uevent_socket { create read bind setopt };
allow commonplatformappdomain self:netlink_route_socket *;
allow commonplatformappdomain self:packet_socket { read create ioctl setopt };
allow commonplatformappdomain self:{ packet_socket udp_socket tcp_socket rawip_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow commonplatformappdomain selinuxfs:dir { open getattr read search ioctl };
allow commonplatformappdomain selinuxfs:file { getattr open read ioctl lock };
allow commonplatformappdomain shell_data_file:dir search;
allow commonplatformappdomain shell_data_file:file { open getattr read };
allow commonplatformappdomain shell_data_file:lnk_file read;
allow commonplatformappdomain smartcard_data_file:dir { open getattr read search ioctl };
allow commonplatformappdomain smartcard_data_file:dir { { open getattr read search ioctl } relabelto };
allow commonplatformappdomain smartcard_data_file:sock_file write;
allow commonplatformappdomain ss_conn_daemon:unix_stream_socket connectto;
allow commonplatformappdomain s_system_app:fifo_file { open append write };
allow commonplatformappdomain s_system_app:tcp_socket getattr;
allow commonplatformappdomain store_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow commonplatformappdomain system_app:fifo_file { open append write };
allow commonplatformappdomain system_app:tcp_socket getattr;
allow commonplatformappdomain { system_file exec_type library_file_type }:file execute;
allow commonplatformappdomain system_file:file { getattr execute execute_no_trans };
allow commonplatformappdomain system:tcp_socket { read write };
allow commonplatformappdomain tima_log:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow commonplatformappdomain tima_log:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow commonplatformappdomain tzic_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow commonplatformappdomain untrusteddomain:unix_stream_socket connectto;
allow commonplatformappdomain usb_bus_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow commonplatformappdomain usb_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow commonplatformappdomain validity_device:fifo_file { { getattr open read ioctl lock } { open append write } };
allow commonplatformappdomain validity_device:file { { getattr open read ioctl lock } { open append write } };
allow commonplatformappdomain wifi_efs_file:dir { open getattr read search ioctl };
allow commonplatformappdomain wifi_efs_file:file { getattr open read ioctl lock };
allow commonplatformappdomain zygote:binder { call transfer };
allow commonplatformappdomain zygote_exec:file { getattr execute execute_no_trans };
allow commonplatformappdomain zygote:fd use;
allow connfwexe ashmem_device:chr_file { getattr execute execute_no_trans };
allow connfwexe block_device:dir { open getattr read search ioctl };
allow connfwexe block_device:lnk_file { getattr open read ioctl lock };
allow connfwexe bugreport_exec:file { execute execute_no_trans };
allow connfwexe connfwexe_exec:file { entrypoint open read execute getattr };
allow connfwexe connfwexe_tmpfs:file { read write };
allow connfwexe daemon_app_process:process { siginh rlimitinh };
allow connfwexe daemon_app_process:process sigkill;
allow connfwexe daemon_app_process:process transition;
allow connfwexe dalvikcache_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow connfwexe ddexe:unix_stream_socket connectto;
allow connfwexe dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow connfwexe dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow connfwexe dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow connfwexe dumpstate_exec:file { execute execute_no_trans };
allow connfwexe dumpsys_exec:file { execute execute_no_trans };
allow connfwexe emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow connfwexe init:process sigchld;
allow connfwexe init:unix_stream_socket connectto;
allow connfwexe paramblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow connfwexe property_socket:sock_file { open append write };
allow connfwexe radio_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow connfwexe radio_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow connfwexe self:capability { dac_override net_raw setuid sys_boot };
allow connfwexe servicemanager:binder { call transfer };
allow connfwexe servicemanager:fd use;
allow connfwexe shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow connfwexe sysfs:file { { getattr open read ioctl lock } { open append write } };
allow connfwexe sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow connfwexe sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow connfwexe system:binder { call transfer };
allow connfwexe system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow connfwexe system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow connfwexe system:fd use;
allow connfwexe system_file:file { getattr execute execute_no_trans };
allow connfwexe system_prop:property_service set;
allow connfwexe system_server:binder transfer;
allow connfwexe zygote_exec:file { getattr open read execute };
allow connfwexe zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow container_app apaservice:binder transfer;
allow container_app container_app_tmpfs:file execute;
allow container_app container_app_tmpfs:file { read write };
allow container_app_data_backend xsdcardfs:filesystem associate;
allow container_app_data_file self:filesystem associate;
allow container_app knox_untrusted_app:binder transfer;
allow container_app_sdcard_file self:filesystem associate;
allow container_app system_server:binder transfer;
allow containerdomain carrier_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow containerdomain carrier_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow containerdomain ime_app:binder transfer;
allow containerdomain mediaserver:binder transfer;
allow containerdomain newAttr12:fifo_file { { getattr open read ioctl lock } { open append write } };
allow containerdomain s_system_app:binder transfer;
allow containerdomain surfaceflinger:binder transfer;
allow containerdomain system_app:binder transfer;
allow containerdomain zygote:binder transfer;
allow container_service container_service_tmpfs:file execute;
allow container_service container_service_tmpfs:file { read write };
allow corehelper corehelper_sh_file:file { entrypoint open read execute getattr };
allow corehelper dumplog_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow corehelper dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow corehelper kernel:fifo_file { getattr open read ioctl lock };
allow corehelper kernel:process sigchld;
allow corehelper shell_exec:file read;
allow corehelper system_file:file execute_no_trans;
allow createsystemfile bbccontainer_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow createsystemfile bbccontainer_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow createsystemfile container_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow createsystemfile container_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow createsystemfile container_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow createsystemfile container_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow createsystemfile createsystemfile_exec:file { entrypoint open read execute getattr };
allow createsystemfile createsystemfile_tmpfs:file { read write };
allow createsystemfile init:process sigchld;
allow createsystemfile newAttr21:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow createsystemfile newAttr21:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow createsystemfile self:capability { dac_override chown fowner };
allow createsystemfile system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow createsystemfile system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow cs cs_exec:file { entrypoint open read execute getattr };
allow cs cs_socket:dir { open search write add_name remove_name };
allow cs cs_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow cs cs_tmpfs:file { read write };
allow cs efs_file:dir { open getattr read search ioctl };
allow cs efs_file:file { getattr open read ioctl lock };
allow cs firmware:dir { open getattr read search ioctl };
allow cs firmware:{ file lnk_file } { getattr open read ioctl lock };
allow cs init:process sigchld;
allow cs qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow cs system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow cs system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow daemon_app_process { at_distributor connfwexe mobicoredaemon sec-ril vold DMM-daemon rild }:fd use;
allow daemon_app_process { at_distributor connfwexe mobicoredaemon sec-ril vold DMM-daemon rild }:fifo_file { { getattr open read ioctl lock } { open append write } };
allow daemon_app_process { at_distributor connfwexe mobicoredaemon sec-ril vold DMM-daemon rild }:unix_stream_socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow daemon_app_process at_distributor:process sigchld;
allow daemon_app_process connfwexe:process sigchld;
allow daemon_app_process console_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow daemon_app_process daemon_app_process_tmpfs:file execute;
allow daemon_app_process daemon_app_process_tmpfs:file { read write };
allow daemon_app_process dalvikcache_data_file:file write;
allow daemon_app_process DMM-daemon:process sigchld;
allow daemon_app_process dumplog_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow daemon_app_process dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow daemon_app_process init:unix_stream_socket connectto;
allow daemon_app_process mobicoredaemon:netlink_socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow daemon_app_process mobicoredaemon:process sigchld;
allow daemon_app_process mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow daemon_app_process mobicore-user_device:chr_file write;
allow daemon_app_process rild:process sigchld;
allow daemon_app_process sec-ril:process sigchld;
allow daemon_app_process sysfs_wake_lock:file write;
allow daemon_app_process tui_device:chr_file { getattr open read ioctl lock };
allow daemon_app_process uart_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow daemon_app_process vold:process sigchld;
allow daemon_app_process zygote_exec:file { entrypoint open read execute getattr };
allow daemon_app_process zygote_exec:file { entrypoint open read execute getattr };
allow daemon_app_process zygote_exec:file { entrypoint open read execute getattr };
allow daemon_app_process zygote_exec:file { entrypoint open read execute getattr };
allow daemon_app_process zygote_exec:file { entrypoint open read execute getattr };
allow daemon_app_process zygote_exec:file { entrypoint open read execute getattr };
allow daemon_app_process zygote_exec:file { entrypoint open read execute getattr };
allow ddexe ddexe_exec:file { entrypoint open read execute getattr };
allow ddexe ddexe_tmpfs:file { read write };
allow ddexe device:file { getattr open read ioctl lock };
allow ddexe init:process sigchld;
allow ddexe self:capability { setuid dac_override };
allow ddexe system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow ddexe system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ddexe usb_serial_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow debuggerd app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow debuggerd app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debuggerd bbccontainer_app_data_backend:dir search;
allow debuggerd bugreport_exec:file { execute execute_no_trans };
allow debuggerd bugreport_exec:file { execute execute_no_trans };
allow debuggerd cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow debuggerd cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow debuggerd container_app_data_backend:dir search;
allow debuggerd container_app:lnk_file read;
allow debuggerd container_app:process getattr;
allow debuggerd debugfs:dir { open getattr read search ioctl };
allow debuggerd debugfs:file { getattr open read ioctl lock };
allow debuggerd debuggerd_exec:file { entrypoint open read execute getattr };
allow debuggerd debuggerd_tmpfs:file { read write };
allow debuggerd domain:dir { open getattr read search ioctl };
allow debuggerd domain:file { getattr open read ioctl lock };
allow debuggerd domain:lnk_file read;
allow debuggerd domain:process getattr;
allow debuggerd domain:process { sigstop signal };
allow debuggerd dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow debuggerd dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debuggerd dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debuggerd dumpstate_exec:file { execute execute_no_trans };
allow debuggerd dumpstate_exec:file { execute execute_no_trans };
allow debuggerd dumpstate_exec:file { getattr open read execute };
allow debuggerd dumpstate:process { siginh rlimitinh };
allow debuggerd dumpstate:process transition;
allow debuggerd dumpsys_exec:file { execute execute_no_trans };
allow debuggerd dumpsys_exec:file { execute execute_no_trans };
allow debuggerd exec_type:file { getattr open read ioctl lock };
allow debuggerd firmware:dir { open getattr read search ioctl };
allow debuggerd firmware:file { getattr open read ioctl lock };
allow debuggerd fixmo_app:lnk_file read;
allow debuggerd gad_untrusted_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow debuggerd gad_untrusted_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debuggerd good_app:lnk_file read;
allow debuggerd init:process sigchld;
allow debuggerd init:unix_stream_socket connectto;
allow debuggerd kernel:system module_request;
allow debuggerd kernel:system module_request;
allow debuggerd kernel:system syslog_read;
allow debuggerd logdr_socket:sock_file write;
allow debuggerd logd:unix_stream_socket connectto;
allow debuggerd logwrapper:unix_dgram_socket sendto;
allow debuggerd newAttr33:lnk_file { getattr open read ioctl lock };
allow debuggerd newAttr43:process ptrace;
allow debuggerd newAttr59:dir { open getattr read search ioctl };
allow debuggerd newAttr59:{ file lnk_file } { getattr open read ioctl lock };
allow debuggerd node:rawip_socket node_bind;
allow debuggerd proc:file write;
allow debuggerd qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow debuggerd qtaguid_proc:file { getattr open read ioctl lock };
allow debuggerd reset_reason_service_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debuggerd sdcard_external:dir { open getattr read search ioctl };
allow debuggerd sdcard_external:file { getattr open read ioctl lock };
allow debuggerd sdcard_internal:dir { open getattr read search ioctl };
allow debuggerd sdcard_internal:file { getattr open read ioctl lock };
allow debuggerd security_file:dir { open getattr read search ioctl };
allow debuggerd security_file:file { getattr open read ioctl lock };
allow debuggerd security_spota_file:dir { open getattr read search ioctl };
allow debuggerd security_spota_file:file { getattr open read ioctl lock };
allow debuggerd self:capability2 { syslog };
allow debuggerd self:capability { dac_override sys_ptrace chown kill fowner };
allow debuggerd self:capability { fsetid setuid net_raw sys_resource setgid net_admin sys_module };
allow debuggerd self:netlink_route_socket { write getattr setopt read bind create nlmsg_read };
allow debuggerd self:rawip_socket *;
allow debuggerd self:udp_socket *;
allow debuggerd selinuxfs:dir { read search } ;
allow debuggerd selinuxfs:file { getattr open read };
allow debuggerd servicemanager:binder { call transfer };
allow debuggerd servicemanager:fd use;
allow debuggerd shared_relro_file:dir { open getattr read search ioctl };
allow debuggerd shared_relro_file:file { getattr open read ioctl lock };
allow debuggerd shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow debuggerd su_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow debuggerd sysfs:file { open append write };
allow debuggerd sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow debuggerd system_app_data_file:file { { open append write } setattr };
allow debuggerd system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow debuggerd system_data_file:dir relabelfrom;
allow debuggerd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debuggerd system_data_file:file open;
allow debuggerd system_data_file:sock_file { open append write };
allow debuggerd system_file:file { getattr execute execute_no_trans };
allow debuggerd system_file:file { getattr execute execute_no_trans };
allow debuggerd system_ndebug_socket:sock_file write;
allow debuggerd system_server:binder { call transfer };
allow debuggerd system_server:fd use;
allow debuggerd system_server:unix_stream_socket connectto;
allow debuggerd system:unix_stream_socket connectto;
allow debuggerd tima_dump_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow debuggerd tombstone_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow debuggerd tombstone_data_file:dir relabelto;
allow debuggerd tombstone_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debuggerd tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow debuggerd usb_device:dir { open getattr read search ioctl };
allow debuggerd vdc_exec:file { getattr execute execute_no_trans };
allow debuggerd vold_socket:sock_file write;
allow debuggerd vold:unix_stream_socket connectto;
allow debuggerd wifi_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow debuggerd wifi_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debuggerd wpa:lnk_file read;
allow debuggerd wpa_socket:dir { open search write add_name remove_name };
allow debuggerd wpa_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debuggerd wpa_socket:sock_file { open append write };
allow debuggerd wpa:unix_dgram_socket sendto;
allow debug_interface_proxy debug_interface_proxy_exec:file { entrypoint open read execute getattr };
allow debug_interface_proxy debug_interface_proxy_tmpfs:file { read write };
allow debug_interface_proxy dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow debug_interface_proxy dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debug_interface_proxy init:process sigchld;
allow debug_interface_proxy init:unix_stream_socket connectto;
allow debug_interface_proxy mif_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow debug_interface_proxy msockets_socket:dir { open search write add_name remove_name };
allow debug_interface_proxy msockets_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debug_interface_proxy newAttr33:dir { open getattr read search ioctl };
allow debug_interface_proxy newAttr33:{ file lnk_file } { getattr open read ioctl lock };
allow debug_interface_proxy newAttr59:dir { open getattr read search ioctl };
allow debug_interface_proxy newAttr59:{ file lnk_file } { getattr open read ioctl lock };
allow debug_interface_proxy property_socket:sock_file write;
allow debug_interface_proxy sdcard_external:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow debug_interface_proxy sdcard_external:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debug_interface_proxy system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow debug_interface_proxy system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow debug_interface_proxy system_file:file execute_no_trans;
allow debug_interface_proxy system_prop:property_service set;
allow device_domain newAttr47:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow device_domain newAttr47:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow device_domain newAttr47:key *;
allow device_domain newAttr47:{ sem msgq shm ipc } *;
allow device_domain newAttr47:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket } *;
allow device_domain system_domain:key { view read search };
allow device_domain system_domain:{ sem msgq shm ipc } ~{ create destroy setattr };
allow device_domain system_domain:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket } { ioctl read getattr bind connect getopt };
allow { device_domain trusted_app_domain } newAttr25:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { getattr open read ioctl lock };
allow { device_domain trusted_app_domain } newAttr25:dir { open getattr read search ioctl };
allow device_domain { untrusteddomain shell }:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow device_domain { untrusteddomain shell }:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow device_domain { untrusteddomain shell }:key *;
allow device_domain { untrusteddomain shell }:{ sem msgq shm ipc } *;
allow device_domain { untrusteddomain shell }:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket } *;
allow dev_type ecryptfs:filesystem associate;
allow dev_type modem_firmware:filesystem associate;
allow dev_type security_firmware:filesystem associate;
allow dev_type tmpfs:filesystem associate;
allow dev_type usbfs:filesystem associate;
allow dex2oat asec_apk_file:file read;
allow dex2oat dalvikcache_data_file:file write;
allow dex2oat dalvikcache_data_file:lnk_file read;
allow dex2oat dex2oat_exec:file { entrypoint open read execute getattr };
allow dex2oat installd:fd use;
allow dex2oat installd:process sigchld;
allow dex2oat oemfs:file read;
allow dex2oat secure_storage_device:sock_file write;
allow dex2oat secure_storage:unix_stream_socket connectto;
allow dex2oat sprintitson_file:dir { open getattr read search ioctl };
allow dex2oat sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow dex2oat unlabeled:file read;
allow dhcp cgroup:dir { create write add_name };
allow dhcp cnd_socket:sock_file write;
allow dhcp cnd:unix_stream_socket connectto;
allow dhcp device:file { getattr open read ioctl lock };
allow dhcp dhcp_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow dhcp dhcp_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dhcp dhcp_exec:file { entrypoint open read execute getattr };
allow dhcp dhcp_exec:file { entrypoint open read execute getattr };
allow dhcp dhcp_prop:property_service set;
allow dhcp dhcp_system_file:dir { open getattr read search ioctl };
allow dhcp dhcp_system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow dhcp dhcp_tmpfs:file { read write };
allow dhcp init:process sigchld;
allow dhcp init:unix_stream_socket connectto;
allow dhcp kernel:system module_request;
allow dhcp kernel:system module_request;
allow dhcp netd:fd use;
allow dhcp netd:fifo_file { { getattr open read ioctl lock } { open append write } };
allow dhcp netd:{ netlink_kobject_uevent_socket netlink_route_socket netlink_nflog_socket } { read write };
allow dhcp netd:process sigchld;
allow dhcp netd:{ { udp_socket unix_dgram_socket } unix_stream_socket } { read write };
allow dhcp pan_result_prop:property_service set;
allow dhcp port:udp_socket name_bind;
allow dhcp proc:file write;
allow dhcp proc_net:file write;
allow dhcp property_socket:sock_file write;
allow dhcp self:capability { setgid setuid net_admin net_raw net_bind_service };
allow dhcp self:netlink_route_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow dhcp self:netlink_route_socket nlmsg_write;
allow dhcp self:packet_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow dhcp { self port node }:tcp_socket *;
allow dhcp { self port node }:udp_socket *;
allow dhcp self:rawip_socket { write create setopt read };
allow dhcp shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow dhcp sysrq_proc:file write;
allow dhcp system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow dhcp tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow diagexe diagexe_exec:file { entrypoint open read execute getattr };
allow diagexe diagexe_tmpfs:file { read write };
allow diagexe init:process sigchld;
allow diagexe init:unix_stream_socket connectto;
allow diagexe isolated_app:fd use;
allow diagexe media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow diagexe media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow diagexe mif_device:chr_file { read write open };
allow diagexe property_socket:sock_file write;
allow diagexe self:capability { setuid dac_override };
allow diagexe shell_exec:file { read execute open execute_no_trans };
allow diagexe sysfs_sec:file { { getattr open read ioctl lock } { open append write } };
allow diagexe sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow diagexe system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow diagexe system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow diagexe system_data_file:sock_file { create unlink };
allow diagexe system_file:file execute_no_trans;
allow diagexe system_prop:property_service set;
allow diagexe usb_serial_device:chr_file { read write ioctl open };
allow diag_uart_log at_distributor:unix_stream_socket connectto;
allow diag_uart_log cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow diag_uart_log diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow diag_uart_log diag_uart_log_exec:file { entrypoint open read execute getattr };
allow diag_uart_log diag_uart_log_tmpfs:file { read write };
allow diag_uart_log init:process sigchld;
allow diag_uart_log init:unix_stream_socket connectto;
allow diag_uart_log radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow diag_uart_log self:capability { setuid dac_override };
allow diag_uart_log sysfs:file { open append write };
allow diag_uart_log sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow dmdocomo_app dmdocomo_app_devpts:chr_file { open getattr read write ioctl };
allow dmdocomo_app dmdocomo_app_tmpfs:file execute;
allow dmdocomo_app dmdocomo_app_tmpfs:file { read write };
allow DMM-daemon app_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow DMM-daemon daemon_app_process:process { siginh rlimitinh };
allow DMM-daemon daemon_app_process:process transition;
allow DMM-daemon diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow DMM-daemon DMM-daemon_exec:file { entrypoint open read execute getattr };
allow DMM-daemon DMM-daemon_tmpfs:file { read write };
allow DMM-daemon gad_untrusted_app_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow DMM-daemon init:process sigchld;
allow DMM-daemon media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow DMM-daemon media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow DMM-daemon qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow DMM-daemon qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow DMM-daemon qmuxd_socket:sock_file write;
allow DMM-daemon qmuxd:unix_stream_socket connectto;
allow DMM-daemon self:capability2 { syslog };
allow DMM-daemon self:capability { setuid setgid net_raw dac_override };
allow DMM-daemon shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow DMM-daemon system_file:file execute_no_trans;
allow DMM-daemon zygote_exec:file { getattr open read execute };
allow DMM-daemon zygote_exec:{ file lnk_file } { getattr open read ioctl lock };
allow dnsmasq dhcp_data_file:dir { open search write add_name remove_name };
allow dnsmasq dhcp_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dnsmasq dnsmasq_exec:file { entrypoint open read execute getattr };
allow dnsmasq kernel:system module_request;
allow dnsmasq netd:fd use;
allow dnsmasq netd:fifo_file { getattr };
allow dnsmasq netd:fifo_file { { getattr open read ioctl lock } { open append write } };
allow dnsmasq netd:fifo_file { read write };
allow dnsmasq netd: { netlink_kobject_uevent_socket netlink_nflog_socket netlink_route_socket tcp_socket udp_socket } { read write };
allow dnsmasq netd:netlink_kobject_uevent_socket { read write };
allow dnsmasq netd:netlink_nflog_socket { read write };
allow dnsmasq netd:netlink_route_socket { read write };
allow dnsmasq netd:process sigchld;
allow dnsmasq netd_socket:sock_file { open append write };
allow dnsmasq netd:udp_socket { read write };
allow dnsmasq netd:unix_dgram_socket { read write };
allow dnsmasq netd:unix_dgram_socket { sendto };
allow dnsmasq netd:unix_stream_socket { connectto };
allow dnsmasq netd:unix_stream_socket { read write };
allow dnsmasq node:tcp_socket node_bind;
allow dnsmasq node:udp_socket node_bind;
allow dnsmasq port:tcp_socket { name_connect name_bind };
allow dnsmasq self:capability { chown fsetid setgid fowner sys_module };
allow dnsmasq self:capability dac_override;
allow dnsmasq self:capability { net_admin net_raw net_bind_service setgid setuid };
allow dnsmasq self:netlink_route_socket { { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } } nlmsg_read nlmsg_write } ;
allow dnsmasq self: { netlink_route_socket rawip_socket udp_socket packet_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow dnsmasq self:tcp_socket { listen setopt create bind };
allow dnsmasq shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow dnsmasq system_file:file { getattr execute execute_no_trans };
allow domain adbd:fd use;
allow domain adbd:unix_stream_socket connectto;
allow domain adbd:unix_stream_socket { getattr getopt read write shutdown };
allow domain alarm_device:chr_file { getattr open read ioctl lock };
allow domain apk_data_file:dir { getattr search };
allow domain apk_data_file:file { getattr open read ioctl lock };
allow domain apk_data_file:lnk_file { getattr open read ioctl lock };
allow domain { asec_public_file asec_apk_file }:dir { open getattr read search ioctl };
allow domain asec_public_file:file { getattr open read ioctl lock };
allow domain ashmem_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain at_distributor:fd use;
allow domain binder_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain cache_file:dir { open getattr read search ioctl };
allow domain cache_file:file { getattr read };
allow domain cache_file:lnk_file { getattr open read ioctl lock };
allow domain cgroup:dir { open getattr read search ioctl };
allow domain cgroup:dir { search write };
allow domain cgroup:{ file lnk_file } { getattr open read ioctl lock };
allow domain cgroup:file { open append write };
allow domain container_app_data_file:filesystem getattr;
allow domain container_app_sdcard_file:filesystem getattr;
allow domain dalvikcache_data_file:dir { search getattr };
allow domain dalvikcache_data_file:file { getattr open read ioctl lock };
allow domain debugfs:dir { open getattr read search ioctl };
allow domain debugfs:file { open append write };
allow domain debuggerd:process sigchld;
allow domain debuggerd:unix_stream_socket connectto;
allow domain debug_interface_proxy:unix_stream_socket connectto;
allow domain device:dir search;
allow domain device:file read;
allow domain devpts:dir search;
allow domain dev_type:lnk_file { getattr open read ioctl lock };
allow domain dumpstate:fd use;
allow domain dumpstate:fifo_file { write getattr };
allow domain dumpstate:unix_stream_socket { ioctl read write getattr bind connect accept getopt setopt connectto };
allow domain fimg2d_video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain fs_type:dir getattr;
allow domain fs_type:filesystem getattr;
allow domain init:fd use;
allow domain init:process sigchld;
allow domain inotify:dir { open getattr read search ioctl };
allow domain inotify:{ file lnk_file } { getattr open read ioctl lock };
allow domain ion_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain kernel:fd use;
allow domain log_device:chr_file { getattr open read ioctl lock };
allow domain log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain log_device:dir search;
allow domain logd:unix_dgram_socket sendto;
allow domain logdw_socket:sock_file write;
allow domain newAttr72:dir { open getattr read search ioctl };
allow domain newAttr72:{ file lnk_file } { getattr open read ioctl lock };
allow domain null_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain owntty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain powervr_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain proc_cpuinfo:file { getattr open read ioctl lock };
allow domain proc:dir { open getattr read search ioctl };
allow domain proc:{ file lnk_file } { getattr open read ioctl lock };
allow domain proc_net:dir { open getattr read search ioctl };
allow domain proc_net:{ file lnk_file } { getattr open read ioctl lock };
allow domain prop_device:file { getattr open read ioctl lock };
allow domain properties_device:file { getattr open read ioctl lock };
allow domain ptmx_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain pvrsync_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain random_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain { random_device urandom_device }:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain rootfs:dir { open getattr read search ioctl };
allow domain rootfs:file { getattr open read ioctl lock };
allow domain rootfs:file { getattr open read ioctl lock };
allow domain rootfs:lnk_file { getattr open read ioctl lock };
allow domain security_file:dir { search getattr };
allow domain security_file:file getattr;
allow domain security_file:lnk_file { getattr open read ioctl lock };
allow domain security_spota_file:dir { search getattr };
allow domain security_spota_file:file getattr;
allow domain security_spota_file:lnk_file { getattr open read ioctl lock };
allow domain seempd:unix_dgram_socket sendto;
allow domain seempdw_socket:sock_file write;
allow domain self:dir { open getattr read search ioctl };
allow domain self:fd use;
allow domain self:{ fifo_file file } { { getattr open read ioctl lock } { open append write } };
allow domain self:key *;
allow domain self:lnk_file { getattr open read ioctl lock };
allow domain self:msg *;
allow domain self:process execmem;
allow domain self:process { fork sigchld sigkill sigstop signull signal getsched setsched getsession getpgid setpgid getcap setcap getattr setrlimit };
allow domain self:{ sem msgq shm ipc } *;
allow domain self:{ socket rawip_socket packet_socket key_socket appletalk_socket tun_socket { tcp_socket udp_socket unix_stream_socket unix_dgram_socket } netlink_route_socket netlink_selinux_socket } *;
allow domain self:unix_dgram_socket { { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } } sendto };
allow domain self:unix_stream_socket { { create { { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } listen accept } } connectto };
allow domain selinuxfs:dir { open getattr read search ioctl };
allow domain selinuxfs:file { getattr open read ioctl lock };
allow domain servicemanager:service_manager list;
allow domain service_manager_type:service_manager find;
allow domain socket_device:dir { open getattr read search ioctl };
allow domain su:binder { call transfer };
allow domain su:fd use;
allow domain sysfs_devices_system_cpu:dir { open getattr read search ioctl };
allow domain sysfs_devices_system_cpu:{ file lnk_file } { getattr open read ioctl lock };
allow domain sysfs:dir { open getattr read search ioctl };
allow domain sysfs_esoc:dir { open getattr read search ioctl };
allow domain sysfs_esoc:{ file lnk_file } { getattr open read ioctl lock };
allow domain sysfs:{ file lnk_file } { getattr open read ioctl lock };
allow domain sysfs_socinfo:dir { open getattr read search ioctl };
allow domain sysfs_socinfo:{ file lnk_file } { getattr open read ioctl lock };
allow domain sysfs_ssr:dir { open getattr read search ioctl };
allow domain sysfs_ssr:{ file lnk_file } { getattr open read ioctl lock };
allow domain system_data_file:dir { search getattr };
allow domain system_data_file:file { getattr read };
allow domain system_data_file:lnk_file { getattr open read ioctl lock };
allow domain system_fifo:fifo_file { { getattr open read ioctl lock } { open append write } };
allow domain system_file:dir { open getattr read search ioctl };
allow domain system_file:file execute;
allow domain system_file:file { getattr open read ioctl lock };
allow domain system_file:lnk_file { getattr open read ioctl lock };
allow domain system_library_file:dir { open getattr read search ioctl };
allow domain system_library_file:dir { open getattr read search ioctl };
allow domain system_library_file:file { getattr open read ioctl lock };
allow domain system_library_file:lnk_file { getattr open read ioctl lock };
allow domain system_library_file:lnk_file { getattr open read ioctl lock };
allow domain system_server:fd use;
allow domain time_daemon:unix_stream_socket connectto;
allow domain tmpfs:dir { open getattr read search ioctl };
allow domain tmpfs:file { read getattr };
allow domain urandom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain zero_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow domain zoneinfo_data_file:dir { open getattr read search ioctl };
allow domain zoneinfo_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow dpmd appdomain:fd use;
allow dpmd appdomain:tcp_socket { read write getopt getattr };
allow dpmd ctl_default_prop:property_service set;
allow dpmd domain:dir { open getattr read search ioctl };
allow dpmd dpmd_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow dpmd dpmd_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dpmd dpmd_exec:file { entrypoint open read execute getattr };
allow dpmd dpmd_exec:file execute_no_trans;
allow dpmd dpmd_tmpfs:file { read write };
allow dpmd dpmwrapper_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow dpmd dpmwrapper_socket:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dpmd init:process sigchld;
allow dpmd init:unix_stream_socket connectto;
allow dpmd init:unix_stream_socket connectto;
allow dpmd kernel:system module_request;
allow dpmd property_socket:sock_file write;
allow dpmd property_socket:sock_file write;
allow dpmd qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow dpmd qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow dpmd qmuxd_socket:sock_file write;
allow dpmd qmuxd:unix_stream_socket connectto;
allow dpmd qmux_radio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dpmd self:capability2 block_suspend;
allow dpmd self:capability { net_admin net_raw dac_read_search dac_override setgid setuid fsetid };
allow dpmd self:capability { setuid setgid dac_override net_raw chown fsetid net_admin sys_module };
allow dpmd self:netlink_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow dpmd self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow dpmd shell_exec:file { read execute open execute_no_trans };
allow dpmd smem_log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow dpmd socket_device:dir { { open getattr read search ioctl } add_name write };
allow dpmd socket_device:dir remove_name;
allow dpmd sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow dpmd system_file:file execute_no_trans;
allow dpmd system_prop:property_service set;
allow dpmd system_server:tcp_socket { write getattr shutdown getopt read bind setopt };
allow drmserver apk_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver apk_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow drmserver apk_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver apk_data_file:file { read getattr };
allow drmserver apk_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver apk_data_file:sock_file unlink;
allow drmserver app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver app_data_file:dir { open getattr read search ioctl };
allow drmserver app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver app_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow drmserver app_data_file:file { read write getattr };
allow drmserver appdomain:binder { call transfer };
allow drmserver appdomain:fd use;
allow drmserver asec_apk_file:file { read getattr };
allow drmserver asec_apk_file:file { read write getattr };
allow drmserver at_distributor:fd use;
allow drmserver audio_data_file:file { getattr open read ioctl lock };
allow drmserver bbccontainer_app_data_backend:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow drmserver bbccontainer_app_data_backend:file { { getattr open read ioctl lock } { open append write } };
allow drmserver bbccontainer_app_data_backend:file setattr;
allow drmserver bintvoutservice:binder call;
allow drmserver bugreport_exec:file { execute execute_no_trans };
allow drmserver container_app:binder call;
allow drmserver container_app_data_backend:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow drmserver container_app_data_backend:file { { getattr open read ioctl lock } { open append write } };
allow drmserver container_app_data_backend:file setattr;
allow drmserver container_app:fd use;
allow drmserver container_app_sdcard_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow drmserver container_app_sdcard_file:file { setattr { { getattr open read ioctl lock } { open append write } } };
allow drmserver dnsproxyd_socket:sock_file { open append write };
allow drmserver drm_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver drm_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver drm_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver drm_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver drm_lib_system_file:dir { getattr open read ioctl lock };
allow drmserver drm_playready_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver drm_playready_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver drmserver_exec:file { entrypoint open read execute getattr };
allow drmserver drmserver_service:service_manager add;
allow drmserver drmserver_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver drmserver_tmpfs:file { read write };
allow drmserver dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver dumpstate:binder transfer;
allow drmserver dumpstate_exec:file { execute execute_no_trans };
allow drmserver dumpsys:binder transfer;
allow drmserver dumpsys_exec:file { execute execute_no_trans };
allow drmserver efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver efs_file:dir { open getattr read search ioctl };
allow drmserver efs_file:dir { open getattr read search ioctl };
allow drmserver efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver efs_file:{ file lnk_file } { getattr open read ioctl lock };
allow drmserver efs_file:{ file lnk_file } { getattr open read ioctl lock };
allow drmserver firmware:dir { open getattr read search ioctl };
allow drmserver firmware_file:dir { open getattr read search ioctl };
allow drmserver firmware_file:file { read getattr open };
allow drmserver firmware:{ file lnk_file } { getattr open read ioctl lock };
allow drmserver gad_untrusted_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver gad_untrusted_app_data_file:dir { open getattr read search ioctl };
allow drmserver gad_untrusted_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver gad_untrusted_app_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow drmserver gad_untrusted_app_data_file:file { read write getattr };
allow drmserver init:process sigchld;
allow drmserver init_shell:unix_stream_socket connectto;
allow drmserver init_shell:unix_stream_socket connectto;
allow drmserver init:unix_stream_socket { connectto read write };
allow drmserver media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver media_rw_data_file:dir { open getattr read search ioctl };
allow drmserver media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver media_rw_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow drmserver media_rw_data_file:file { open append write };
allow drmserver mediaserver:binder { call transfer };
allow drmserver mediaserver:fd use;
allow drmserver mobicoredaemon:unix_stream_socket connectto;
allow drmserver mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow drmserver mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow drmserver netd:unix_stream_socket connectto;
allow drmserver newAttr1:binder transfer;
allow drmserver newAttr58:dir { open getattr read search ioctl };
allow drmserver newAttr58:{ file lnk_file } { getattr open read ioctl lock };
allow drmserver node:udp_socket node_bind;
allow drmserver oemfs:dir search;
allow drmserver oemfs:file { getattr open read ioctl lock };
allow drmserver personal_page_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver personal_page_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver platform_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver port:tcp_socket name_connect;
allow drmserver port:udp_socket name_bind;
allow drmserver qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow drmserver qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow drmserver radio_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver radio_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver radio_data_file:file { read getattr };
allow drmserver s5p_smem_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow drmserver sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver sdcard_type:dir search;
allow drmserver sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver sdcard_type:file { read write getattr };
allow drmserver self:{ tcp_socket udp_socket } *;
allow drmserver servicemanager:binder { call transfer };
allow drmserver servicemanager:binder { call transfer };
allow drmserver servicemanager:binder { call transfer };
allow drmserver servicemanager:fd use;
allow drmserver shell_exec:file { getattr execute execute_no_trans };
allow drmserver shell_exec:file { getattr execute execute_no_trans };
allow drmserver s_system_app:fifo_file { open append write };
allow drmserver system_app:fifo_file { open append write };
allow drmserver system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow drmserver system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drmserver system_file:file { getattr execute execute_no_trans };
allow drmserver system_file:file { getattr execute execute_no_trans };
allow drmserver system_file:file { getattr open read ioctl lock };
allow drmserver system_server:binder { call transfer };
allow drmserver system_server:fd use;
allow drmserver tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow drmserver tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow drmserver tee:unix_stream_socket connectto;
allow drmserver tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow drsd audit_log:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow drsd audit_log:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow drsd drs_date_prop:property_service set;
allow drsd drsd_exec:file { entrypoint open read execute getattr };
allow drsd drsd_socket:sock_file setattr;
allow drsd drsd_tmpfs:file { read write };
allow drsd init:process sigchld;
allow drsd init:unix_stream_socket connectto;
allow drsd newAttr62:dir { relabelfrom relabelto { open getattr read search ioctl } write };
allow drsd newAttr62:fifo_file { relabelfrom relabelto { getattr open read ioctl lock } write };
allow drsd newAttr62:file { relabelfrom relabelto { getattr open read ioctl lock } write };
allow drsd newAttr62:lnk_file { relabelfrom relabelto { getattr open read ioctl lock } write };
allow drsd newAttr62:sock_file { relabelfrom relabelto { getattr open read ioctl lock } write };
allow drsd property_socket:sock_file write;
allow drsd rootfs:file { getattr open read ioctl lock };
allow drsd security_file:dir { open getattr read search ioctl };
allow drsd security_file:dir { relabelfrom relabelto { open getattr read search ioctl } write };
allow drsd security_file:file { getattr open read ioctl lock };
allow drsd security_file:file { relabelfrom relabelto { getattr open read ioctl lock } write };
allow drsd security_spota_file:dir { open getattr read search ioctl };
allow drsd security_spota_file:dir { relabelfrom relabelto { open getattr read search ioctl } write };
allow drsd security_spota_file:file { getattr open read ioctl lock };
allow drsd security_spota_file:file { relabelfrom relabelto { getattr open read ioctl lock } write };
allow drsd self:capability { chown fowner dac_override setuid setgid };
allow drsd selinuxfs:dir { open getattr read search ioctl };
allow drsd selinuxfs:file { getattr open read ioctl lock };
allow drsd system_data_file:dir { relabelfrom relabelto { open getattr read search ioctl } };
allow drsd system_data_file:file { getattr open read ioctl lock };
allow dtsconfigurator audio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow dtsconfigurator audio_device:dir { open getattr read search ioctl };
allow dtsconfigurator dtsconfigurator_exec:file { entrypoint open read execute getattr };
allow dtsconfigurator dtsconfigurator_tmpfs:file { read write };
allow dtsconfigurator init:process sigchld;
allow dtseagleservice audio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow dtseagleservice audio_device:dir { open getattr read search ioctl };
allow dtseagleservice dtseagleservice_exec:file { entrypoint open read execute getattr };
allow dtseagleservice dtseagleservice_service:service_manager add;
allow dtseagleservice dtseagleservice_tmpfs:file { read write };
allow dtseagleservice init:process sigchld;
allow dtseagleservice platform_app:binder { call transfer };
allow dtseagleservice platform_app:binder transfer;
allow dtseagleservice platform_app:fd use;
allow dtseagleservice servicemanager:binder { call transfer };
allow dtseagleservice s_platform_app:binder { call transfer };
allow dtseagleservice s_platform_app:binder transfer;
allow dtseagleservice s_platform_app:fd use;
allow dtseagleservice s_system_app:binder { call transfer };
allow dtseagleservice s_system_app:binder transfer;
allow dtseagleservice s_system_app:fd use;
allow dtseagleservice system_app:binder { call transfer };
allow dtseagleservice system_app:binder transfer;
allow dtseagleservice system_app:fd use;
allow dttexe ddexe:unix_stream_socket connectto;
allow dttexe dttexe_exec:file { entrypoint open read execute getattr };
allow dttexe dttexe_tmpfs:file { read write };
allow dttexe init:process sigchld;
allow dttexe radio_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow dttexe radio_data_file:file { { getattr open read ioctl lock } { open append write } };
allow dttexe self:capability { setuid dac_override sys_boot };
allow dttexe system_data_file:sock_file { { getattr open read ioctl lock } { open append write } };
allow dttexe system_file:file execute_no_trans;
allow dumpstate adbd:process sigchld;
allow dumpstate anr_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow dumpstate anr_data_file:dir { { { open getattr read search ioctl } { open search write add_name remove_name } } relabelto };
allow dumpstate anr_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpstate anr_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpstate apaservice:binder { call transfer };
allow dumpstate apaservice:fd use;
allow dumpstate appdomain:binder { call transfer };
allow dumpstate appdomain:fd use;
allow dumpstate { appdomain system_server }:process signal;
allow dumpstate ashmem_device:chr_file execute;
allow dumpstate ashmem_device:chr_file execute;
allow dumpstate bbccontainer_app_data_backend:dir search;
allow dumpstate binderservicedomain:binder { call transfer };
allow dumpstate binderservicedomain:fd use;
allow dumpstate bintvoutservice:binder { call transfer };
allow dumpstate bintvoutservice:fd use;
allow dumpstate bugreport_exec:file { read execute open execute_no_trans };
allow dumpstate cache_file:file { { getattr open read ioctl lock } { open append write } };
allow dumpstate cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow dumpstate container_app_data_backend:dir search;
allow dumpstate csc_prop:property_service set;
allow dumpstate ctl_dumpstate_prop:property_service set;
allow dumpstate dalvikcache_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow dumpstate dalvikcache_data_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } execute };
allow dumpstate dalvikcache_data_file:file execute;
allow dumpstate debugfs:file { getattr open read ioctl lock };
allow dumpstate debugfs:file { { getattr open read ioctl lock } { open append write } };
allow dumpstate debuggerd:process sigchld;
allow dumpstate device:sock_file write;
allow dumpstate devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow dumpstate domain:dir { open getattr read search ioctl };
allow dumpstate domain:dir { open getattr read search ioctl };
allow dumpstate domain:{ file lnk_file } { getattr open read ioctl lock };
allow dumpstate domain:{ file lnk_file } { getattr open read ioctl lock };
allow dumpstate domain:lnk_file { getattr open read ioctl lock };
allow dumpstate domain:process getattr;
allow dumpstate domain:process { signal getattr };
allow dumpstate drmserver:binder { call transfer };
allow dumpstate { drmserver_exec mediaserver_exec sdcardd_exec surfaceflinger_exec }:file { getattr open read ioctl lock };
allow dumpstate drmserver:fd use;
allow dumpstate { drmserver mediaserver sdcardd surfaceflinger }:process signal;
allow dumpstate dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow dumpstate dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpstate dumpstate_exec:file { entrypoint open read execute getattr };
allow dumpstate dumpstate_exec:file { entrypoint open read execute getattr };
allow dumpstate dumpstate_exec:file { entrypoint open read execute getattr };
allow dumpstate dumpstate_exec:file { entrypoint open read execute getattr };
allow dumpstate dumpstate_exec:file { entrypoint open read execute getattr };
allow dumpstate dumpstate_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow dumpstate dumpstate_tmpfs:file execute;
allow dumpstate dumpstate_tmpfs:file { read write };
allow dumpstate dumpsys_exec:file { getattr execute execute_no_trans };
allow dumpstate dumpsys_exec:file { getattr open read execute };
allow dumpstate dumpsys_exec:file { getattr open read ioctl lock };
allow dumpstate dumpsys:process { siginh rlimitinh };
allow dumpstate dumpsys:process transition;
allow dumpstate epmd:process sigchld;
allow dumpstate firmware:dir { open getattr read search ioctl };
allow dumpstate firmware:file { getattr open read ioctl lock };
allow dumpstate functionfs:filesystem getattr;
allow dumpstate gpu_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow dumpstate init:process sigchld;
allow dumpstate init:unix_stream_socket connectto;
allow dumpstate init:unix_stream_socket { read write };
allow dumpstate isolated_app_tmpfs:file write;
allow dumpstate jackservice:binder { call transfer };
allow dumpstate jackservice:fd use;
allow dumpstate kernel:system syslog_read;
allow dumpstate kernel:system { syslog_read module_request };
allow dumpstate keystore:binder { call transfer };
allow dumpstate keystore:fd use;
allow dumpstate knox_system_app:fd use;
allow dumpstate logdr_socket:sock_file write;
allow dumpstate logd_socket:sock_file write;
allow dumpstate logd:unix_stream_socket connectto;
allow dumpstate logd:unix_stream_socket connectto;
allow dumpstate media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpstate mediaserver:binder { call transfer };
allow dumpstate mediaserver:fd use;
allow dumpstate net_data_file:dir search;
allow dumpstate net_data_file:file { getattr open read ioctl lock };
allow dumpstate nfc:binder { call transfer };
allow dumpstate nfc:fd use;
allow dumpstate node:rawip_socket node_bind;
allow dumpstate platform_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow dumpstate platform_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpstate platform_app_tmpfs:file write;
allow dumpstate property_socket:sock_file write;
allow dumpstate pstorefs:dir { open getattr read search ioctl };
allow dumpstate pstorefs:file { getattr open read ioctl lock };
allow dumpstate qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow dumpstate qseecom_device:chr_file { read write ioctl open };
allow dumpstate qtaguid_proc:file { getattr open read ioctl lock };
allow dumpstate qtaguid_proc:file { getattr open read ioctl lock };
allow dumpstate radio:binder { call transfer };
allow dumpstate radio:fd use;
allow dumpstate sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow dumpstate sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpstate self:capability2 ~{ mac_admin mac_override };
allow dumpstate self:capability2 syslog;
allow dumpstate self:capability { dac_override chown fowner fsetid };
allow dumpstate self:capability kill;
allow dumpstate self:capability ~{ mknod sys_rawio } ;
allow dumpstate self:capability { setuid setgid };
allow dumpstate self:capability sys_ptrace;
allow dumpstate self:netlink_route_socket { write getattr setopt read bind create nlmsg_read };
allow dumpstate self:process execmem;
allow dumpstate self:rawip_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow dumpstate self:udp_socket { ioctl getattr create connect };
allow dumpstate selinuxfs:dir { open getattr read search ioctl };
allow dumpstate sensorhubservice:binder { call transfer };
allow dumpstate sensorhubservice:fd use;
allow dumpstate servicemanager:binder { call transfer };
allow dumpstate servicemanager:binder { call transfer };
allow dumpstate servicemanager:fd use;
allow dumpstate setupwizard_prop:property_service set;
allow dumpstate shell_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow dumpstate shell_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow dumpstate shell_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpstate shell_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpstate shell_exec:file { getattr execute execute_no_trans };
allow dumpstate shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow dumpstate shell:fd use;
allow dumpstate shell:process sigchld;
allow dumpstate shell:unix_stream_socket { read write };
allow dumpstate s_system_app:binder { call transfer };
allow dumpstate s_system_app:fd use;
allow dumpstate su_exec:file { getattr open read execute };
allow dumpstate su:process { siginh rlimitinh };
allow dumpstate su:process transition;
allow dumpstate surfaceflinger:binder { call transfer };
allow dumpstate surfaceflinger:binder transfer;
allow dumpstate surfaceflinger:fd use;
allow dumpstate sysfs:file { open append write };
allow dumpstate sysfs:file { open append write };
allow dumpstate sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow dumpstate system_app:binder { call transfer };
allow dumpstate system_app:fd use;
allow dumpstate system:binder { call transfer };
allow dumpstate system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow dumpstate system_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom };
allow dumpstate system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpstate system_data_file:file { getattr open read ioctl lock };
allow dumpstate system:fd use;
allow dumpstate system_file:file execute_no_trans;
allow dumpstate system_file:file { getattr execute execute_no_trans };
allow dumpstate system_server:binder transfer;
allow dumpstate system_server:binder transfer;
allow dumpstate tima_dump_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow dumpstate tombstone_data_file:dir { open getattr read search ioctl };
allow dumpstate tombstone_data_file:file { getattr open read ioctl lock };
allow dumpstate tty_device:chr_file { read write };
allow dumpstate untrusted_app_tmpfs:file { { getattr open read ioctl lock } { open append write } };
allow dumpstate vdc_exec:file { getattr open read execute };
allow dumpstate vdc:process { siginh rlimitinh };
allow dumpstate vdc:process transition;
allow dumpstate vold:fd use;
allow dumpstate vold:fifo_file { { getattr open read ioctl lock } { open append write } };
allow dumpstate vold:netlink_kobject_uevent_socket { read write };
allow dumpstate vold:process sigchld;
allow dumpstate vold_socket:sock_file { open append write };
allow dumpstate vold:unix_stream_socket { read write connectto };
allow dumpstate wifi_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow dumpstate wifi_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpstate wpa_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpstate wpa:unix_dgram_socket sendto;
allow dumpstate zygote_exec:file { getattr execute execute_no_trans };
allow dumpstate zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow dumpsys adbd:fifo_file { { getattr open read ioctl lock } { open append write } };
allow dumpsys adbd:process sigchld;
allow dumpsys apaservice:binder { call transfer };
allow dumpsys apaservice:fd use;
allow dumpsys bintvoutservice:binder { call transfer };
allow dumpsys bintvoutservice:fd use;
allow dumpsys cache_file:file { { getattr open read ioctl lock } { open append write } };
allow dumpsys devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow dumpsys drmserver:binder { call transfer };
allow dumpsys drmserver:fd use;
allow dumpsys dumpstate:fifo_file write;
allow dumpsys dumpstate:process sigchld;
allow dumpsys dumpsys_exec:file { entrypoint open read execute getattr };
allow dumpsys dumpsys_exec:file { entrypoint open read execute getattr };
allow dumpsys healthd:binder { call transfer };
allow dumpsys healthd:fd use;
allow dumpsys init:unix_stream_socket { read write };
allow dumpsys jackservice:binder { call transfer };
allow dumpsys jackservice:fd use;
allow dumpsys keystore:binder { call transfer };
allow dumpsys keystore:fd use;
allow dumpsys media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpsys mediaserver:binder { call transfer };
allow dumpsys mediaserver:fd use;
allow dumpsys nfc:binder { call transfer };
allow dumpsys nfc:fd use;
allow dumpsys qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow dumpsys radio:binder { call transfer };
allow dumpsys radio:fd use;
allow dumpsys sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow dumpsys sensorhubservice:binder { call transfer };
allow dumpsys sensorhubservice:fd use;
allow dumpsys servicemanager:binder { call transfer };
allow dumpsys servicemanager:fd use;
allow dumpsys shell:fd use;
allow dumpsys shell:process sigchld;
allow dumpsys shell:unix_stream_socket { read write };
allow dumpsys s_system_app:binder { call transfer };
allow dumpsys s_system_app:fd use;
allow dumpsys surfaceflinger:binder { call transfer };
allow dumpsys surfaceflinger:fd use;
allow dumpsys system_app:binder { call transfer };
allow dumpsys system_app:fd use;
allow dumpsys system:binder { call transfer };
allow dumpsys system:fd use;
allow dumpsys tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow dumpsys vold:fd use;
allow dumpsys vold:fifo_file { { getattr open read ioctl lock } { open append write } };
allow dumpsys vold:netlink_kobject_uevent_socket { read write };
allow dumpsys vold:unix_stream_socket { read write };
allow edmaudit edmaudit_exec:file { entrypoint open read execute getattr };
allow edmaudit edmaudit_tmpfs:file { read write };
allow edmaudit init:process sigchld;
allow edmaudit kernel:system syslog_read;
allow edmaudit self:capability2 syslog;
allow edmaudit self:capability { setuid setgid };
allow edmaudit servicemanager:binder call;
allow edmaudit system:binder call;
allow efsks block_device:dir { { open getattr read search ioctl } add_name write };
allow efsks dw_mmc_device:dir { { open getattr read search ioctl } add_name write };
allow efsks dw_mmc_device:lnk_file { getattr open read ioctl lock };
allow efsks efsks_exec:file { entrypoint open read execute getattr };
allow efsks efsks_exec:file { entrypoint open read execute getattr };
allow efsks efsks_tmpfs:file { read write };
allow efsks emmcblk_device:blk_file { open append write };
allow efsks init:process sigchld;
allow efsks ks_exec:file { getattr open read execute };
allow efsks ks_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow efsks ks:process { siginh rlimitinh };
allow efsks ks:process transition;
allow efsks m9kefsblk_device:blk_file { open append write };
allow efsks mdm_device:chr_file { getattr open read ioctl lock };
allow efsks modem_device:dir search;
allow efsks modem_device:lnk_file { getattr open read ioctl lock };
allow efsks qcks:fd use;
allow efsks qcks:process sigchld;
allow efsks radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow efsks self:capability dac_override;
allow efsks shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow efsks sysfs:file { open append write };
allow efsks system_file:file execute_no_trans;
allow efsks tombstone_data_file:dir { open getattr read search ioctl };
allow efsks tombstones_data_file:dir { open getattr read search ioctl };
allow efsks usb_device:chr_file { { { getattr open read ioctl lock } { open append write } } { getattr execute execute_no_trans } };
allow empty_service empty_service_exec:file { entrypoint open read execute getattr };
allow empty_service empty_service_tmpfs:file { read write };
allow empty_service init:process sigchld;
allow energy-awareness energy-awareness_exec:file { entrypoint open read execute getattr };
allow energyawareness energyawareness_exec:file { entrypoint open read execute getattr };
allow energyawareness energyawareness_tmpfs:file { read write };
allow energyawareness init:process sigchld;
allow energy-awareness init_shell:fd use;
allow energy-awareness init_shell:process sigchld;
allow energy-awareness pta_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow energyawareness pta_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow energy-awareness self:capability net_admin;
allow energyawareness self:capability net_admin;
allow energy-awareness self:netlink_kobject_uevent_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow energyawareness self:netlink_kobject_uevent_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow energy-awareness uio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow energyawareness uio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow epmd app_data_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow epmd app_data_type:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd { app_data_type system_data_file }:dir { { { open getattr read search ioctl } { open search write add_name remove_name } } rmdir };
allow epmd { app_data_type system_data_file }:file { getattr unlink };
allow epmd { app_data_type system_data_file }:lnk_file { getattr unlink };
allow epmd asec_apk_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton relabelto };
allow epmd asec_apk_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelto };
allow epmd asec_apk_file:lnk_file relabelto;
allow epmd bbccontainer_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow epmd bbccontainer_app_data_backend:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom relabelto };
allow epmd bbccontainer_app_data_backend:dir mounton;
allow epmd bbccontainer_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd bbccontainer_app_data_backend:{ file lnk_file } { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelfrom relabelto };
allow epmd bbccontainer_app_data_backend:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd block_device:dir { open getattr read search ioctl };
allow epmd block_device:file { getattr open read ioctl lock };
allow epmd bugreport_exec:file { execute execute_no_trans };
allow epmd { container_app_data_backend bbccontainer_app_data_backend media_rw_data_file system_data_file app_data_type } :dir { { { open getattr read search ioctl } { open search write add_name remove_name } } rmdir };
allow epmd { container_app_data_backend bbccontainer_app_data_backend media_rw_data_file system_data_file app_data_type } :dir { relabelfrom relabelto };
allow epmd { container_app_data_backend bbccontainer_app_data_backend media_rw_data_file system_data_file app_data_type } :{ file lnk_file } { getattr unlink };
allow epmd { container_app_data_backend bbccontainer_app_data_backend media_rw_data_file system_data_file app_data_type } :{ file lnk_file } { relabelfrom relabelto };
allow epmd container_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow epmd container_app_data_backend:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom relabelto };
allow epmd container_app_data_backend:dir mounton;
allow epmd container_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd container_app_data_backend:{ file lnk_file } { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelfrom relabelto };
allow epmd container_app_data_backend:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd container_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow epmd container_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd container_app_data_file:filesystem { relabelfrom relabelto mount unmount };
allow epmd container_app_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd container_app:dir { open getattr read search ioctl };
allow epmd container_app:fd use;
allow epmd container_app:fd use;
allow epmd container_app:file { getattr open read ioctl lock };
allow epmd container_app_sdcard_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow epmd container_app_sdcard_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd container_app_sdcard_file:filesystem { relabelfrom relabelto mount unmount };
allow epmd container_app_sdcard_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd container_system_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow epmd container_system_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd domain:dir { read search open getattr };
allow epmd domain:{ file lnk_file } { read getattr open };
allow epmd domain:process { signal sigkill };
allow epmd dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow epmd dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd dumpstate_exec:file { execute execute_no_trans };
allow epmd dumpstate_exec:file { getattr open read execute };
allow epmd dumpstate:process { siginh rlimitinh };
allow epmd dumpstate:process transition;
allow epmd dumpsys_exec:file { execute execute_no_trans };
allow epmd efs_file:dir { open getattr read search ioctl };
allow epmd epmd_exec:file { entrypoint open read execute getattr };
allow epmd epmd_tmpfs:file { read write };
allow epmd firmware:dir { open getattr read search ioctl };
allow epmd firmware:file { getattr open read ioctl lock };
allow epmd init:key write;
allow epmd init:process sigchld;
allow epmd init:unix_stream_socket connectto;
allow epmd init:unix_stream_socket connectto;
allow epmd irm_media_data_file:{ dir file lnk_file } { relabelfrom relabelto };
allow epmd irm_media_data_file:dir { { { open getattr read search ioctl } { open search write add_name remove_name } } rmdir };
allow epmd irm_media_data_file:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd kernel:dir { open getattr read search ioctl };
allow epmd kernel:file { getattr open read ioctl lock };
allow epmd kernel:key *;
allow epmd kernel:system module_request;
allow epmd km_fips_prop:property_service set;
allow epmd knox_clipboard_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow epmd knox_clipboard_file:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd knox_dar_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow epmd knox_dar_shared_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow epmd labeledfs:filesystem mount;
allow epmd labeledfs:filesystem { mount unmount };
allow epmd labeledfs:filesystem relabelfrom;
allow epmd media_rw_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton relabelfrom relabelto };
allow epmd media_rw_data_file:dir mounton;
allow epmd media_rw_data_file:{ file lnk_file } { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelfrom relabelto };
allow epmd mobicoredaemon:unix_stream_socket connectto;
allow epmd mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow epmd mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow epmd personal_page_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow epmd personal_page_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd property_socket:sock_file write;
allow epmd property_socket:sock_file write;
allow epmd qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow epmd rootfs:dir mounton;
allow epmd rootfs:dir mounton;
allow epmd sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow epmd sdcard_type:dir mounton;
allow epmd sdcard_type:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow epmd sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd sdcard_type:filesystem { mount remount unmount };
allow epmd sdcard_type:file unlink;
allow epmd self:capability2 syslog;
allow epmd self:capability { chown dac_override fowner fsetid sys_admin sys_boot sys_resource setuid net_raw setgid kill ipc_lock };
allow epmd self:capability sys_ptrace;
allow epmd system_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelto relabelfrom };
allow epmd system_app_data_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelfrom relabelto };
allow epmd system_data_file:dir { create { { open getattr read search ioctl } { open search write add_name remove_name } } mounton };
allow epmd system_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow epmd system_data_file:dir mounton;
allow epmd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow epmd tmpfs:dir mounton;
allow epmd users_system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow epmd users_system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow exyrngd exyrngd_exec:file { entrypoint open read execute getattr };
allow exyrngd exyrngd_tmpfs:file { read write };
allow exyrngd hw_random_device:chr_file { getattr open read ioctl lock };
allow exyrngd init:process sigchld;
allow exyrngd self:capability sys_admin;
allow felica felica_tmpfs:file execute;
allow felica felica_tmpfs:file { read write };
allow felicalock felicalock_tmpfs:file execute;
allow felicalock felicalock_tmpfs:file { read write };
allow fidodaemon fidodaemon_exec:file { entrypoint open read execute getattr };
allow fidodaemon fidodaemon_service:service_manager add;
allow fidodaemon fidodaemon_tmpfs:file { read write };
allow fidodaemon firmware_file:dir { open getattr read search ioctl };
allow fidodaemon firmware_file:file { getattr open read ioctl lock };
allow fidodaemon init:process sigchld;
allow fidodaemon init:unix_stream_socket connectto;
allow fidodaemon platform_app:binder { call transfer };
allow fidodaemon platform_app:binder transfer;
allow fidodaemon platform_app:fd use;
allow fidodaemon property_socket:sock_file write;
allow fidodaemon qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow fidodaemon servicemanager:binder { call transfer };
allow fidodaemon s_platform_app:binder { call transfer };
allow fidodaemon s_platform_app:binder transfer;
allow fidodaemon s_platform_app:fd use;
allow fidodaemon s_system_app:binder { call transfer };
allow fidodaemon s_system_app:binder transfer;
allow fidodaemon s_system_app:fd use;
allow fidodaemon system_app:binder { call transfer };
allow fidodaemon system_app:binder transfer;
allow fidodaemon system_app:fd use;
allow fidodaemon tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow file_type ecryptfs:filesystem associate;
allow file_type labeledfs:filesystem associate;
allow file_type modem_firmware:filesystem associate;
allow file_type rootfs:filesystem associate;
allow file_type security_firmware:filesystem associate;
allow file_type tmpfs:filesystem associate;
allow file_type usbfs:filesystem associate;
allow filtered_google_app anr_data_file:file { getattr open read ioctl lock };
allow filtered_google_app { apk_tmp_file apk_private_tmp_file }:dir { open getattr read search ioctl };
allow filtered_google_app { apk_tmp_file apk_private_tmp_file }:file { getattr open read ioctl lock };
allow filtered_google_app app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow filtered_google_app app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow filtered_google_app app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow filtered_google_app asec_apk_file:file { getattr open read ioctl lock };
allow filtered_google_app asec_public_file:file { execute execmod };
allow filtered_google_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow filtered_google_app bbccontainer_app_data_backend:file execute;
allow filtered_google_app block_device:blk_file getattr;
allow filtered_google_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow filtered_google_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow filtered_google_app carrier_app:process { getattr sigkill signal ptrace };
allow filtered_google_app container_app_data_backend:dir { open getattr read search ioctl };
allow filtered_google_app container_app_data_backend:file execute;
allow filtered_google_app DMM-daemon:unix_stream_socket connectto;
allow filtered_google_app download_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow filtered_google_app download_file:fd use;
allow filtered_google_app download_file:file { unlink { { getattr open read ioctl lock } { open append write } } };
allow filtered_google_app filtered_google_app:process { getattr sigkill signal ptrace };
allow filtered_google_app filtered_untrusted_app:process { getattr sigkill signal ptrace };
allow filtered_google_app gad_untrusted_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow filtered_google_app gad_untrusted_app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow filtered_google_app gad_untrusted_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow filtered_google_app gad_untrusted_app:process { getattr sigkill signal ptrace };
allow filtered_google_app irm_app:process { getattr sigkill signal ptrace };
allow filtered_google_app itsonclient_app:unix_dgram_socket sendto;
allow filtered_google_app itsonclient_app:unix_stream_socket connectto;
allow filtered_google_app itson_socket:dir { open getattr read search ioctl };
allow filtered_google_app itson_socket:{ file lnk_file } { getattr open read ioctl lock };
allow filtered_google_app itson_socket:sock_file write;
allow filtered_google_app itson_socket:sock_file write;
allow filtered_google_app knox_dar_shared_device:chr_file write;
allow filtered_google_app knox_kap_device:chr_file getattr;
allow filtered_google_app knox_untrusted_app:process { getattr sigkill signal ptrace };
allow filtered_google_app knox_untrusted_app:process sigkill;
allow filtered_google_app llk_untrusted_app:process { getattr sigkill signal ptrace };
allow filtered_google_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow filtered_google_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow filtered_google_app mmb_data_file:sock_file write;
allow filtered_google_app mmb_mw:unix_stream_socket connectto;
allow filtered_google_app mpctl_socket:sock_file write;
allow filtered_google_app mpctl_socket:sock_file write;
allow filtered_google_app mpdecision:unix_dgram_socket sendto;
allow filtered_google_app mpdecision:unix_stream_socket connectto;
allow filtered_google_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow filtered_google_app platform_app_data_file:file { rename unlink };
allow filtered_google_app platform_app_data_file:file { unlink rename };
allow filtered_google_app shell_data_file:dir { open getattr read search ioctl };
allow filtered_google_app shell_data_file:file { getattr open read ioctl lock };
allow filtered_google_app sprintitson_file:dir { open getattr read search ioctl };
allow filtered_google_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow filtered_google_app s_system_app:unix_stream_socket connectto;
allow filtered_google_app s_system_app:unix_stream_socket { read write };
allow filtered_google_app system_app_data_file:file { getattr link unlink rename };
allow filtered_google_app system_app_data_file:file { read write getattr };
allow filtered_google_app system_app:unix_stream_socket connectto;
allow filtered_google_app system_app:unix_stream_socket { read write };
allow filtered_google_app system_server:unix_stream_socket connectto;
allow filtered_google_app trustonicpartner_app:process { getattr sigkill signal ptrace };
allow filtered_google_app tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow filtered_google_app umcagent_app:process { getattr sigkill signal ptrace };
allow filtered_google_app untrusted_app_devpts:chr_file { open getattr read write ioctl };
allow filtered_google_app untrusted_app:process { getattr sigkill signal ptrace };
allow filtered_google_app untrusted_app_tmpfs:file execmod;
allow filtered_google_app untrusted_app_tmpfs:file execute;
allow filtered_google_app untrusted_app_tmpfs:file { read write };
allow filtered_google_app untrusted_app_tmpfs:file write;
allow filtered_google_app vpn_untrusted_app:process { getattr sigkill signal ptrace };
allow filtered_untrusted_app anr_data_file:file { getattr open read ioctl lock };
allow filtered_untrusted_app { apk_tmp_file apk_private_tmp_file }:dir { open getattr read search ioctl };
allow filtered_untrusted_app { apk_tmp_file apk_private_tmp_file }:file { getattr open read ioctl lock };
allow filtered_untrusted_app app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow filtered_untrusted_app app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow filtered_untrusted_app app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow filtered_untrusted_app asec_apk_file:file { getattr open read ioctl lock };
allow filtered_untrusted_app asec_public_file:file { execute execmod };
allow filtered_untrusted_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow filtered_untrusted_app block_device:blk_file getattr;
allow filtered_untrusted_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow filtered_untrusted_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow filtered_untrusted_app container_app_data_backend:dir { open getattr read search ioctl };
allow filtered_untrusted_app DMM-daemon:unix_stream_socket connectto;
allow filtered_untrusted_app download_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow filtered_untrusted_app download_file:fd use;
allow filtered_untrusted_app download_file:file { unlink { { getattr open read ioctl lock } { open append write } } };
allow filtered_untrusted_app gad_untrusted_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow filtered_untrusted_app gad_untrusted_app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow filtered_untrusted_app gad_untrusted_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow filtered_untrusted_app itsonclient_app:unix_dgram_socket sendto;
allow filtered_untrusted_app itsonclient_app:unix_stream_socket connectto;
allow filtered_untrusted_app itson_socket:dir { open getattr read search ioctl };
allow filtered_untrusted_app itson_socket:{ file lnk_file } { getattr open read ioctl lock };
allow filtered_untrusted_app itson_socket:sock_file write;
allow filtered_untrusted_app itson_socket:sock_file write;
allow filtered_untrusted_app knox_dar_shared_device:chr_file write;
allow filtered_untrusted_app knox_kap_device:chr_file getattr;
allow filtered_untrusted_app knox_untrusted_app:process sigkill;
allow filtered_untrusted_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow filtered_untrusted_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow filtered_untrusted_app mmb_data_file:sock_file write;
allow filtered_untrusted_app mmb_mw:unix_stream_socket connectto;
allow filtered_untrusted_app mpctl_socket:sock_file write;
allow filtered_untrusted_app mpctl_socket:sock_file write;
allow filtered_untrusted_app mpdecision:unix_dgram_socket sendto;
allow filtered_untrusted_app mpdecision:unix_stream_socket connectto;
allow filtered_untrusted_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow filtered_untrusted_app platform_app_data_file:file { rename unlink };
allow filtered_untrusted_app shell_data_file:dir { open getattr read search ioctl };
allow filtered_untrusted_app shell_data_file:file { getattr open read ioctl lock };
allow filtered_untrusted_app sprintitson_file:dir { open getattr read search ioctl };
allow filtered_untrusted_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow filtered_untrusted_app s_system_app:unix_stream_socket connectto;
allow filtered_untrusted_app s_system_app:unix_stream_socket { read write };
allow filtered_untrusted_app system_app_data_file:file { read write getattr };
allow filtered_untrusted_app system_app:unix_stream_socket connectto;
allow filtered_untrusted_app system_app:unix_stream_socket { read write };
allow filtered_untrusted_app system_server:unix_stream_socket connectto;
allow filtered_untrusted_app tsdaemon:unix_stream_socket connectto;
allow filtered_untrusted_app tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow filtered_untrusted_app untrusted_app_devpts:chr_file { open getattr read write ioctl };
allow filtered_untrusted_app untrusted_app_tmpfs:file execmod;
allow filtered_untrusted_app untrusted_app_tmpfs:file execute;
allow filtered_untrusted_app untrusted_app_tmpfs:file { read write };
allow fixmo_app anr_data_file:dir search;
allow fixmo_app anr_data_file:file { open append getattr };
allow fixmo_app apk_data_file:dir { open getattr read search ioctl };
allow fixmo_app apk_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow fixmo_app app_data_file:dir search;
allow fixmo_app app_library_file:dir { { open getattr read search ioctl } execmod setattr };
allow fixmo_app app_library_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod setattr };
allow fixmo_app ashmem_device:chr_file execute;
allow fixmo_app bluetooth:binder { call transfer };
allow fixmo_app bluetooth:fd use;
allow fixmo_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow fixmo_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow fixmo_app dalvikcache_data_file:file execute;
allow fixmo_app_data_file labeledfs:filesystem { associate getattr };
allow fixmo_app dex2oat_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow fixmo_app dnsproxyd_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow fixmo_app fixmo_app:binder { call transfer };
allow fixmo_app fixmo_app:binder transfer;
allow fixmo_app fixmo_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow fixmo_app fixmo_app_data_file:file { getattr execute execute_no_trans };
allow fixmo_app fixmo_app_data_file:{ file lnk_file sock_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow fixmo_app fixmo_app:fd use;
allow fixmo_app fixmo_app_tmpfs:file execute;
allow fixmo_app fixmo_app_tmpfs:file { read write };
allow fixmo_app gad_untrusted_app_data_file:dir search;
allow fixmo_app graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow fixmo_app { init surfaceflinger netd isolated_app }:unix_stream_socket { read write connectto getattr shutdown setopt getopt };
allow fixmo_app kernel:system module_request;
allow fixmo_app kgsl_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow fixmo_app knox_untrusted_app:binder { call transfer };
allow fixmo_app knox_untrusted_app:binder transfer;
allow fixmo_app knox_untrusted_app:fd use;
allow fixmo_app labeledfs:filesystem getattr;
allow fixmo_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow fixmo_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow fixmo_app mediaserver:binder { call transfer };
allow fixmo_app mediaserver:binder transfer;
allow fixmo_app mediaserver:fd use;
allow fixmo_app nfc:binder { call transfer };
allow fixmo_app nfc:binder transfer;
allow fixmo_app nfc:fd use;
allow fixmo_app node:{ tcp_socket udp_socket } { node_bind };
allow fixmo_app platform_app:binder { call transfer };
allow fixmo_app platform_app:binder transfer;
allow fixmo_app platform_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow fixmo_app platform_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow fixmo_app platform_app:fd use;
allow fixmo_app port:tcp_socket { name_bind name_connect };
allow fixmo_app port:udp_socket name_bind;
allow fixmo_app qtaguid_device:chr_file { getattr open read ioctl lock };
allow fixmo_app qtaguid_proc:file { { getattr open read ioctl lock } { open append write } };
allow fixmo_app radio:binder { call transfer };
allow fixmo_app radio:binder transfer;
allow fixmo_app radio:fd use;
allow fixmo_app sdcard_internal:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow fixmo_app sdcard_internal:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow fixmo_app self:{ tcp_socket udp_socket netlink_route_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow fixmo_app selinuxfs:filesystem getattr;
allow fixmo_app servicemanager:binder { call transfer };
allow fixmo_app shell_data_file:dir search;
allow fixmo_app shell_data_file:file getattr;
allow fixmo_app shell_exec:file { ioctl read getattr lock execute execute_no_trans open };
allow fixmo_app s_platform_app:binder { call transfer };
allow fixmo_app s_platform_app:binder transfer;
allow fixmo_app s_platform_app:fd use;
allow fixmo_app s_system_app:binder { call transfer };
allow fixmo_app s_system_app:binder transfer;
allow fixmo_app s_system_app:fd use;
allow fixmo_app surfaceflinger:binder { call transfer };
allow fixmo_app surfaceflinger:binder transfer;
allow fixmo_app surfaceflinger:fd use;
allow fixmo_app system_app:binder { call transfer };
allow fixmo_app system_app:binder transfer;
allow fixmo_app system_app:fd use;
allow fixmo_app { system_app s_system_app }:{ file lnk_file fifo_file } { { getattr open read ioctl lock } { open append write } };
allow fixmo_app system:binder { call transfer };
allow fixmo_app system:binder transfer;
allow fixmo_app system_data_file:dir { open getattr read search ioctl };
allow fixmo_app system_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow fixmo_app system:fd use;
allow fixmo_app system_file:dir { open getattr read search ioctl };
allow fixmo_app system_file:file execute_no_trans;
allow fixmo_app system_file:{ file lnk_file } { getattr open read ioctl lock };
allow fixmo_app { system system_app s_system_app }:dir { open getattr read search ioctl };
allow fixmo_app { system system_app s_system_app }:{ tcp_socket udp_socket unix_stream_socket } { setopt read write getopt };
allow fixmo_app tombstone_data_file:dir search;
allow fixmo_app tombstone_data_file:file { open append getattr };
allow fixmo_app ump_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow fixmo_app ump_device:sock_file { getattr open read ioctl lock };
allow fixmo_app video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow fixmo_app zygote:binder { call transfer };
allow fixmo_app zygote:binder transfer;
allow fixmo_app zygote:fd use;
allow fixmo_app zygote:process sigchld;
allow fixmo_app zygote_tmpfs:file { getattr open read ioctl lock };
allow fixmo_app zygote:unix_stream_socket { getopt getattr };
allow flash_recovery block_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow flash_recovery block_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow flash_recovery block_device:file { { getattr open read ioctl lock } { open append write } };
allow flash_recovery bootblk_device:blk_file { getattr open read ioctl lock };
allow flash_recovery bugreport_exec:file { execute execute_no_trans };
allow flash_recovery cache_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow flash_recovery cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow flash_recovery dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow flash_recovery dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow flash_recovery dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow flash_recovery dumpstate_exec:file { execute execute_no_trans };
allow flash_recovery dumpsys_exec:file { execute execute_no_trans };
allow flash_recovery dw_mmc_device:dir { { open getattr read search ioctl } add_name write };
allow flash_recovery dw_mmc_device:lnk_file { getattr open read ioctl lock };
allow flash_recovery emmcblk_device:blk_file { getattr open read ioctl lock };
allow flash_recovery emmcblk_device:blk_file { { { getattr open read ioctl lock } { open append write } } setattr };
allow flash_recovery flash_recovery_sh_file:file { entrypoint { getattr open read ioctl lock } };
allow flash_recovery media_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow flash_recovery media_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow flash_recovery media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow flash_recovery media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow flash_recovery recoveryblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow flash_recovery self:capability { chown dac_override fowner fsetid };
allow flash_recovery shell_data_file:dir remove_name;
allow flash_recovery shell_data_file:file { create unlink };
allow flash_recovery shell_exec:file { getattr open read ioctl lock };
allow flash_recovery system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow flash_recovery system_data_file:file unlink;
allow flash_recovery system_file:file { getattr execute execute_no_trans };
allow fs_type self:filesystem associate;
allow ftm_ptt dnsproxyd_socket:sock_file write;
allow ftm_ptt ftm_ptt_exec:file { entrypoint open read execute getattr };
allow ftm_ptt ftm_ptt_tmpfs:file { read write };
allow ftm_ptt fwmarkd_socket:sock_file write;
allow ftm_ptt init:process sigchld;
allow ftm_ptt netd:unix_stream_socket connectto;
allow ftm_ptt node:{ tcp_socket udp_socket } node_bind;
allow ftm_ptt port:tcp_socket name_connect;
allow ftm_ptt port:{ tcp_socket udp_socket } name_bind;
allow ftm_ptt self:capability net_raw;
allow ftm_ptt self:netlink_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow fuse xsdcardfs:filesystem associate;
allow gad_untrusted_app anr_data_file:file { getattr open read ioctl lock };
allow gad_untrusted_app { apk_tmp_file apk_private_tmp_file }:dir { open getattr read search ioctl };
allow gad_untrusted_app { apk_tmp_file apk_private_tmp_file }:file { getattr open read ioctl lock };
allow gad_untrusted_app app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow gad_untrusted_app app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow gad_untrusted_app app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gad_untrusted_app asec_apk_file:file { getattr open read ioctl lock };
allow gad_untrusted_app asec_public_file:file { execute execmod };
allow gad_untrusted_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow gad_untrusted_app block_device:blk_file getattr;
allow gad_untrusted_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow gad_untrusted_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gad_untrusted_app container_app_data_backend:dir { open getattr read search ioctl };
allow gad_untrusted_app DMM-daemon:unix_stream_socket connectto;
allow gad_untrusted_app download_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow gad_untrusted_app download_file:fd use;
allow gad_untrusted_app download_file:file { unlink { { getattr open read ioctl lock } { open append write } } };
allow gad_untrusted_app gad_untrusted_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow gad_untrusted_app gad_untrusted_app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow gad_untrusted_app gad_untrusted_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gad_untrusted_app good_app:binder { call transfer };
allow gad_untrusted_app good_app:binder transfer;
allow gad_untrusted_app good_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow gad_untrusted_app good_app_data_file:{ file lnk_file sock_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gad_untrusted_app good_app:fd use;
allow gad_untrusted_app good_app:{ tcp_socket udp_socket netlink_route_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow gad_untrusted_app itsonclient_app:unix_dgram_socket sendto;
allow gad_untrusted_app itsonclient_app:unix_stream_socket connectto;
allow gad_untrusted_app itson_socket:dir { open getattr read search ioctl };
allow gad_untrusted_app itson_socket:{ file lnk_file } { getattr open read ioctl lock };
allow gad_untrusted_app itson_socket:sock_file write;
allow gad_untrusted_app itson_socket:sock_file write;
allow gad_untrusted_app knox_dar_shared_device:chr_file write;
allow gad_untrusted_app knox_kap_device:chr_file getattr;
allow gad_untrusted_app knox_untrusted_app:process sigkill;
allow gad_untrusted_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow gad_untrusted_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gad_untrusted_app mmb_data_file:sock_file write;
allow gad_untrusted_app mmb_mw:unix_stream_socket connectto;
allow gad_untrusted_app mpctl_socket:sock_file write;
allow gad_untrusted_app mpctl_socket:sock_file write;
allow gad_untrusted_app mpdecision:unix_dgram_socket sendto;
allow gad_untrusted_app mpdecision:unix_stream_socket connectto;
allow gad_untrusted_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow gad_untrusted_app newAttr38:binder { call transfer };
allow gad_untrusted_app newAttr39:dir { open getattr read search ioctl };
allow gad_untrusted_app newAttr39:fd use;
allow gad_untrusted_app newAttr39:{ file lnk_file } { getattr open read ioctl lock };
allow gad_untrusted_app newAttr5:binder { call transfer };
allow gad_untrusted_app newAttr5:binder transfer;
allow gad_untrusted_app newAttr5:fd use;
allow gad_untrusted_app platform_app_data_file:file { rename unlink };
allow gad_untrusted_app shell_data_file:dir { open getattr read search ioctl };
allow gad_untrusted_app shell_data_file:file { getattr open read ioctl lock };
allow gad_untrusted_app sprintitson_file:dir { open getattr read search ioctl };
allow gad_untrusted_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow gad_untrusted_app s_system_app:unix_stream_socket connectto;
allow gad_untrusted_app s_system_app:unix_stream_socket { read write };
allow gad_untrusted_app system_app_data_file:file { read write getattr };
allow gad_untrusted_app system_app:unix_stream_socket connectto;
allow gad_untrusted_app system_app:unix_stream_socket { read write };
allow gad_untrusted_app system_server:unix_stream_socket connectto;
allow gad_untrusted_app tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow gad_untrusted_app untrusted_app_devpts:chr_file { open getattr read write ioctl };
allow gad_untrusted_app untrusted_app_tmpfs:file execmod;
allow gad_untrusted_app untrusted_app_tmpfs:file execute;
allow gad_untrusted_app untrusted_app_tmpfs:file { read write };
allow geomagneticd geomagneticd_exec:file { entrypoint open read execute getattr };
allow geomagneticd geomagneticd_tmpfs:file { read write };
allow geomagneticd init:process sigchld;
allow geomagneticd init:unix_stream_socket connectto;
allow geomagneticd input_device:chr_file { getattr open read ioctl lock };
allow geomagneticd input_device:dir { open getattr read search ioctl };
allow geomagneticd property_socket:sock_file write;
allow geomagneticd sysfs:file { open append write };
allow geomagneticd sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow geomagneticd system_data_file:dir { open search write add_name remove_name };
allow geomagneticd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow good_app anr_data_file:dir search;
allow good_app anr_data_file:file { open append getattr };
allow good_app apk_data_file:dir { open getattr read search ioctl };
allow good_app apk_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow good_app app_library_file:dir { { open getattr read search ioctl } execmod setattr };
allow good_app app_library_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod setattr };
allow good_app ashmem_device:chr_file execute;
allow good_app bluetooth:binder { call transfer };
allow good_app bluetooth:binder transfer;
allow good_app bluetooth:fd use;
allow good_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow good_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow good_app dalvikcache_data_file:file execute;
allow good_app_data_file labeledfs:filesystem { associate getattr };
allow good_app devpts:chr_file getattr;
allow good_app dex2oat_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow good_app dnsproxyd_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow good_app fwmarkd_socket:sock_file write;
allow good_app gad_untrusted_app:binder { call transfer };
allow good_app gad_untrusted_app:binder transfer;
allow good_app gad_untrusted_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow good_app gad_untrusted_app_data_file:{ file lnk_file sock_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow good_app gad_untrusted_app:fd use;
allow good_app gad_untrusted_app:{ tcp_socket udp_socket netlink_route_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow good_app good_app:binder { call transfer };
allow good_app good_app:binder transfer;
allow good_app good_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow good_app good_app_data_file:file execute;
allow good_app good_app_data_file:{ file lnk_file sock_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow good_app good_app:fd use;
allow good_app good_app_tmpfs:file execute;
allow good_app good_app_tmpfs:file { read write };
allow good_app graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow good_app { init surfaceflinger netd isolated_app }:unix_stream_socket { read write connectto getattr shutdown setopt getopt };
allow good_app installd:fd use;
allow good_app kernel:system module_request;
allow good_app keychain_data_file:dir search;
allow good_app keychain_data_file:file { read getattr open };
allow good_app keystore:binder { call transfer };
allow good_app keystore:fd use;
allow good_app kgsl_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow good_app labeledfs:filesystem getattr;
allow good_app media_rw_data_file:dir { open getattr read search ioctl };
allow good_app media_rw_data_file:file { getattr open read ioctl lock };
allow good_app mediaserver:binder { call transfer };
allow good_app mediaserver:binder transfer;
allow good_app mediaserver:fd use;
allow good_app misc_user_data_file:dir search;
allow good_app mobicoredaemon:unix_stream_socket connectto;
allow good_app mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow good_app nfc:binder { call transfer };
allow good_app nfc:binder transfer;
allow good_app nfc:fd use;
allow good_app node:{ tcp_socket udp_socket } { node_bind };
allow good_app platform_app:binder { call transfer };
allow good_app platform_app:binder transfer;
allow good_app platform_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow good_app platform_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow good_app platform_app:fd use;
allow good_app port:tcp_socket { name_bind name_connect };
allow good_app port:udp_socket name_bind;
allow good_app qtaguid_proc:file { { getattr open read ioctl lock } { open append write } };
allow good_app radio:binder { call transfer };
allow good_app radio:binder transfer;
allow good_app radio:fd use;
allow good_app sdcard_internal:dir { open getattr read search ioctl };
allow good_app sdcard_internal:file { getattr open read ioctl lock };
allow good_app self:{ tcp_socket udp_socket netlink_route_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow good_app selinuxfs:filesystem getattr;
allow good_app servicemanager:binder { call transfer };
allow good_app shared_relro_file:dir search;
allow good_app shared_relro_file:file { read getattr open };
allow good_app shell_data_file:dir search;
allow good_app shell_data_file:file getattr;
allow good_app s_platform_app:binder { call transfer };
allow good_app s_platform_app:binder transfer;
allow good_app s_platform_app:fd use;
allow good_app s_system_app:binder { call transfer };
allow good_app s_system_app:binder transfer;
allow good_app s_system_app:fd use;
allow good_app surfaceflinger:binder { call transfer };
allow good_app surfaceflinger:binder transfer;
allow good_app surfaceflinger:fd use;
allow good_app system_app:binder { call transfer };
allow good_app system_app:binder transfer;
allow good_app system_app_data_file:dir search;
allow good_app system_app:fd use;
allow good_app { system_app s_system_app }:{ file lnk_file fifo_file } { { getattr open read ioctl lock } { open append write } };
allow good_app system:binder { call transfer };
allow good_app system:binder transfer;
allow good_app system_data_file:dir { open getattr read search ioctl };
allow good_app system_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow good_app system:fd use;
allow good_app system_file:dir { open getattr read search ioctl };
allow good_app system_file:file { execute_no_trans };
allow good_app system_file:{ file lnk_file } { getattr open read ioctl lock };
allow good_app { system system_app s_system_app }:dir { open getattr read search ioctl };
allow good_app { system system_app s_system_app }:{ tcp_socket udp_socket unix_stream_socket } { setopt read write getopt };
allow good_app tombstone_data_file:dir search;
allow good_app tombstone_data_file:file { open append getattr };
allow good_app ump_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow good_app video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow good_app zygote:binder { call transfer };
allow good_app zygote:binder transfer;
allow good_app zygote_exec:file getattr;
allow good_app zygote_exec:lnk_file read;
allow good_app zygote:fd use;
allow good_app zygote:process sigchld;
allow good_app zygote_tmpfs:file { getattr open read ioctl lock };
allow good_app zygote:unix_stream_socket { getopt getattr };
allow gpsd app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow gpsd app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gpsd gad_untrusted_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow gpsd gad_untrusted_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gpsd gps_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow gpsd gps_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gpsd gps_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow gpsd gpsd_exec:file { entrypoint open read execute getattr };
allow gpsd gpsd_tmpfs:file { read write };
allow gpsd gps_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gpsd init:process sigchld;
allow gpsd init:unix_stream_socket connectto;
allow gpsd property_socket:sock_file write;
allow gpsd rild_socket:sock_file write;
allow gpsd rild:unix_stream_socket connectto;
allow gpsd self:capability { net_admin net_raw };
allow gpsd servicemanager:binder { call transfer };
allow gpsd shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow gpsd shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow gpsd sysfs:file { { getattr open read ioctl lock } { open append write } };
allow gpsd sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow gpsd system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow gpsd system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow gpsd system_data_file:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gpsd system_data_file:fifo_file { { getattr open read ioctl lock } { open append write } };
allow gpsd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gpsd system_data_file:file { { getattr open read ioctl lock } { open append write } };
allow gpsd system_file:file { getattr execute execute_no_trans };
allow gpsd system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow gpsd system_server:binder { call transfer };
allow gpsd system_server:binder transfer;
allow gpsd system_server:fd use;
allow gpsd system:unix_stream_socket { read write setopt };
allow gpsd uart_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow gpsone_daemon gps_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow gpsone_daemon gps_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gpsone_daemon qmuxd:unix_stream_socket connectto;
allow gpsone_daemon qmux_gps_socket:dir { open search write add_name remove_name };
allow gpsone_daemon qmux_gps_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gpsone_daemon self:socket *;
allow gpsone_daemon system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow gpsone_daemon system_data_file:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gpu_snapshotd gpu_snapshotd_exec:file { entrypoint open read execute getattr };
allow gpu_snapshotd gpu_snapshotd_tmpfs:file { read write };
allow gpu_snapshotd init:process sigchld;
allow gsiff_daemon kernel:system module_request;
allow gsiff_daemon qmuxd:unix_stream_socket connectto;
allow gsiff_daemon qmux_gps_socket:dir { open search write add_name remove_name };
allow gsiff_daemon qmux_gps_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gsiff_daemon self:socket *;
allow gsiff_daemon servicemanager:binder { call transfer };
allow gsiff_daemon servicemanager:binder { call transfer };
allow gsiff_daemon servicemanager:fd use;
allow gsiff_daemon system:binder { call transfer };
allow gsiff_daemon system_data_file:dir { open search write add_name remove_name };
allow gsiff_daemon system_data_file:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gsiff_daemon system_data_file:file { getattr open read ioctl lock };
allow gsiff_daemon system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow gsiff_daemon system:fd use;
allow gsiff_daemon system_server:binder transfer;
allow gsiff_daemon system:unix_stream_socket { read write setopt };
allow hbtp bu21150_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow hbtp hbtp_cfg_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow hbtp hbtp_cfg_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow hbtp hbtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow hbtp hbtp_exec:file { entrypoint open read execute getattr };
allow hbtp hbtp_log_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow hbtp hbtp_log_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow hbtp hbtp_tmpfs:file { read write };
allow hbtp init:process sigchld;
allow hbtp self:netlink_kobject_uevent_socket { create read setopt bind };
allow hbtp servicemanager:binder { call transfer };
allow hci_attach bluetooth_efs_file:dir { open getattr read search ioctl };
allow hci_attach bluetooth_efs_file:file { getattr open read ioctl lock };
allow hci_attach hci_attach_dev:chr_file { { getattr open read ioctl lock } { open append write } };
allow hci_attach hci_attach_exec:file { entrypoint open read execute getattr };
allow hci_attach hci_attach_tmpfs:file { read write };
allow hci_attach init:process sigchld;
allow hci_attach kernel:system module_request;
allow healthd app_data_file:file { open append write };
allow healthd app_efs_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow healthd app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow healthd ashmem_device:chr_file execute;
allow healthd cache_file:file write;
allow healthd device:dir { write add_name remove_name };
allow healthd dumpsys:binder transfer;
allow healthd gad_untrusted_app_data_file:file { open append write };
allow healthd graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow healthd graphics_device:dir { open getattr read search ioctl };
allow healthd healthd_service:service_manager add;
allow healthd ime_app:binder transfer;
allow healthd init:process sigchld;
allow healthd init:unix_stream_socket connectto;
allow healthd init:unix_stream_socket { read write };
allow healthd input_device:chr_file { getattr open read ioctl lock };
allow healthd input_device:dir { open getattr read search ioctl };
allow healthd klog_device:chr_file { create open write unlink };
allow healthd newAttr51:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow healthd newAttr51:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow healthd platform_app_data_file:file { open append write };
allow healthd proc_sysrq:file { { getattr open read ioctl lock } { open append write } };
allow healthd property_socket:sock_file write;
allow healthd pstorefs:dir { open getattr read search ioctl };
allow healthd pstorefs:file { getattr open read ioctl lock };
allow healthd radio:binder transfer;
allow healthd rootfs:file { entrypoint open read execute getattr };
allow healthd self:capability2 block_suspend;
allow healthd self:capability { dac_read_search dac_override fowner fsetid };
allow healthd self:capability { net_admin mknod sys_tty_config };
allow healthd self:capability sys_boot;
allow healthd self:netlink_kobject_uevent_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow healthd self:process execmem;
allow healthd servicemanager:binder { call transfer };
allow healthd shell:binder transfer;
allow healthd s_system_app:binder transfer;
allow healthd s_system_app:fd use;
allow healthd sysfs_battery_supply:dir search;
allow healthd sysfs_battery_supply:file { read open };
allow healthd sysfs_battery_supply:file write;
allow healthd sysfs:file write;
allow healthd sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow healthd sysfs_thermal:dir { open getattr read search ioctl };
allow healthd sysfs_thermal:{ file lnk_file } { getattr open read ioctl lock };
allow healthd sysfs_usb_supply:dir search;
allow healthd sysfs_usb_supply:file { read open };
allow healthd sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow healthd system_app:binder transfer;
allow healthd system_app:fd use;
allow healthd system_prop:property_service set;
allow healthd system_server:binder { call transfer };
allow healthd system_server:fd use;
allow healthd tmpfs:chr_file { read write };
allow healthd tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow healthd vold:binder transfer;
allow hostapd cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow hostapd cgroup:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow hostapd efs_file:dir { open getattr read search ioctl };
allow hostapd efs_file:file { getattr open read ioctl lock };
allow hostapd hostapd_exec:file { entrypoint open read execute getattr };
allow hostapd kernel:system module_request;
allow hostapd netd:fd use;
allow hostapd netd:fifo_file { read write };
allow hostapd netd:fifo_file { read write };
allow hostapd netd:netlink_kobject_uevent_socket { read write };
allow hostapd netd:netlink_nflog_socket { read write };
allow hostapd netd:netlink_route_socket { read write };
allow hostapd netd:process sigchld;
allow hostapd netd:udp_socket { read write };
allow hostapd netd:unix_dgram_socket { read write };
allow hostapd netd:unix_dgram_socket sendto;
allow hostapd netd:unix_stream_socket { read write };
allow hostapd self:capability { net_admin net_raw setuid setgid };
allow hostapd self:netlink_route_socket { bind create };
allow hostapd self:netlink_route_socket nlmsg_write;
allow hostapd self:netlink_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow hostapd self:packet_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow hostapd self:udp_socket { create ioctl };
allow hostapd system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow hostapd system_data_file:file { { getattr open read ioctl lock } { open append write } };
allow hostapd wifi_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow hostapd wifi_data_file:file { { getattr open read ioctl lock } { open append write } };
allow hostapd wifi_data_file:sock_file { create setattr write unlink };
allow hostapd wifi_efs_file:dir { open getattr read search ioctl };
allow hostapd wifi_efs_file:file { getattr open read ioctl lock };
allow hostapd wpa_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow hostapd wpa_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow hvdcp cgroup:dir { create add_name };
allow hvdcp hvdcp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow hvdcp hvdcp_exec:file { entrypoint open read execute getattr };
allow hvdcp hvdcp_tmpfs:file { read write };
allow hvdcp init:process sigchld;
allow hvdcp self:capability { setgid setuid };
allow hvdcp self:netlink_kobject_uevent_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow hvdcp sysfs_battery_supply:dir { search };
allow hvdcp sysfs_battery_supply:file { { getattr open read ioctl lock } { open append write } };
allow hvdcp sysfs_usb_supply:dir { search };
allow hvdcp sysfs_usb_supply:file { { getattr open read ioctl lock } { open append write } };
allow icd block_device:dir { open getattr read search ioctl };
allow icd charon_exec:file { getattr open read ioctl lock };
allow icd cs_exec:file { getattr open read ioctl lock };
allow icd device:file { open append write };
allow icd drmserver_exec:file { getattr open read ioctl lock };
allow icd icd_exec:file { entrypoint open read execute getattr };
allow icd icd_tmpfs:file { read write };
allow icd init:process sigchld;
allow icd keystore_exec:file { getattr open read ioctl lock };
allow icd mediaserver_exec:file { getattr open read ioctl lock };
allow icd playready_exec:file { getattr open read ioctl lock };
allow icd qseecomd_exec:file { getattr open read ioctl lock };
allow icd tzic_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app alarm_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app anr_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app anr_data_file:dir { { open getattr read search ioctl } add_name write };
allow ime_app anr_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app anr_data_file:file { getattr link unlink rename };
allow ime_app apk_data_file:dir { open getattr read search ioctl };
allow ime_app app_data_file:file { execute execmod };
allow ime_app appdomain:binder { call transfer };
allow ime_app appdomain:fd use;
allow ime_app app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app app_library_file:file { getattr open read ioctl lock };
allow ime_app asec_apk_file:dir search;
allow ime_app asec_apk_file:file { getattr open read ioctl lock };
allow ime_app asec_apk_file:file { getattr open read ioctl lock };
allow ime_app asec_image_file:dir { open getattr read search ioctl };
allow ime_app at_distributor:unix_stream_socket connectto;
allow ime_app ATFWD-daemon:blk_file { getattr open read ioctl lock };
allow ime_app audit_log:file { open append write };
allow ime_app backup_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app backup_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow ime_app bbccontainer_app_data_backend:lnk_file { getattr open read ioctl lock };
allow ime_app bintvoutservice:binder { call transfer };
allow ime_app bintvoutservice:fd use;
allow ime_app block_device:blk_file { getattr ioctl lock append };
allow ime_app block_device:lnk_file { getattr open read ioctl lock };
allow ime_app bugreport_exec:file { execute execute_no_trans };
allow ime_app cache_backup_file:file { getattr link unlink rename };
allow ime_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app carrier_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app carrier_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app carrier_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app carrier_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app cgroup:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app connfwexe:unix_stream_socket connectto;
allow ime_app container_app_data_backend:dir { open getattr read search ioctl };
allow ime_app container_app_data_backend:lnk_file { getattr open read ioctl lock };
allow ime_app container_app:dir { open getattr read search ioctl };
allow ime_app containerdomain:binder { call transfer };
allow ime_app containerdomain:fd use;
allow ime_app cpk_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app cpk_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app csc_prop:property_service set;
allow ime_app cs_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow ime_app cs_socket:sock_file write;
allow ime_app cs:unix_stream_socket connectto;
allow ime_app cs:unix_stream_socket connectto;
allow ime_app ctl_bugreport_prop:property_service set;
allow ime_app ctl_default_prop:property_service set;
allow ime_app ctl_dumpstate_prop:property_service set;
allow ime_app dalvikcache_data_file:dir { open getattr read search ioctl };
allow ime_app debugfs:file { getattr open read ioctl lock };
allow ime_app debug_prop:property_service set;
allow ime_app device:file { getattr open read ioctl lock };
allow ime_app device:sock_file write;
allow ime_app device:sock_file write;
allow ime_app dhcp_data_file:file { getattr open read ioctl lock };
allow ime_app dhcp_exec:file { getattr execute execute_no_trans };
allow ime_app dhcp_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ime_app diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app diagexe:unix_stream_socket connectto;
allow ime_app dnsproxyd_socket:sock_file { open append write };
allow ime_app downfilters_lib_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app downfilters_lib_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app drm_data_file:dir { { open getattr read search ioctl } add_name remove_name };
allow ime_app drm_data_file:file { getattr open read ioctl lock };
allow ime_app drm_playready_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow ime_app drm_playready_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app drm_security_system_file:dir { open getattr read search ioctl };
allow ime_app dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app dumpstate_exec:file { execute execute_no_trans };
allow ime_app dumpstate_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow ime_app dumpsys_exec:file { execute execute_no_trans };
allow ime_app dw_mmc_device:dir { open getattr read search ioctl };
allow ime_app dw_mmc_device:file { { getattr open read ioctl lock } { open append write } };
allow ime_app ecryptfs:filesystem getattr;
allow ime_app efs_file:file { create setattr open ioctl lock append getattr link unlink rename };
allow ime_app epmd:unix_stream_socket connectto;
allow ime_app epm_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow ime_app epm_socket:sock_file write;
allow ime_app firmware:file { getattr open read ioctl lock };
allow ime_app gad_untrusted_app_data_file:file { execute execmod };
allow ime_app gps_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app gps_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app healthd:binder { call transfer };
allow ime_app healthd:fd use;
allow ime_app hidden_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app hidden_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app icd_device:chr_file { getattr open read ioctl lock };
allow ime_app icd_exec:file { getattr open read ioctl lock };
allow ime_app ime_app_tmpfs:file execute;
allow ime_app ime_app_tmpfs:file { read write };
allow ime_app ims_service:service_manager add;
allow ime_app init:process signull;
allow ime_app init:unix_dgram_socket sendto;
allow ime_app init:unix_stream_socket connectto;
allow ime_app init:unix_stream_socket connectto;
allow ime_app init:unix_stream_socket setopt;
allow ime_app input_device:chr_file { read write ioctl open };
allow ime_app IPSecService:unix_stream_socket connectto;
allow ime_app ipsec_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow ime_app iss_efs_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow ime_app iss_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow ime_app jackservice:binder { call transfer };
allow ime_app jackservice:fd use;
allow ime_app kernel:process setsched;
allow ime_app kernel:system module_request;
allow ime_app kernel:system syslog_read;
allow ime_app keychain_data_file:dir { open getattr read search ioctl };
allow ime_app keychain_data_file:file { getattr open read ioctl lock };
allow ime_app keystore:keystore_key { test get insert delete exist saw reset password lock unlock zero sign verify grant duplicate clear_uid };
allow ime_app knox_clipboard_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow ime_app knox_clipboard_file:file { { getattr open read ioctl lock } { open append write } };
allow ime_app knox_dar_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app knox_kap_device:chr_file { getattr open read ioctl lock };
allow ime_app knox_kap_prop:property_service set;
allow ime_app log_device:chr_file read;
allow ime_app logd_prop:property_service set;
allow ime_app logd_socket:sock_file write;
allow ime_app logd:unix_stream_socket connectto;
allow ime_app log_prop:property_service set;
allow ime_app logwrapper:unix_dgram_socket sendto;
allow ime_app mediaserver:unix_stream_socket connectto;
allow ime_app misc_user_data_file:dir { open getattr read search ioctl };
allow ime_app misc_user_data_file:file { getattr open read ioctl lock };
allow ime_app mm-pp-daemon:unix_stream_socket connectto;
allow ime_app mobexdaemon:unix_stream_socket connectto;
allow ime_app mobicoredaemon:unix_stream_socket connectto;
allow ime_app mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app mpdecision:unix_stream_socket connectto;
allow ime_app msockets_socket:sock_file { open append write };
allow ime_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app mtp_socket:sock_file { open append write };
allow ime_app netd:unix_stream_socket connectto;
allow ime_app net_radio_prop:property_service set;
allow ime_app newAttr17:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app newAttr17:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app newAttr54:dir { open getattr read search ioctl };
allow ime_app newAttr54:{ file lnk_file } { getattr open read ioctl lock };
allow ime_app newAttr90 : dir { open search write add_name remove_name };
allow ime_app newAttr90 : { file lnk_file sock_file fifo_file } { open append write };
allow ime_app node:{ tcp_socket udp_socket } node_bind;
allow ime_app null_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app otadm_efs_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow ime_app otadm_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow ime_app ovr_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app platform_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app platform_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app port:tcp_socket { name_bind name_connect };
allow ime_app port:udp_socket name_bind;
allow ime_app pps_socket:sock_file { open append write };
allow ime_app proc_avc_msg:file { getattr open read ioctl lock };
allow ime_app proc:file { open append };
allow ime_app property_socket:sock_file write;
allow ime_app property_socket:sock_file write;
allow ime_app prov_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app prov_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app qmuxd:unix_stream_socket connectto;
allow ime_app qmux_radio_socket:dir { write add_name };
allow ime_app qmux_radio_socket:sock_file { write create setattr };
allow ime_app qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app qseecomd:unix_dgram_socket sendto;
allow ime_app radio_data_file:file { getattr open read ioctl lock };
allow ime_app s5p_smem_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app samsung_app:lnk_file { getattr open read ioctl lock };
allow ime_app sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app sec_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app seclevel_prop:property_service set;
allow ime_app seclevel_prop:property_service set;
allow ime_app secstarter:unix_dgram_socket sendto;
allow ime_app secure_storage_device:dir { open getattr read search ioctl };
allow ime_app secure_storage_device:sock_file { open append write };
allow ime_app secure_storage:unix_stream_socket connectto;
allow ime_app security_file:dir { open getattr read search ioctl };
allow ime_app security_file:file { getattr open read ioctl lock };
allow ime_app security_spota_file:dir { open getattr read search ioctl };
allow ime_app security_spota_file:file { getattr open read ioctl lock };
allow ime_app self:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app self:netlink_kobject_uevent_socket { read create getattr setattr lock relabelfrom relabelto bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind };
allow ime_app self:netlink_route_socket *;
allow ime_app self:packet_socket { write bind create read setopt };
allow ime_app self:tun_socket create;
allow ime_app self:{ udp_socket tcp_socket rawip_socket } *;
allow ime_app selinuxfs:dir { open getattr read search ioctl };
allow ime_app selinuxfs:file { getattr open read ioctl lock };
allow ime_app sensor_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app sensorhubservice:binder { call transfer };
allow ime_app sensorhubservice:fd use;
allow ime_app sensorhubservice:fifo_file { getattr open read ioctl lock };
allow ime_app shell_data_file:dir { open getattr read search ioctl };
allow ime_app shell_data_file:file { open write };
allow ime_app shell_exec:file { getattr execute execute_no_trans };
allow ime_app shell_prop:property_service set;
allow ime_app socket_device:dir { open search write add_name remove_name };
allow ime_app socket_device:sock_file { create setattr { getattr open read ioctl lock } append { getattr link unlink rename } };
allow ime_app store_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app store_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app su_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ime_app su_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ime_app syscope_app:process signal;
allow ime_app syscope_app:process signal;
allow ime_app sysfs_devices_system_cpu:file { { getattr open read ioctl lock } { open append write } };
allow ime_app sysfs_exynos_writable:file { open append write };
allow ime_app sysfs_lcd_writable:file { open append write };
allow ime_app sysfs_mst_writable:file { { getattr open read ioctl lock } { open append write } };
allow ime_app sysfs_sec:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow ime_app sysfs_sec:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow ime_app sysfs_sensor_writable:file { { getattr open read ioctl lock } { open append write } };
allow ime_app sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow ime_app system_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app system_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app system_app_data_file:file { getattr execute execute_no_trans };
allow ime_app system_app_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app system_app_service:service_manager add;
allow ime_app system_app_tmpfs:file { open append write };
allow ime_app system_data_file:dir { open getattr read search ioctl };
allow ime_app system_data_file:fifo_file { getattr open read ioctl lock };
allow ime_app system_data_file:file { getattr open read ioctl lock };
allow ime_app system_data_file:file { getattr open read ioctl lock };
allow ime_app system_data_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ime_app system_data_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ime_app system_data_file:lnk_file { getattr open read ioctl lock };
allow ime_app system_data_file:sock_file { getattr open read ioctl lock };
allow ime_app system_file:file { getattr execute execute_no_trans };
allow ime_app system_file:file { getattr open read ioctl lock };
allow ime_app system_file:lnk_file { getattr execute };
allow ime_app system_prop:property_service set;
allow ime_app system_prop:property_service set;
allow ime_app system_radio_prop:property_service set;
allow ime_app system_server:unix_dgram_socket sendto;
allow ime_app system:tcp_socket { getattr getopt };
allow ime_app system:tcp_socket { read write };
allow ime_app system:unix_stream_socket connectto;
allow ime_app tima_dump_exec:file { getattr execute execute_no_trans };
allow ime_app tmpfs:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow ime_app tmpfs:file { { getattr open read ioctl lock } { open append write } };
allow ime_app tombstone_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app tombstone_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app tui_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app tzic_device:chr_file { getattr open read ioctl lock };
allow ime_app uhid_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app unlabeled:file write;
allow ime_app untrusteddomain:lnk_file { { getattr link unlink rename } { getattr open read ioctl lock } };
allow ime_app url_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ime_app users_system_data_file:dir { open getattr read search ioctl };
allow ime_app users_system_data_file:file { getattr open read ioctl lock };
allow ime_app validity_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow ime_app validity_device:{ fifo_file chr_file } { { getattr open read ioctl lock } { open append write } };
allow ime_app validity_device:file { getattr open read ioctl lock };
allow ime_app vcsFPService:process signull;
allow ime_app vold:unix_stream_socket connectto;
allow ime_app wallpaper_file:file { getattr open read ioctl lock };
allow ime_app wifi_data_file:dir { open getattr read search ioctl };
allow ime_app wifi_data_file:file { getattr open read ioctl lock };
allow ime_app wifi_data_file:sock_file { getattr open read ioctl lock };
allow ime_app wifi_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ime_app wifi_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ime_app wpa_socket:sock_file { open append write };
allow ime_app wpa:unix_dgram_socket sendto;
allow ime_app writingbuddymanager_service:service_manager add;
allow ime_app zygote:binder { call transfer };
allow ime_app zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ime_app zygote:fd use;
allow immvibed device:file { getattr open read ioctl lock };
allow immvibed immvibed_exec:file { entrypoint open read execute getattr };
allow immvibed immvibed_tmpfs:file { read write };
allow immvibed init:process sigchld;
allow immvibed system_fifo:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow immvibed system_fifo:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow immvibed vibrator_device:{ chr_file fifo_file } { { getattr open read ioctl lock } { open append write } };
allow immvibed vibrator_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow immvibed vibrator_device:dir { open search write add_name remove_name };
allow immvibed vibrator_device:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow imscm devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow imscm imscm_exec:file { entrypoint open read execute getattr };
allow imscm imscm_service:service_manager add;
allow imscm imscm_tmpfs:file { read write };
allow imscm ims_socket:sock_file write;
allow imscm ims:unix_stream_socket connectto;
allow imscm init:process sigchld;
allow imscm self:capability net_raw;
allow imscm servicemanager:binder { call transfer };
allow ims cnd_socket:sock_file write;
allow ims cnd:unix_stream_socket connectto;
allow imsd dnsproxyd_socket:sock_file write;
allow imsd dumplog_data_file:dir { { open getattr read search ioctl } add_name write };
allow imsd dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow imsd fwmarkd_socket:sock_file write;
allow imsd imsd_exec:file { entrypoint open read execute getattr };
allow imsd imsd_tmpfs:file { read write };
allow imsd init:process sigchld;
allow imsd kernel:system module_request;
allow imsd mediaserver:binder { call transfer };
allow imsd mediaserver:fd use;
allow imsd netd:unix_stream_socket connectto;
allow imsd node:{ tcp_socket udp_socket } node_bind;
allow imsd port:tcp_socket name_connect;
allow imsd port:{ tcp_socket udp_socket } name_bind;
allow imsd rild:unix_stream_socket connectto;
allow imsd self:capability { setuid net_raw net_admin };
allow imsd servicemanager:binder call;
allow imsd shell_data_file:dir search;
allow imsd s_system_app:binder call;
allow imsd sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow imsd system_app:binder call;
allow ims imscm_service:service_manager add;
allow ims ims_exec:file { entrypoint open read execute getattr };
allow ims ims_socket:sock_file write;
allow ims ims_tmpfs:file { read write };
allow ims init:process sigchld;
allow ims init:unix_stream_socket connectto;
allow ims kernel:system module_request;
allow ims netd_socket:sock_file write;
allow ims netd:unix_stream_socket connectto;
allow ims property_socket:sock_file write;
allow ims qcom_ims_prop:property_service set;
allow imsqmidaemon diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow imsqmidaemon init:unix_stream_socket connectto;
allow imsqmidaemon property_socket:sock_file { open append write };
allow imsqmidaemon system_data_file:dir { open search write add_name remove_name };
allow imsqmidaemon system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow imsqmidaemon system_prop:property_service set;
allow ims qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ims qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow ims qmuxd_socket:sock_file write;
allow ims qmuxd:unix_stream_socket connectto;
allow ims qmuxd:unix_stream_socket connectto;
allow ims self:capability { net_admin net_raw };
allow ims self:netlink_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow ims self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow ims servicemanager:binder { call transfer };
allow ims shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ims system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ims voice_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ims wcnss_service_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ims wifi_data_file:dir { open getattr read search ioctl };
allow ims wpa_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ims wpa_socket:dir { open search write add_name remove_name };
allow ims wpa_socket:sock_file { write create unlink setattr };
allow ims wpa:unix_dgram_socket sendto;
allow init actlmand_exec:file { getattr open read execute };
allow init actlmand:process { siginh rlimitinh };
allow init actlmand:process transition;
allow init adbd:process { siginh rlimitinh };
allow init adbd:process transition;
allow init adsprpcd_exec:file { getattr open read execute };
allow init adsprpcd:process { siginh rlimitinh };
allow init adsprpcd:process transition;
allow init androidshmservice_exec:file { getattr open read execute };
allow init androidshmservice:process { siginh rlimitinh };
allow init androidshmservice:process transition;
allow init apaservice_exec:file { getattr open read execute };
allow init apaservice:process { siginh rlimitinh };
allow init apaservice:process transition;
allow init argosd_exec:file { getattr open read execute };
allow init argosd:process { siginh rlimitinh };
allow init argosd:process transition;
allow init ashmem_device:chr_file execute;
allow init at_distributor_exec:file { getattr open read execute };
allow init at_distributor:process { siginh rlimitinh };
allow init at_distributor:process transition;
allow init atfwd_exec:file { getattr open read execute };
allow init atfwd:process { siginh rlimitinh };
allow init atfwd:process transition;
allow init audiod_exec:file { getattr open read execute };
allow init audiod:process { siginh rlimitinh };
allow init audiod:process transition;
allow init auditd_exec:file { getattr open read execute };
allow init auditd:process { siginh rlimitinh };
allow init auditd:process transition;
allow init bauthserver_exec:file { getattr open read execute };
allow init bauthserver:process { siginh rlimitinh };
allow init bauthserver:process transition;
allow init bintvoutservice_exec:file { getattr open read execute };
allow init bintvoutservice:process { siginh rlimitinh };
allow init bintvoutservice:process transition;
allow init block_device:blk_file relabelfrom;
allow init bluetooth:process { siginh rlimitinh };
allow init bluetooth:process { siginh rlimitinh };
allow init bluetooth:process { siginh rlimitinh };
allow init bluetooth:process transition;
allow init bluetooth:process transition;
allow init bluetooth:process transition;
allow init bootanim_exec:file { getattr open read execute };
allow init bootanim:process { siginh rlimitinh };
allow init bootanim:process transition;
allow init bootchecker_exec:file { getattr open read execute };
allow init bootchecker:process { siginh rlimitinh };
allow init bootchecker:process transition;
allow init brcm_patchram_plus_exec:file { getattr open read execute };
allow init brcm_patchram_plus:process { siginh rlimitinh };
allow init brcm_patchram_plus:process transition;
allow init btsnoop_exec:file { getattr open read execute };
allow init cbd_exec:file { getattr open read execute };
allow init cbd:process { siginh rlimitinh };
allow init cbd:process transition;
allow init cellgeofenced_exec:file { getattr open read execute };
allow init cellgeofenced:process { siginh rlimitinh };
allow init cellgeofenced:process transition;
allow init charger_monitor_exec:file { getattr open read execute };
allow init charger_monitor:process { siginh rlimitinh };
allow init charger_monitor:process transition;
allow init charon_exec:file { getattr open read execute };
allow init charon:process { siginh rlimitinh };
allow init charon:process transition;
allow init clatd_exec:file { getattr open read execute };
allow init clatd:process { siginh rlimitinh };
allow init clatd:process transition;
allow init cnd_exec:file { getattr open read execute };
allow init cnd:process { siginh rlimitinh };
allow init cnd:process transition;
allow init connfwexe_exec:file { getattr open read execute };
allow init connfwexe:process { siginh rlimitinh };
allow init connfwexe:process transition;
allow init contextmount_type:dir { open getattr read search ioctl };
allow init contextmount_type:{ file lnk_file sock_file fifo_file } { getattr open read ioctl lock };
allow init contextmount_type:filesystem relabelto;
allow init createsystemfile_exec:file { getattr open read execute };
allow init createsystemfile:process { siginh rlimitinh };
allow init createsystemfile:process transition;
allow init cs_exec:file { getattr open read execute };
allow init cs:process { siginh rlimitinh };
allow init cs:process transition;
allow init ddexe_exec:file { getattr open read execute };
allow init ddexe:process { siginh rlimitinh };
allow init ddexe:process transition;
allow init debuggerd_exec:file { getattr open read execute };
allow init debuggerd:process { siginh rlimitinh };
allow init debuggerd:process transition;
allow init debug_interface_proxy_exec:file { getattr open read execute };
allow init debug_interface_proxy:process { siginh rlimitinh };
allow init debug_interface_proxy:process transition;
allow init dev_type:blk_file { { getattr open read ioctl lock } { open append write } };
allow init dhcp_exec:file { getattr open read execute };
allow init dhcp:process { siginh rlimitinh };
allow init dhcp:process transition;
allow init diagexe_exec:file { getattr open read execute };
allow init diagexe:process { siginh rlimitinh };
allow init diagexe:process transition;
allow init diag_uart_log_exec:file { getattr open read execute };
allow init diag_uart_log:process { siginh rlimitinh };
allow init diag_uart_log:process transition;
allow init DMM-daemon_exec:file { getattr open read execute };
allow init DMM-daemon:process { siginh rlimitinh };
allow init DMM-daemon:process transition;
allow init domain:process sigkill;
allow init dpmd_exec:file { getattr open read execute };
allow init dpmd:process { siginh rlimitinh };
allow init dpmd:process transition;
allow init drmserver_exec:file { getattr open read execute };
allow init drmserver:process { siginh rlimitinh };
allow init drmserver:process transition;
allow init drsd_exec:file { getattr open read execute };
allow init drsd:process { siginh rlimitinh };
allow init drsd:process transition;
allow init dtsconfigurator_exec:file { getattr open read execute };
allow init dtsconfigurator:process { siginh rlimitinh };
allow init dtsconfigurator:process transition;
allow init dtseagleservice_exec:file { getattr open read execute };
allow init dtseagleservice:process { siginh rlimitinh };
allow init dtseagleservice:process transition;
allow init dttexe_exec:file { getattr open read execute };
allow init dttexe:process { siginh rlimitinh };
allow init dttexe:process transition;
allow init dumpstate_exec:file { getattr open read execute };
allow init dumpstate:process { siginh rlimitinh };
allow init dumpstate:process transition;
allow init dun-server_exec:file { getattr open read execute };
allow init edmaudit_exec:file { getattr open read execute };
allow init edmaudit:process { siginh rlimitinh };
allow init edmaudit:process transition;
allow init efsblk_device:blk_file setattr;
allow init efsks_exec:file { getattr open read execute };
allow init efsks:process { siginh rlimitinh };
allow init efsks:process transition;
allow init emmcblk_device:blk_file { relabelfrom setattr };
allow init empty_service_exec:file { getattr open read execute };
allow init empty_service:process { siginh rlimitinh };
allow init empty_service:process transition;
allow init energy-awareness_exec:file execute_no_trans;
allow init energyawareness_exec:file { getattr open read execute };
allow init energyawareness:process { siginh rlimitinh };
allow init energyawareness:process transition;
allow init epmd_exec:file { getattr open read execute };
allow init epmd:process { siginh rlimitinh };
allow init epmd:process transition;
allow init exyrngd_exec:file { getattr open read execute };
allow init exyrngd:process { siginh rlimitinh };
allow init exyrngd:process transition;
allow init fidodaemon_exec:file { getattr open read execute };
allow init fidodaemon:process { siginh rlimitinh };
allow init fidodaemon:process transition;
allow init firmware:filesystem relabelto;
allow init flash_recovery:process transition;
allow init fs_type:filesystem ~relabelto;
allow init ftm_ptt_exec:file { getattr open read execute };
allow init ftm_ptt:process { siginh rlimitinh };
allow init ftm_ptt:process transition;
allow init functionfs:filesystem mount;
allow init fuse:dir mounton;
allow init fuse:dir search;
allow init geomagneticd_exec:file { getattr open read execute };
allow init geomagneticd:process { siginh rlimitinh };
allow init geomagneticd:process transition;
allow init gpsd_exec:file { getattr open read execute };
allow init gpsd:process { siginh rlimitinh };
allow init gpsd:process transition;
allow init gpu_snapshotd_exec:file { getattr open read execute };
allow init gpu_snapshotd:process { siginh rlimitinh };
allow init gpu_snapshotd:process transition;
allow init hbtp_exec:file { getattr open read execute };
allow init hbtp:process { siginh rlimitinh };
allow init hbtp:process transition;
allow init hci_attach_exec:file { getattr open read execute };
allow init hci_attach:process { siginh rlimitinh };
allow init hci_attach:process transition;
allow init healthd:process { siginh rlimitinh };
allow init healthd:process transition;
allow init hvdcp_exec:file { getattr open read execute };
allow init hvdcp:process { siginh rlimitinh };
allow init hvdcp:process transition;
allow init icd_exec:file { getattr open read execute };
allow init icd:process { siginh rlimitinh };
allow init icd:process transition;
allow init immvibed_exec:file { getattr open read execute };
allow init immvibed:process { siginh rlimitinh };
allow init immvibed:process transition;
allow init imscm_exec:file { getattr open read execute };
allow init imscm:process { siginh rlimitinh };
allow init imscm:process transition;
allow init imsd_exec:file { getattr open read execute };
allow init imsd:process { siginh rlimitinh };
allow init imsd:process transition;
allow init ims_exec:file { getattr open read execute };
allow init ims:process { siginh rlimitinh };
allow init ims:process transition;
allow init init_shell:process { siginh rlimitinh };
allow init init_shell:process transition;
allow init init_tmpfs:file { read write };
allow init inputflinger_exec:file { getattr open read execute };
allow init inputflinger:process { siginh rlimitinh };
allow init inputflinger:process transition;
allow init installd_exec:file { getattr open read execute };
allow init installd:process { siginh rlimitinh };
allow init installd:process transition;
allow init install_recovery_exec:file { getattr open read execute };
allow init install_recovery:process { siginh rlimitinh };
allow init install_recovery:process transition;
allow init insthk_exec:file { getattr open read execute };
allow init insthk:process { siginh rlimitinh };
allow init insthk:process transition;
allow init ipacm-diag_exec:file { getattr open read execute };
allow init ipacm-diag:process { siginh rlimitinh };
allow init ipacm-diag:process transition;
allow init ipacm_exec:file { getattr open read execute };
allow init ipacm:process { siginh rlimitinh };
allow init ipacm:process transition;
allow init ipruleset_exec:file { getattr open read execute };
allow init ipruleset:process { siginh rlimitinh };
allow init ipruleset:process transition;
allow init IPSecService_exec:file { getattr open read execute };
allow init IPSecService:process { siginh rlimitinh };
allow init IPSecService:process transition;
allow init irsc_util_exec:file { getattr open read execute };
allow init irsc_util:process { siginh rlimitinh };
allow init irsc_util:process transition;
allow init itsonbs_exec:file { getattr open read execute };
allow init itsonbs:process { siginh rlimitinh };
allow init itsonbs:process transition;
allow init itsonbs:process transition;
allow init jackservice_exec:file { getattr open read execute };
allow init jackservice:process { siginh rlimitinh };
allow init jackservice:process transition;
allow init kapd:process { siginh rlimitinh };
allow init kapd:process transition;
allow init kernel:process setsched;
allow init kernel:security load_policy;
allow init kernel:system syslog_mod;
allow init kernel:system syslog_mod;
allow init kernel:system syslog_read;
allow init keystore_data_file:dir { open create read getattr setattr search };
allow init keystore_data_file:file { getattr };
allow init keystore_exec:file { getattr open read execute };
allow init keystore:process { siginh rlimitinh };
allow init keystore:process transition;
allow init kiesexe_exec:file { getattr open read execute };
allow init kiesexe:process { siginh rlimitinh };
allow init kiesexe:process transition;
allow init launcher_exec:file { getattr open read execute };
allow init launcher:process { siginh rlimitinh };
allow init launcher:process transition;
allow init lhd_exec:file { getattr open read execute };
allow init lhd:process { siginh rlimitinh };
allow init lhd:process transition;
allow init lmkd_exec:file { getattr open read execute };
allow init lmkd:process { siginh rlimitinh };
allow init lmkd:process transition;
allow init location_exec:file { getattr open read execute };
allow init location:process { siginh rlimitinh };
allow init location:process transition;
allow init logd_exec:file { getattr open read execute };
allow init logd:process { siginh rlimitinh };
allow init logd:process transition;
allow init logwrapper_exec:file { getattr open read execute };
allow init logwrapper:process { siginh rlimitinh };
allow init logwrapper:process transition;
allow init lpm_exec:file { getattr open read execute };
allow init lpm:process { siginh rlimitinh };
allow init lpm:process transition;
allow init lptcpgc_exec:file { getattr open read execute };
allow init lptcpgc:process { siginh rlimitinh };
allow init lptcpgc:process transition;
allow init macloader_exec:file { getattr open read execute };
allow init macloader:process { siginh rlimitinh };
allow init macloader:process transition;
allow init mcStarter_exec:file { getattr open read execute };
allow init mcStarter:process { siginh rlimitinh };
allow init mcStarter:process transition;
allow init mdm_helper_exec:file { getattr open read execute };
allow init mdm_helper:process { siginh rlimitinh };
allow init mdm_helper:process transition;
allow init mdnsd_exec:file { getattr open read execute };
allow init mdnsd:process { siginh rlimitinh };
allow init mdnsd:process transition;
allow init mediaserver_exec:file { getattr open read execute };
allow init mediaserver:process { siginh rlimitinh };
allow init mediaserver:process transition;
allow init mfgloader_exec:file { getattr open read execute };
allow init mfgloader:process { siginh rlimitinh };
allow init mfgloader:process transition;
allow init mlexe_exec:file { getattr open read execute };
allow init mlexe:process { siginh rlimitinh };
allow init mlexe:process transition;
allow init mmi_exec:file { getattr open read execute };
allow init mmi:process { siginh rlimitinh };
allow init mmi:process transition;
allow init mm-pp-daemon_exec:file { getattr open read execute };
allow init mm-pp-daemon:process { siginh rlimitinh };
allow init mm-pp-daemon:process transition;
allow init mm-qcamerad_exec:file { getattr open read execute };
allow init mm-qcamerad:process { siginh rlimitinh };
allow init mm-qcamerad:process transition;
allow init mobexdaemon_exec:file { getattr open read execute };
allow init mobexdaemon:process { siginh rlimitinh };
allow init mobexdaemon:process transition;
allow init mobicoredaemon_exec:file { getattr open read execute };
allow init mobicoredaemon:process { siginh rlimitinh };
allow init mobicoredaemon:process transition;
allow init mpdecision_exec:file { getattr open read execute };
allow init mpdecision:process { siginh rlimitinh };
allow init mpdecision:process transition;
allow init msm_irqbalanced_exec:file { getattr open read execute };
allow init msm_irqbalanced:process { siginh rlimitinh };
allow init msm_irqbalanced:process transition;
allow init mtp_exec:file { getattr open read execute };
allow init mtp:process { siginh rlimitinh };
allow init mtp:process transition;
allow init netd_exec:file { getattr open read execute };
allow init netd:process { siginh rlimitinh };
allow init netd:process transition;
allow init netmgrd_exec:file { getattr open read execute };
allow init netmgrd:process { siginh rlimitinh };
allow init netmgrd:process transition;
allow init newAttr24:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init newAttr44:process noatsecure;
allow init newAttr66:{ dir { { chr_file blk_file } { file lnk_file sock_file fifo_file } } } relabelto;
allow init newAttr69:{ dir { { chr_file blk_file } { file lnk_file sock_file fifo_file } } } relabelto;
allow init newAttr80:property_service set;
allow init node:rawip_socket node_bind;
allow init node:{ tcp_socket udp_socket } node_bind;
allow init nqs_exec:file { getattr open read execute };
allow init nqs:process { siginh rlimitinh };
allow init nqs:process transition;
allow init olsrd_exec:file { getattr open read execute };
allow init olsrd:process { siginh rlimitinh };
allow init olsrd:process transition;
allow init oneseg_mw_exec:file { getattr open read execute };
allow init oneseg_mw:process { siginh rlimitinh };
allow init oneseg_mw:process transition;
allow init otp_server_exec:file { getattr open read execute };
allow init otp_server:process { siginh rlimitinh };
allow init otp_server:process transition;
allow init p2p_supplicant_exec:file { getattr open read execute };
allow init p2p_supplicant:process { siginh rlimitinh };
allow init p2p_supplicant:process transition;
allow init perfd_exec:file { getattr open read execute };
allow init perfd:process { siginh rlimitinh };
allow init perfd:process transition;
allow init per_mgr_exec:file { getattr open read execute };
allow init per_mgr:process { siginh rlimitinh };
allow init per_mgr:process transition;
allow init playready_exec:file { getattr open read execute };
allow init playready:process { siginh rlimitinh };
allow init playready:process transition;
allow init port-bridge_exec:file { getattr open read execute };
allow init port-bridge:process { siginh rlimitinh };
allow init port-bridge:process transition;
allow init port:tcp_socket name_connect;
allow init port:{ tcp_socket udp_socket } name_bind;
allow init pppoewrapper_exec:file { getattr open read execute };
allow init pppoewrapper:process { siginh rlimitinh };
allow init pppoewrapper:process transition;
allow init prepare_param:process { siginh rlimitinh };
allow init prepare_param:process transition;
allow init prepare_param:process transition;
allow init prepare_param_sh_file:file { getattr open read execute };
allow init proc_security:file { { getattr open read ioctl lock } { open append write } };
allow init property_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init property_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init pstore:filesystem mount;
allow init ptt_socket_app_exec:file { getattr open read execute };
allow init ptt_socket_app:process { siginh rlimitinh };
allow init ptt_socket_app:process transition;
allow init qcks_exec:file { getattr open read execute };
allow init qcks:process { siginh rlimitinh };
allow init qcks:process transition;
allow init qcomsysd_exec:file { getattr open read execute };
allow init qcomsysd:process { siginh rlimitinh };
allow init qcomsysd:process transition;
allow init qlogd_exec:file { getattr open read execute };
allow init qlogd:process { siginh rlimitinh };
allow init qlogd:process transition;
allow init qmiproxy_exec:file { getattr open read execute };
allow init qmiproxy:process { siginh rlimitinh };
allow init qmiproxy:process transition;
allow init qmuxd_exec:file { getattr open read execute };
allow init qmuxd:process { siginh rlimitinh };
allow init qmuxd:process transition;
allow init qosmgr_exec:file { getattr open read execute };
allow init qosmgr:process { siginh rlimitinh };
allow init qosmgr:process transition;
allow init qrngd_exec:file { getattr open read execute };
allow init qrngd:process { siginh rlimitinh };
allow init qrngd:process transition;
allow init qti_exec:file { getattr open read execute };
allow init qti:process { siginh rlimitinh };
allow init qti:process transition;
allow init racoon_exec:file { getattr open read execute };
allow init racoon:process { siginh rlimitinh };
allow init racoon:process transition;
allow init rfs_access_exec:file { getattr open read execute };
allow init rfs_access:process { siginh rlimitinh };
allow init rfs_access:process transition;
allow init rild_exec:file { getattr open read execute };
allow init rild:process { siginh rlimitinh };
allow init rild:process transition;
allow init rmt_storage_exec:file { getattr open read execute };
allow init rmt_storage:process { siginh rlimitinh };
allow init rmt_storage:process transition;
allow init rootfs:file execute_no_trans;
allow init rootfs:file { getattr open read execute };
allow init rootfs:file { getattr open read execute };
allow init rootfs:file { getattr open read execute };
allow init rootfs:file { getattr open read execute };
allow init rootfs:file { getattr open read execute };
allow init rootfs:file relabelfrom;
allow init rtcc_exec:file { getattr open read execute };
allow init rtcc:process { siginh rlimitinh };
allow init rtcc:process transition;
allow init rtc_log:process { siginh rlimitinh };
allow init rtc_log:process transition;
allow init rtc_log_sh_file:file { getattr open read execute };
allow init samsungpowersoundplay_exec:file { getattr open read execute };
allow init samsungpowersoundplay:process { siginh rlimitinh };
allow init samsungpowersoundplay:process transition;
allow init sapd_exec:file { getattr open read execute };
allow init scs_exec:file { getattr open read execute };
allow init scs:process { siginh rlimitinh };
allow init scs:process transition;
allow init sdcardd_exec:file { getattr open read execute };
allow init sdcardd:process { siginh rlimitinh };
allow init sdcardd:process transition;
allow init sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init sdp_cryptod_exec:file { getattr open read execute };
allow init sdp_cryptod:process { siginh rlimitinh };
allow init sdp_cryptod:process transition;
allow init sec-ril_exec:file { getattr open read execute };
allow init sec-ril:process { siginh rlimitinh };
allow init sec-ril:process transition;
allow init secstarter_exec:file { getattr open read execute };
allow init secstarter:process { siginh rlimitinh };
allow init secstarter:process transition;
allow init secure_storage_exec:file { getattr open read execute };
allow init secure_storage:process { siginh rlimitinh };
allow init secure_storage:process transition;
allow init security_file:dir { create setattr };
allow init security_file:dir { open getattr read search ioctl };
allow init security_file:dir relabelfrom ;
allow init security_file:dir ~{ rename write add_name remove_name rmdir };
allow init security_file:{ file lnk_file } { getattr open read ioctl lock };
allow init security_file:file relabelfrom;
allow init security_prop:property_service set;
allow init security_spota_file:dir { create setattr };
allow init security_spota_file:dir { open getattr read search ioctl };
allow init security_spota_file:dir relabelfrom ;
allow init security_spota_file:dir ~{ rename write add_name remove_name rmdir };
allow init security_spota_file:{ file lnk_file } { getattr open read ioctl lock };
allow init security_spota_file:file relabelfrom;
allow init seempd_exec:file { getattr open read execute };
allow init seempd:process { siginh rlimitinh };
allow init seempd:process transition;
allow init self:capability sys_module;
allow init self:capability sys_module;
allow init self:capability { sys_rawio mknod };
allow init self:process ~{ ptrace transition dyntransition };
allow init self:process { setexec setfscreate setsockcreate };
allow init self:udp_socket { create ioctl };
allow init selinux_net_exec:file { getattr open read execute };
allow init selinux_net:process { siginh rlimitinh };
allow init selinux_net:process transition;
allow init sem_exec:file { getattr open read execute };
allow init sem:process { siginh rlimitinh };
allow init sem:process transition;
allow init sensorhubservice_exec:file { getattr open read execute };
allow init sensorhubservice:process { siginh rlimitinh };
allow init sensorhubservice:process transition;
allow init sensors_exec:file { getattr open read execute };
allow init sensors:process { siginh rlimitinh };
allow init sensors:process transition;
allow init servicemanager_exec:file { getattr open read execute };
allow init servicemanager:process { siginh rlimitinh };
allow init servicemanager:process transition;
allow init_shell adbd:dir { getattr open read search };
allow init_shell adsprpc_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell apk_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell apk_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell apk_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell apk_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell app_data_file:dir { search setattr };
allow init_shell at_distributor:dir getattr;
allow init_shell at_distributor:file { getattr open read };
allow init_shell ATFWD-daemon:dir { getattr open read search };
allow init_shell ATFWD-daemon:file { getattr open read };
allow init_shell auditd:dir { getattr search };
allow init_shell auditd:file { getattr open read };
allow init_shell bbccontainer_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell bbccontainer_app_data_backend:file { { getattr open read ioctl lock } { getattr link unlink rename } };
allow init_shell bbccontainer_app_data_backend:lnk_file { getattr link unlink rename };
allow init_shell bintvoutservice:dir { getattr open read search };
allow init_shell bintvoutservice:file { getattr open read };
allow init_shell block_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow init_shell block_device:lnk_file { getattr open read ioctl lock };
allow init_shell block_device:lnk_file { relabelfrom getattr };
allow init_shell bluetooth:dir getattr;
allow init_shell bluetooth_efs_file:dir { open getattr read search ioctl };
allow init_shell bluetooth_efs_file:file { getattr open read ioctl lock };
allow init_shell bluetooth:file { getattr open read };
allow init_shell bluetooth_prop:property_service set;
allow init_shell bluetooth_prop:property_service set;
allow init_shell bluetooth_serial_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell bugreport_exec:file { execute execute_no_trans };
allow init_shell cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell cgroup:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell cnd:dir { getattr open read search };
allow init_shell connfwexe:dir getattr;
allow init_shell console_device:chr_file { getattr open read ioctl lock };
allow init_shell console_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell container_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell container_app_data_backend:file { { getattr open read ioctl lock } { getattr link unlink rename } };
allow init_shell container_app_data_backend:lnk_file { getattr link unlink rename };
allow init_shell container_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell container_app_data_file:file { relabelfrom { getattr open read ioctl lock } { getattr link unlink rename } };
allow init_shell container_app_data_file:lnk_file { relabelfrom { getattr link unlink rename } };
allow init_shell coresight_device:chr_file { getattr open read ioctl lock };
allow init_shell ctl_default_prop:property_service set;
allow init_shell ctl_default_prop:property_service set;
allow init_shell ctl_default_prop:property_service set;
allow init_shell ctl_rildaemon_prop:property_service set;
allow init_shell dalvikcache_data_file:dir { open search write add_name remove_name };
allow init_shell dalvikcache_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init shell_data_file:dir { open create read getattr setattr search };
allow init shell_data_file:file { getattr };
allow init_shell ddexe:dir { open read search };
allow init_shell ddexe:file getattr;
allow init_shell debuggerd_exec:file { getattr open read ioctl lock };
allow init_shell device:chr_file getattr;
allow init_shell device:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom mounton };
allow init_shell device:dir relabelfrom;
allow init_shell device:file create;
allow init_shell dhcp:dir getattr;
allow init_shell diag_uart_log:dir { getattr open read };
allow init_shell diag_uart_log:file { getattr open read };
allow init_shell drmserver:dir { getattr open read search };
allow init_shell drmserver:file { getattr open read };
allow init_shell dttexe:dir getattr;
allow init_shell dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell dumplog_data_file:file { getattr link unlink rename };
allow init_shell dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell dumpstate_exec:file { execute execute_no_trans };
allow init_shell dumpstate_exec:file getattr;
allow init_shell dumpsys_exec:file { execute execute_no_trans };
allow init_shell dw_mmc_device:dir { write search getattr };
allow init_shell dw_mmc_device:lnk_file read;
allow init_shell efs_boot_dev:blk_file { getattr open read ioctl lock };
allow init_shell efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell efs_file:dir { open getattr read search ioctl };
allow init_shell efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell efsks:dir getattr;
allow init_shell emmcblk_device:blk_file { getattr open read ioctl lock };
allow init_shell emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow init_shell emmcblk_device:lnk_file relabelto;
allow init_shell energy-awareness_exec:file { getattr open read execute };
allow init_shell energy-awareness:process { siginh rlimitinh };
allow init_shell energy-awareness:process transition;
allow init shell_exec:file { getattr open read execute };
allow init shell_exec:file { getattr open read execute };
allow init_shell exec_type:lnk_file read;
allow init_shell firmware:dir { open getattr read search ioctl };
allow init_shell firmware:file { getattr open read ioctl lock };
allow init_shell fixmo_app_data_file:dir { open getattr read search ioctl };
allow init_shell fm_radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell fm_radio_device:chr_file { open read ioctl };
allow init_shell freq_prop:property_service set;
allow init_shell fsg_device:lnk_file relabelto;
allow init_shell gad_untrusted_app_data_file:dir { search setattr };
allow init_shell good_app_data_file:dir { open getattr read search ioctl };
allow init_shell graphics_device:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell graphics_device:dir { open search write add_name remove_name };
allow init_shell graphics_device:lnk_file create;
allow init_shell graphics_device:lnk_file create;
allow init_shell hsic_device:chr_file { read write };
allow init_shell imei_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell imei_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell immvibed:file { getattr open read };
allow init_shell init:dir { open read };
allow init_shell init:fifo_file { { getattr open read ioctl lock } { open append write } };
allow init_shell init:fifo_file { { getattr open read ioctl lock } { open append write } };
allow init_shell init:file getattr;
allow init_shell init:netlink_kobject_uevent_socket { read write };
allow init_shell init:netlink_nflog_socket { read write };
allow init_shell init:netlink_route_socket { read write };
allow init_shell init:netlink_socket { read write };
allow init_shell init:packet_socket { read write };
allow init_shell init:process sigchld;
allow init_shell init:udp_socket { read write };
allow init_shell init:unix_stream_socket connectto;
allow init_shell init:unix_stream_socket { connectto read write };
allow init_shell init:unix_stream_socket { read write getattr };
allow init_shell input_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell installd:dir { getattr open read search };
allow init_shell installd:file { getattr open read };
allow init_shell kernel:dir { open read search };
allow init_shell kernel:file { getattr open read };
allow init_shell kernel:key { view read search };
allow init_shell kernel:process setsched;
allow init_shell kernel:system { module_request syslog_read };
allow init_shell keystore:dir { getattr read search };
allow init_shell keystore:file { getattr open read };
allow init_shell kmsg_device:chr_file { open append write };
allow init_shell ks:dir getattr;
allow init_shell m9kefsblk_device:blk_file { getattr open read ioctl lock };
allow init_shell m9kefsblk_device:blk_file { open append write };
allow init_shell media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell mediaserver:dir { getattr open read search };
allow init_shell mediaserver:file { getattr open read };
allow init_shell mm-pp-daemon:dir { getattr open read search };
allow init_shell mm-pp-daemon:file { getattr open read };
allow init_shell mm-qcamera-daemon:dir { getattr open read search };
allow init_shell mm-qcamera-daemon:file { getattr open read };
allow init_shell mobexdaemon:dir { getattr open read search };
allow init_shell mobexdaemon:file { getattr open read };
allow init_shell mobicoredaemon:dir { getattr open read search };
allow init_shell mobicoredaemon_exec:file { getattr open read execute };
allow init_shell mobicoredaemon:file { getattr open read };
allow init_shell mobicoredaemon:process { siginh rlimitinh };
allow init_shell mobicoredaemon:process transition;
allow init_shell mobicoredaemon:unix_stream_socket connectto;
allow init_shell mobicore_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell mobicore-user_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell modem_device:lnk_file relabelto;
allow init_shell netd:dir { open read };
allow init_shell netd:file { getattr open read };
allow init_shell netd_socket:sock_file { open append write };
allow init_shell netmgrd:dir { open read search };
allow init_shell newAttr79:property_service set;
allow init_shell newAttr85:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell newAttr85:{ { file lnk_file sock_file fifo_file } chr_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell nfc:file { getattr open read };
allow init_shell p2p_supplicant:dir getattr;
allow init_shell persist_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell persist_data_file:dir { open getattr read search ioctl };
allow init_shell persist_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell persist_data_file:file { getattr open read ioctl lock };
allow init_shell platform_app:dir getattr;
allow init shell:process { siginh rlimitinh };
allow init shell:process transition;
allow init_shell proc:file { open append write };
allow init_shell proc_net:file { open append write };
allow init_shell property_socket:sock_file { open append write };
allow init_shell property_socket:sock_file write;
allow init_shell qcks:dir { getattr open read search };
allow init_shell qcom_bt_prop:property_service set;
allow init_shell qmuxd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell qmuxd:dir getattr;
allow init_shell qmuxd:file { getattr open read };
allow init_shell qseecomd:dir { getattr open read search };
allow init_shell qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell qtaguid_proc:dir { open getattr read search ioctl };
allow init_shell qtaguid_proc:file { getattr open read ioctl lock };
allow init_shell radio_device:chr_file { getattr open read ioctl lock };
allow init_shell radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell radio:dir getattr;
allow init_shell radio:file { getattr open read };
allow init_shell rild:dir { open read };
allow init_shell rild:file { open read };
allow init_shell rmt_storage:file { getattr open read };
allow init_shell rootfs:chr_file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow init_shell rootfs:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow init_shell samsung_app:dir getattr;
allow init_shell sdcardd:dir { getattr search };
allow init_shell sdcardd:file { open read };
allow init_shell sdcard_external:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell sdcard_external:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell sdcard_type:chr_file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow init_shell sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell sdcard_type:dir { open getattr read search ioctl };
allow init_shell sec-ril:dir getattr;
allow init_shell secure_storage_device:dir { open getattr read search ioctl };
allow init_shell secure_storage_device:dir { { open getattr read search ioctl } relabelto relabelto };
allow init_shell secure_storage_device:dir relabelto;
allow init_shell security_file:dir { open getattr read search ioctl };
allow init_shell security_file:file { getattr open read ioctl lock };
allow init_shell security_spota_file:dir { open getattr read search ioctl };
allow init_shell security_spota_file:file { getattr open read ioctl lock };
allow init_shell self:capability2 block_suspend;
allow init_shell self:capability2 syslog;
allow init_shell self:capability { dac_override sys_module };
allow init_shell self:capability { net_admin net_raw net_bind_service fowner chown fsetid sys_admin setgid setuid sys_boot sys_resource };
allow init_shell self:capability { setuid setgid };
allow init_shell self:capability sys_module;
allow init_shell self:capability { sys_module dac_override };
allow init_shell self:netlink_route_socket *;
allow init_shell self:netlink_route_socket { { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } } nlmsg_write nlmsg_read };
allow init_shell self:{ netlink_route_socket rawip_socket udp_socket } *;
allow init_shell self:netlink_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow init_shell selinuxfs:dir { open getattr read search ioctl };
allow init_shell selinuxfs:file { { getattr open read ioctl lock } { open append write } };
allow init_shell sensorhubservice:dir { getattr open read search };
allow init_shell sensorhubservice:file { getattr open read };
allow init_shell servicemanager:binder { call transfer };
allow init_shell servicemanager:dir { open read search };
allow init_shell servicemanager:file { getattr open read };
allow init_shell shell_exec:file { entrypoint open read execute getattr };
allow init_shell shell_exec:file execute_no_trans;
allow init_shell shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow init_shell shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow init_shell shell_prop:property_service set;
allow init_shell smartcard_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell smartcard_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell smartcard_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell smartcard_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell smd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell s_platform_app:dir getattr;
allow init_shell ssdblk_device:lnk_file relabelto;
allow init_shell surfaceflinger:dir { getattr open read search };
allow init_shell surfaceflinger:file { getattr open read };
allow init_shell sysfs:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell sysfs:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell sysfs_thermal:dir { open getattr read search ioctl };
allow init_shell sysfs_thermal:file { { getattr open read ioctl lock } { open append write } };
allow init_shell sysrq_proc:file write;
allow init_shell system:binder { call transfer };
allow init_shell systemblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow init_shell system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell system_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell system_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell system:dir { getattr search };
allow init_shell system:fd use;
allow init_shell system_file:dir { { open getattr read search ioctl } add_name remove_name };
allow init_shell system_file:dir { open search add_name remove_name };
allow init_shell system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow init_shell system_file:lnk_file { getattr open read ioctl lock };
allow init_shell system:file { open read };
allow init_shell system_prop:property_service set ;
allow init_shell system_server:binder transfer;
allow init_shell time_daemon:dir getattr;
allow init_shell tmpfs:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell tmpfs:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell tmpfs:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell tmpfs:file { getattr execute_no_trans };
allow init_shell tty_device:chr_file { getattr open read ioctl lock };
allow init_shell tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell ueventd:dir { open read search };
allow init_shell ueventd:file getattr;
allow init_shell uicc_prop:property_service set;
allow init_shell usf_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell vold:dir { open read search };
allow init_shell vold:file { getattr open read };
allow init_shell vold_socket:sock_file write;
allow init_shell vold:unix_stream_socket connectto;
allow init_shell wifi_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow init_shell wifi_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow init_shell wifi_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow init_shell wpa:dir { getattr search };
allow init_shell wpa:file { getattr open read };
allow init_shell zygote:dir { getattr open read search };
allow init_shell zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow init_shell zygote:file { getattr open read };
allow init smdexe_exec:file { getattr open read execute };
allow init smdexe:process { siginh rlimitinh };
allow init smdexe:process transition;
allow init ss_conn_daemon_exec:file { getattr open read execute };
allow init ss_conn_daemon:process { siginh rlimitinh };
allow init ss_conn_daemon:process transition;
allow init sshd_exec:file { getattr open read execute };
allow init sshd:process { siginh rlimitinh };
allow init sshd:process transition;
allow init ss_kbservice_daemon_exec:file { getattr open read execute };
allow init ss_kbservice_daemon:process { siginh rlimitinh };
allow init ss_kbservice_daemon:process transition;
allow init ssr_diag_exec:file { getattr open read execute };
allow init ssr_diag:process { siginh rlimitinh };
allow init ssr_diag:process transition;
allow init ssr_setup_exec:file { getattr open read execute };
allow init ssr_setup:process { siginh rlimitinh };
allow init ssr_setup:process transition;
allow init sswap_exec:file { getattr open read execute };
allow init sswap:process { siginh rlimitinh };
allow init sswap:process transition;
allow init s_system_app:binder transfer;
allow init subsystem_ramdump_exec:file { getattr open read execute };
allow init subsystem_ramdump:process { siginh rlimitinh };
allow init subsystem_ramdump:process transition;
allow init surfaceflinger_exec:file { getattr open read execute };
allow init surfaceflinger:process { siginh rlimitinh };
allow init surfaceflinger:process transition;
allow init sysfs_type:{ dir file lnk_file } relabelto;
allow init sysmon_exec:file { getattr open read execute };
allow init sysmon:process { siginh rlimitinh };
allow init sysmon:process transition;
allow init sysprof_exec:file { getattr open read execute };
allow init sysprof:process { siginh rlimitinh };
allow init sysprof:process transition;
allow init system_fifo:dir { relabelfrom relabelto { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } };
allow init system_file:dir mounton;
allow init system_file:file execute_no_trans;
allow init tbaseLoader_exec:file { getattr open read execute };
allow init tbaseLoader:process { siginh rlimitinh };
allow init tbaseLoader:process transition;
allow init tee_exec:file { getattr open read execute };
allow init tee:process { siginh rlimitinh };
allow init tee:process transition;
allow init thermal-engine_exec:file { getattr open read execute };
allow init thermal-engine:process { siginh rlimitinh };
allow init thermal-engine:process transition;
allow init time_daemon_exec:file { getattr open read execute };
allow init time_daemon:process { siginh rlimitinh };
allow init time_daemon:process transition;
allow init tlc_server_exec:file { getattr open read execute };
allow init tlc_server:process { siginh rlimitinh };
allow init tlc_server:process transition;
allow init tsdaemon_exec:file { getattr open read execute };
allow init tsdaemon:process { siginh rlimitinh };
allow init tsdaemon:process transition;
allow init tzdaemon_exec:file { getattr open read execute };
allow init tzdaemon:process { siginh rlimitinh };
allow init tzdaemon:process transition;
allow init ueventd:process { siginh rlimitinh };
allow init ueventd:process transition;
allow init uncrypt_exec:file { getattr open read execute };
allow init uncrypt:process { siginh rlimitinh };
allow init uncrypt:process transition;
allow init undefined_service:process dyntransition;
allow init unlabeled:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom };
allow init unlabeled:{ file lnk_file sock_file fifo_file } { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelfrom };
allow init unlabeled:filesystem ~relabelto;
allow init usb_uicc_daemon_exec:file { getattr open read execute };
allow init usb_uicc_daemon:process { siginh rlimitinh };
allow init usb_uicc_daemon:process transition;
allow init usermodehelper:file { { getattr open read ioctl lock } { open append write } };
allow init usf_exec:file { getattr open read execute };
allow init usf:process { siginh rlimitinh };
allow init usf:process transition;
allow init vcsFPService_exec:file { getattr open read execute };
allow init vcsFPService:process { siginh rlimitinh };
allow init vcsFPService:process transition;
allow init vdc_exec:file { getattr open read execute };
allow init vdc:process { siginh rlimitinh };
allow init vdc:process transition;
allow init vm_bms_exec:file { getattr open read execute };
allow init vm_bms:process { siginh rlimitinh };
allow init vm_bms:process transition;
allow init vmwared_exec:file { getattr open read execute };
allow init vmwared:process { siginh rlimitinh };
allow init vmwared:process transition;
allow init vold_exec:file { getattr open read execute };
allow init vold:process { siginh rlimitinh };
allow init vold:process transition;
allow init vpnclientd_exec:file { getattr open read execute };
allow init vpnclientd:process { siginh rlimitinh };
allow init vpnclientd:process transition;
allow init watchdogd:process { siginh rlimitinh };
allow init watchdogd:process transition;
allow init wcnss_service_exec:file { getattr open read execute };
allow init wcnss_service:process { siginh rlimitinh };
allow init wcnss_service:process transition;
allow init wfdservice_exec:file { getattr open read execute };
allow init wfdservice:process { siginh rlimitinh };
allow init wfdservice:process transition;
allow init wiperiface_exec:file { getattr open read execute };
allow init wiperiface:process { siginh rlimitinh };
allow init wiperiface:process transition;
allow init wlandutservice_exec:file { getattr open read execute };
allow init wlandutservice:process { siginh rlimitinh };
allow init wlandutservice:process transition;
allow init wpa_exec:file { getattr open read execute };
allow init wpa:process { siginh rlimitinh };
allow init wpa:process transition;
allow init zygote_exec:file { getattr open read execute };
allow init zygote:process { siginh rlimitinh };
allow init zygote:process transition;
allow inputflinger init:process sigchld;
allow inputflinger inputflinger_exec:file { entrypoint open read execute getattr };
allow inputflinger inputflinger_service:service_manager add;
allow inputflinger inputflinger_tmpfs:file { read write };
allow inputflinger servicemanager:binder { call transfer };
allow inputflinger system_server:binder { call transfer };
allow inputflinger system_server:fd use;
allow installd apk_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow installd apk_data_file:file rename;
allow installd apk_data_file:lnk_file create;
allow installd apk_data_file:lnk_file { create read unlink };
allow installd apk_tmp_file:file { getattr open read ioctl lock };
allow installd app_data_file:dir relabelto;
allow installd app_data_file:file write;
allow installd app_data_file:lnk_file { create setattr };
allow installd { app_data_type system_data_file }:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom relabelto };
allow installd { app_data_type system_data_file }:{ file sock_file fifo_file } { getattr unlink rename relabelfrom relabelto setattr };
allow installd { app_data_type system_data_file }:lnk_file { create setattr getattr unlink rename relabelfrom relabelto };
allow installd app_library_file:dir { { open getattr read search ioctl } { getattr link unlink rename } };
allow installd app_library_file:file { { getattr open read ioctl lock } { getattr link unlink rename } };
allow installd asec_apk_file:file { getattr open read ioctl lock };
allow installd asec_image_file:dir search;
allow installd asec_image_file:file getattr;
allow installd bbccontainer_app_data_backend:dir { relabelto relabelfrom { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } };
allow installd bbccontainer_app_data_backend:file { relabelto relabelfrom { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } };
allow installd bbccontainer_app_data_backend:lnk_file { relabelto relabelfrom { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } };
allow installd carrier_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow installd cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow installd container_app_data_backend:dir { relabelto relabelfrom { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } };
allow installd container_app_data_backend:file { relabelto relabelfrom { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } };
allow installd container_app_data_backend:lnk_file { relabelto relabelfrom { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } };
allow installd container_app_data_file:dir { relabelto { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } };
allow installd container_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd container_app_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd container_app:fd use;
allow installd dalvikcache_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow installd dalvikcache_data_file:dir relabelfrom;
allow installd dalvikcache_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd dalvikcache_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd dalvikcache_profiles_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow installd dalvikcache_profiles_data_file:dir relabelto;
allow installd dalvikcache_profiles_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd dex2oat_exec:file { getattr open read execute };
allow installd dex2oat:process noatsecure;
allow installd dex2oat:process { siginh rlimitinh };
allow installd dex2oat:process transition;
allow installd fixmo_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom relabelto };
allow installd fixmo_app_data_file:{ file lnk_file } { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelfrom relabelto };
allow installd fixmo_app:fd use;
allow installd gad_untrusted_app_data_file:dir relabelto;
allow installd gad_untrusted_app_data_file:file write;
allow installd gad_untrusted_app_data_file:lnk_file { create setattr };
allow installd good_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom relabelto };
allow installd good_app_data_file:{ file lnk_file } { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelfrom relabelto };
allow installd good_app:fd use;
allow installd init:process sigchld;
allow installd init:unix_stream_socket connectto;
allow installd install_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd installd_exec:file { entrypoint open read execute getattr };
allow installd installd_tmpfs:file { read write };
allow installd kernel:security check_context;
allow installd kernel:system module_request;
allow installd keychain_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow installd keychain_data_file:file { { getattr open read ioctl lock } unlink };
allow installd location_app_data_file:dir { relabelto { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } };
allow installd location_app_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow installd media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow installd media_rw_data_file:dir relabelto;
allow installd media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd media_rw_data_file:file { getattr unlink };
allow installd misc_user_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow installd misc_user_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd newAttr20:dir { open getattr read search ioctl };
allow installd newAttr20:{ file lnk_file } { getattr open read ioctl lock };
allow installd newAttr22:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow installd newAttr22:dir { relabelfrom relabelto };
allow installd newAttr23:{ { { chr_file blk_file } { file lnk_file sock_file fifo_file } } } { getattr unlink };
allow installd obb_apk_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelto };
allow installd obb_apk_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd oemfs:dir { open getattr read search ioctl };
allow installd oemfs:file { getattr open read ioctl lock };
allow installd platform_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow installd platform_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd platform_app_data_file:lnk_file { create setattr };
allow installd property_socket:sock_file { open append write };
allow installd property_socket:sock_file write;
allow installd resourcecache_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow installd resourcecache_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd sdcard_external:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow installd sdcard_external:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd sdcard_prop:property_service set;
allow installd security_file:dir { open getattr read search ioctl };
allow installd security_file:file { getattr open read ioctl lock };
allow installd security_spota_file:dir { open getattr read search ioctl };
allow installd security_spota_file:file { getattr open read ioctl lock };
allow installd self:capability { chown dac_override fowner fsetid setgid setuid };
allow installd self:capability sys_admin;
allow installd self:capability sys_admin;
allow installd selinuxfs:file { { getattr open read ioctl lock } { open append write } };
allow installd sprintitson_file:dir { relabelto { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } };
allow installd sprintitson_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd sprintitson_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd store_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelto };
allow installd store_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd store_app_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd { system_app_data_file bluetooth_data_file nfc_data_file radio_data_file shell_data_file app_data_file gad_untrusted_app_data_file }:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom relabelto };
allow installd { system_app_data_file bluetooth_data_file nfc_data_file radio_data_file shell_data_file app_data_file gad_untrusted_app_data_file }:{ file sock_file fifo_file } { getattr unlink rename relabelfrom relabelto setattr };
allow installd { system_app_data_file bluetooth_data_file nfc_data_file radio_data_file shell_data_file app_data_file gad_untrusted_app_data_file }:lnk_file { create setattr getattr unlink rename relabelfrom relabelto };
allow installd system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow installd system_data_file:dir relabelfrom;
allow installd system_data_file:fifo_file { getattr open read ioctl lock };
allow installd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow installd system_data_file:{ file lnk_file sock_file fifo_file } { getattr relabelfrom unlink };
allow installd system_data_file:lnk_file { create setattr unlink };
allow installd system_data_file:sock_file { { getattr open read ioctl lock } { getattr link unlink rename } };
allow installd system_file:file { getattr execute execute_no_trans };
allow installd unlabeled:{ { { chr_file blk_file } { file lnk_file sock_file fifo_file } } } { getattr read open unlink };
allow installd unlabeled:dir { getattr search relabelfrom { { open getattr read search ioctl } { open search write add_name remove_name } } rmdir };
allow installd unlabeled:file { getattr open read ioctl lock };
allow installd unlabeled:file { getattr open read ioctl lock };
allow installd unlabeled:{ file lnk_file sock_file fifo_file } { getattr relabelfrom rename unlink setattr };
allow install_recovery block_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow install_recovery block_device:dir search;
allow install_recovery cache_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow install_recovery cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow install_recovery init:process sigchld;
allow install_recovery install_recovery_exec:file { entrypoint open read execute getattr };
allow install_recovery install_recovery_tmpfs:file { read write };
allow install_recovery proc:file { open append write };
allow install_recovery self:capability dac_override;
allow install_recovery shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow install_recovery system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow insthk drm_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow insthk drm_efs_file:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow insthk firmware:file { getattr open read ioctl lock };
allow insthk init:process sigchld;
allow insthk insthk_exec:file { entrypoint open read execute getattr };
allow insthk insthk_tmpfs:file { read write };
allow insthk qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow insthk self:capability { dac_override chown ipc_lock };
allow ipacm-diag diag_device:chr_file { read write open };
allow ipacm-diag init:process sigchld;
allow ipacm-diag ipacm-diag_exec:file { entrypoint open read execute getattr };
allow ipacm-diag ipacm-diag_tmpfs:file { read write };
allow ipacm-diag ipacm_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ipacm-diag system_data_file:dir { { open getattr read search ioctl } add_name write };
allow ipacm-diag system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow ipacm-diag system_data_file:sock_file unlink;
allow ipacm init:process sigchld;
allow ipacm ipacm:capability net_admin;
allow ipacm ipacm_data_file:dir { open search write add_name remove_name };
allow ipacm ipacm_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ipacm ipacm-diag:unix_dgram_socket sendto;
allow ipacm ipacm_exec:file { entrypoint open read execute getattr };
allow ipacm ipacm:netlink_route_socket { create getopt setopt bind read };
allow ipacm ipacm:netlink_socket { create setopt bind getattr read write };
allow ipacm ipacm_socket:sock_file write;
allow ipacm ipacm_tmpfs:file { read write };
allow ipacm ipacm:udp_socket { create ioctl };
allow ipacm ipa_dev:chr_file { { getattr open read ioctl lock } { open append write } };
allow ipacm kernel:system module_request;
allow ipruleset init:process sigchld;
allow ipruleset ipruleset_exec:file { entrypoint open read execute getattr };
allow ipruleset ipruleset_tmpfs:file { read write };
allow IPSecService init:process sigchld;
allow IPSecService IPSecService_exec:file { entrypoint open read execute getattr };
allow IPSecService IPSecService_tmpfs:file { read write };
allow IPSecService ipsec_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow IPSecService kernel:system module_request;
allow IPSecService self:capability { net_admin dac_override };
allow IPSecService socket_device:dir { open search write add_name remove_name };
allow IPSecService socket_device:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow irm_app anr_data_file:file { getattr open read ioctl lock };
allow irm_app { apk_tmp_file apk_private_tmp_file }:dir { open getattr read search ioctl };
allow irm_app { apk_tmp_file apk_private_tmp_file }:file { getattr open read ioctl lock };
allow irm_app app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow irm_app app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow irm_app app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow irm_app asec_apk_file:file { getattr open read ioctl lock };
allow irm_app asec_public_file:file { execute execmod };
allow irm_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow irm_app block_device:blk_file getattr;
allow irm_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow irm_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow irm_app container_app_data_backend:dir { open getattr read search ioctl };
allow irm_app DMM-daemon:unix_stream_socket connectto;
allow irm_app download_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow irm_app download_file:fd use;
allow irm_app download_file:file { unlink { { getattr open read ioctl lock } { open append write } } };
allow irm_app gad_untrusted_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow irm_app gad_untrusted_app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow irm_app gad_untrusted_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow irm_app irm_media_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow irm_app irm_media_data_file:{ file lnk_file sock_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow irm_app itsonclient_app:unix_dgram_socket sendto;
allow irm_app itsonclient_app:unix_stream_socket connectto;
allow irm_app itson_socket:dir { open getattr read search ioctl };
allow irm_app itson_socket:{ file lnk_file } { getattr open read ioctl lock };
allow irm_app itson_socket:sock_file write;
allow irm_app itson_socket:sock_file write;
allow irm_app knox_dar_shared_device:chr_file write;
allow irm_app knox_kap_device:chr_file getattr;
allow irm_app knox_untrusted_app:process sigkill;
allow irm_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow irm_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow irm_app mmb_data_file:sock_file write;
allow irm_app mmb_mw:unix_stream_socket connectto;
allow irm_app mpctl_socket:sock_file write;
allow irm_app mpctl_socket:sock_file write;
allow irm_app mpdecision:unix_dgram_socket sendto;
allow irm_app mpdecision:unix_stream_socket connectto;
allow irm_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow irm_app platform_app_data_file:file { rename unlink };
allow irm_app self:{ tcp_socket udp_socket netlink_route_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow irm_app shell_data_file:dir { open getattr read search ioctl };
allow irm_app shell_data_file:file { getattr open read ioctl lock };
allow irm_app sprintitson_file:dir { open getattr read search ioctl };
allow irm_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow irm_app s_system_app:unix_stream_socket connectto;
allow irm_app s_system_app:unix_stream_socket { read write };
allow irm_app system_app_data_file:file { read write getattr };
allow irm_app system_app:unix_stream_socket connectto;
allow irm_app system_app:unix_stream_socket { read write };
allow irm_app system_server:unix_stream_socket connectto;
allow irm_app tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow irm_app untrusted_app_devpts:chr_file { open getattr read write ioctl };
allow irm_app untrusted_app_tmpfs:file execmod;
allow irm_app untrusted_app_tmpfs:file execute;
allow irm_app untrusted_app_tmpfs:file { read write };
allow irm_platform_app app_data_file:file execmod;
allow irm_platform_app bbccontainer_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow irm_platform_app bbccontainer_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow irm_platform_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow irm_platform_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow irm_platform_app container_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow irm_platform_app container_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow irm_platform_app gad_untrusted_app_data_file:file execmod;
allow irm_platform_app irm_media_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow irm_platform_app irm_media_data_file:{ file lnk_file sock_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow irm_platform_app irm_platform_app_tmpfs:file execute;
allow irm_platform_app irm_platform_app_tmpfs:file { read write };
allow irm_platform_app irm_platform_app_tmpfs:file write;
allow irm_platform_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow irm_platform_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow irm_platform_app platform_app_service:service_manager add;
allow { irm_platform_app platform_app s_platform_app } { irm_platform_app platform_app s_platform_app }:process *;
allow irm_platform_app platform_app_tmpfs:file write;
allow irm_platform_app shell_data_file:dir search;
allow irm_platform_app shell_data_file:file { open getattr read };
allow irsc_util devpts:chr_file { read write getattr ioctl };
allow irsc_util init:process sigchld;
allow irsc_util irsc_util_exec:file { entrypoint open read execute getattr };
allow irsc_util irsc_util:socket { create ioctl };
allow irsc_util irsc_util_tmpfs:file { read write };
allow irsc_util system_data_file:file { getattr open read ioctl lock };
allow isolated_app apk_data_file:dir getattr;
allow isolated_app app_data_file:file execute;
allow isolated_app app_data_file:file execute;
allow isolated_app appdomain:unix_stream_socket { getattr getopt };
allow isolated_app appdomain:unix_stream_socket { read write };
allow isolated_app dalvikcache_data_file:file execute;
allow isolated_app gad_untrusted_app_data_file:file execute;
allow isolated_app gad_untrusted_app_data_file:file execute;
allow isolated_app init_tmpfs:file read;
allow isolated_app init_tmpfs:file read;
allow isolated_app init:unix_stream_socket { read write getattr getopt };
allow isolated_app init:unix_stream_socket { read write getattr getopt };
allow isolated_app isolated_app_tmpfs:file execute;
allow isolated_app isolated_app_tmpfs:file { read write };
allow isolated_app isolated_app_tmpfs:file write;
allow isolated_app platform_app_data_file:file { getattr open read ioctl lock };
allow isolated_app sdcard_internal:file { { getattr open read ioctl lock } { open append write } };
allow isolated_app system_file:file execmod;
allow { isolated_app untrusted_app umcagent_app vpn_untrusted_app trustonicpartner_app llk_untrusted_app filtered_untrusted_app filtered_google_app knox_untrusted_app irm_app gad_untrusted_app carrier_app } graphics_device:chr_file { create setattr getattr open ioctl lock append link unlink rename };
allow isolated_app untrusteddomain:unix_stream_socket shutdown;
allow isolated_app vold:fd use;
allow itsonbs bugreport_exec:file { execute execute_no_trans };
allow itsonbs carrier_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom };
allow itsonbs carrier_file:file execute_no_trans;
allow itsonbs carrier_file:{ file lnk_file } { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelfrom };
allow itsonbs cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow itsonbs devpts:chr_file { getattr open read ioctl lock };
allow itsonbs dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow itsonbs dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow itsonbs dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow itsonbs dumpstate_exec:file { execute execute_no_trans };
allow itsonbs dumpsys_exec:file { execute execute_no_trans };
allow itsonbs init:process sigchld;
allow itsonbs itsonbs_exec:file { entrypoint { getattr open read ioctl lock } };
allow itsonbs itsonbs_exec:file { entrypoint open read execute getattr };
allow itsonbs kernel:key { view read search };
allow itsonbs security_file:file { read open };
allow itsonbs security_spota_file:file { read open };
allow itsonbs self:capability { dac_override sys_admin sys_module fowner chown fsetid };
allow itsonbs shell_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow itsonbs shell_data_file:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow itsonbs shell_exec:file { getattr open read ioctl lock };
allow itsonbs sprintitson_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelto };
allow itsonbs sprintitson_file:file execute_no_trans;
allow itsonbs sprintitson_file:{ file lnk_file } { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelto };
allow itsonbs system_file:dir { open getattr read search ioctl };
allow itsonbs system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow itsonclient_app itsonclient_app_devpts:chr_file { open getattr read write ioctl };
allow itsonclient_app itsonclient_app_tmpfs:file execute;
allow itsonclient_app itsonclient_app_tmpfs:file { read write };
allow itsonclient_app itson_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow itsonclient_app itson_socket:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow itsonclient_app itson_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow itsonclient_app port:tcp_socket { name_connect name_bind };
allow itsonclient_app self:{ socket netlink_socket } *;
allow itsonclient_app self:udp_socket { create setopt bind node_bind getattr connect write getopt read };
allow itsonclient_app sprintitson_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow itsonclient_app sprintitson_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } execute };
allow itsonclient_app sprintitson_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow itsonclient_app zygote:binder { call transfer };
allow jackservice androidshmservice_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow jackservice apaservice:binder transfer;
allow jackservice apaservice_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow jackservice apaservice:unix_stream_socket connectto;
allow jackservice app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow jackservice app_library_file:dir search;
allow jackservice audio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow jackservice audio_device:dir search;
allow jackservice cgroup:dir { create add_name };
allow jackservice dumpstate:binder transfer;
allow jackservice dumpsys:binder transfer;
allow jackservice gad_untrusted_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow jackservice ime_app:binder transfer;
allow jackservice init:process sigchld;
allow jackservice init:unix_stream_socket connectto;
allow jackservice init:unix_stream_socket { read write };
allow jackservice jack_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow jackservice jack_data_file:{ file sock_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow jackservice jackservice_exec:file { entrypoint open read execute getattr };
allow jackservice jackservice_service:service_manager add;
allow jackservice jackservice_tmpfs:file { read write };
allow jackservice jack_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow jackservice jack_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow jackservice media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow jackservice media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow jackservice mediaserver:binder { call transfer };
allow jackservice mediaserver:binder transfer;
allow jackservice mediaserver:fd use;
allow jackservice radio:binder transfer;
allow jackservice radio:fd use;
allow jackservice sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow jackservice sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow jackservice self:binder { transfer call };
allow jackservice self:capability { setuid setgid kill };
allow jackservice servicemanager:binder { call transfer };
allow jackservice shell:binder transfer;
allow jackservice s_system_app:binder transfer;
allow jackservice s_system_app:fd use;
allow jackservice sysfs:file write;
allow jackservice sysfs_ss_writable:file write;
allow jackservice system_app:binder transfer;
allow jackservice system_app:fd use;
allow jackservice system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow jackservice system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow jackservice system_file:file execute_no_trans;
allow jackservice { untrusted_app umcagent_app vpn_untrusted_app trustonicpartner_app llk_untrusted_app filtered_untrusted_app filtered_google_app knox_untrusted_app irm_app gad_untrusted_app carrier_app platform_app s_platform_app }:binder { call transfer };
allow jackservice { untrusted_app umcagent_app vpn_untrusted_app trustonicpartner_app llk_untrusted_app filtered_untrusted_app filtered_google_app knox_untrusted_app irm_app gad_untrusted_app carrier_app platform_app s_platform_app }:binder transfer;
allow jackservice { untrusted_app umcagent_app vpn_untrusted_app trustonicpartner_app llk_untrusted_app filtered_untrusted_app filtered_google_app knox_untrusted_app irm_app gad_untrusted_app carrier_app platform_app s_platform_app }:fd use;
allow jackservice untrusteddomain:fd use;
allow jackservice untrusteddomain:unix_stream_socket connectto;
allow kapd block_device:dir { open getattr read search ioctl };
allow kapd emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow kapd init:process sigchld;
allow kapd kernel:system syslog_read;
allow kapd kmsg_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow kapd knox_kap_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow kapd mmcblk0_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow kapd rootfs:file { entrypoint open read execute getattr };
allow kapd self:capability dac_override;
allow kernel app_data_file:file { getattr open read ioctl lock };
allow kernel app_data_file:file read;
allow kernel app_data_type:file { open append write };
allow kernel ashmem_device:chr_file { getattr execute execute_no_trans };
allow kernel block_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow kernel block_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow kernel corehelper:process { siginh rlimitinh };
allow kernel corehelper:process transition;
allow kernel corehelper_sh_file:file { getattr open read execute };
allow kernel device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow kernel { device socket_device }:dir relabelto;
allow kernel emmcblk_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow kernel gad_untrusted_app_data_file:file { getattr open read ioctl lock };
allow kernel gad_untrusted_app_data_file:file read;
allow kernel init:process dyntransition;
allow kernel kmem_device:chr_file { create unlink setattr relabelto };
allow kernel labeledfs:filesystem { mount unmount };
allow kernel loop_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow kernel node:tcp_socket node_bind;
allow kernel port:tcp_socket name_bind;
allow kernel powerctl_prop:property_service set;
allow kernel properties_device:file relabelto;
allow kernel property_data_file:dir { open getattr read search ioctl };
allow kernel property_data_file:file { getattr open read ioctl lock };
allow kernel ram_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow kernel rootfs:file execute_no_trans;
allow kernel sdcard_external:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow kernel sdcard_external:file { { getattr open read ioctl lock } { open append write } };
allow kernel sdcard_internal:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow kernel sdcard_internal:file { { getattr open read ioctl lock } { open append write } };
allow kernel sdcard_type:file { read write };
allow kernel self:capability { mknod sys_module };
allow kernel self:process setcurrent;
allow kernel self:process ~{ transition dyntransition };
allow kernel self:security setcheckreqprot;
allow kernel self:system syslog_read;
allow kernel shell_exec:file { getattr open read execute };
allow kernel shell:process { siginh rlimitinh };
allow kernel shell:process transition;
allow kernel swap_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow kernel sysfs:{ dir file lnk_file } relabelfrom;
allow kernel sysfs_type:{ dir file lnk_file } relabelto;
allow kernel system_prop:property_service set;
allow kernel unlabeled:dir search;
allow kernel usbfs:filesystem mount;
allow keystore app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow keystore appdomain:binder transfer;
allow keystore audit_log:file { { getattr open read ioctl lock } { open append write } };
allow keystore binderservicedomain:binder transfer;
allow keystore block_device:dir { open getattr read search ioctl };
allow keystore charon:binder transfer;
allow keystore denial_prop:property_service set;
allow keystore domain:fd use;
allow keystore dumpstate:binder transfer;
allow keystore dumpsys:binder transfer;
allow keystore emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow keystore firmware:dir { open getattr read search ioctl };
allow keystore firmware:file { getattr open read ioctl lock };
allow keystore gad_untrusted_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow keystore good_app:binder transfer;
allow keystore init:process sigchld;
allow keystore init:unix_stream_socket { read write connectto };
allow keystore kernel:security compute_av;
allow keystore keystore_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow keystore keystore_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow keystore keystore_exec:file { entrypoint open read execute getattr };
allow keystore keystore_exec:file { getattr };
allow keystore keystore_service:service_manager add;
allow keystore keystore_tmpfs:file { read write };
allow keystore mobicoredaemon:unix_stream_socket connectto;
allow keystore mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow keystore mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow { keystore netd logd } self:process ~ptrace;
allow keystore platform_app_data_file:file { open append write };
allow keystore proc_avc_msg:file { { getattr open read ioctl lock } { open append write } };
allow keystore property_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow keystore qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow keystore qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow keystore racoon:binder transfer;
allow keystore sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow keystore sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow keystore self:netlink_selinux_socket *;
allow keystore selinuxfs:file { { getattr open read ioctl lock } { open append write } };
allow keystore servicemanager:binder { call transfer };
allow keystore system_prop:property_service set;
allow keystore tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow keystore tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow keystore tee:unix_stream_socket connectto;
allow keystore tz_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow keystore wpa:binder transfer;
allow keystore wpa:binder transfer;
allow kiesexe anr_data_file:file { open append write };
allow kiesexe dalvikcache_data_file:dir { open search write add_name remove_name };
allow kiesexe dalvikcache_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow kiesexe ddexe:unix_stream_socket connectto;
allow kiesexe device:file { getattr open read ioctl lock };
allow kiesexe init:process sigchld;
allow kiesexe init:unix_stream_socket connectto;
allow kiesexe kiesexe_exec:file { entrypoint open read execute getattr };
allow kiesexe kiesexe_tmpfs:file { read write };
allow kiesexe kies_prop:property_service set;
allow kiesexe mobexdaemon:process signal;
allow kiesexe newAttr33:dir { open getattr read search ioctl };
allow kiesexe newAttr33:{ file lnk_file } { getattr open read ioctl lock };
allow kiesexe newAttr59:dir { open getattr read search ioctl };
allow kiesexe newAttr59:{ file lnk_file } { getattr open read ioctl lock };
allow kiesexe property_socket:sock_file write;
allow kiesexe sdcard_internal:dir { open getattr read search ioctl };
allow kiesexe sdcard_internal:file { getattr open read ioctl lock };
allow kiesexe self:capability { dac_override setuid sys_boot };
allow kiesexe servicemanager:binder { call transfer };
allow kiesexe servicemanager:binder { call transfer };
allow kiesexe servicemanager:fd use;
allow kiesexe { shell_exec zygote_exec }:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow kiesexe sysfs:file { open append write };
allow kiesexe sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow kiesexe system:binder { call transfer };
allow kiesexe system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow kiesexe system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow kiesexe system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow kiesexe system:fd use;
allow kiesexe system_file:file execute_no_trans;
allow kiesexe system_file:file { getattr execute execute_no_trans };
allow kiesexe system_prop:property_service set;
allow kiesexe system_server:binder transfer;
allow kiesexe tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow knox_system_app anr_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app anr_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app at_distributor:unix_stream_socket connectto;
allow knox_system_app backup_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app backup_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app bbccontainer_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app bbccontainer_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app container_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app container_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app container_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app container_app_data_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } execute };
allow knox_system_app container_app_data_file:lnk_file { getattr open read ioctl lock };
allow knox_system_app container_app_sdcard_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app container_app_sdcard_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app container_system_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app container_system_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app dalvikcache_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app dalvikcache_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app debugfs:dir { open getattr read search ioctl };
allow knox_system_app debugfs:file { getattr open read ioctl lock };
allow knox_system_app dnsproxyd_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app knox_system_app_tmpfs:file execute;
allow knox_system_app knox_system_app_tmpfs:file { read write };
allow knox_system_app knox_untrusted_app:binder transfer;
allow knox_system_app netd:unix_stream_socket connectto;
allow knox_system_app newAttr11:binder { call transfer };
allow knox_system_app newAttr11:binder transfer;
allow knox_system_app newAttr11:fd use;
allow knox_system_app port:tcp_socket name_connect;
allow knox_system_app sec_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app shell_data_file:dir { { open getattr read search ioctl } write };
allow knox_system_app shell_data_file:file { { getattr open read ioctl lock } write };
allow knox_system_app system_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app system_app_data_file:{ file fifo_file lnk_file sock_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app system_app_data_file:file { getattr execute execute_no_trans };
allow knox_system_app users_system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_system_app users_system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_system_app wifi_data_file:dir { open getattr read search ioctl };
allow knox_system_app wifi_data_file:file { getattr open read ioctl lock };
allow knox_untrusted_app anr_data_file:file { getattr open read ioctl lock };
allow knox_untrusted_app { apk_tmp_file apk_private_tmp_file }:dir { open getattr read search ioctl };
allow knox_untrusted_app { apk_tmp_file apk_private_tmp_file }:file { getattr open read ioctl lock };
allow knox_untrusted_app app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow knox_untrusted_app app_data_file:file execmod;
allow knox_untrusted_app app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow knox_untrusted_app app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_untrusted_app asec_apk_file:file { getattr open read ioctl lock };
allow knox_untrusted_app asec_public_file:file { execute execmod };
allow knox_untrusted_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow knox_untrusted_app block_device:blk_file getattr;
allow knox_untrusted_app bugreport_exec:file { execute execute_no_trans };
allow knox_untrusted_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_untrusted_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_untrusted_app container_app:binder { call transfer };
allow knox_untrusted_app container_app_data_backend:dir { open getattr read search ioctl };
allow knox_untrusted_app container_app:fd use;
allow knox_untrusted_app DMM-daemon:unix_stream_socket connectto;
allow knox_untrusted_app download_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow knox_untrusted_app download_file:fd use;
allow knox_untrusted_app download_file:file { unlink { { getattr open read ioctl lock } { open append write } } };
allow knox_untrusted_app dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_untrusted_app dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_untrusted_app dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_untrusted_app dumpstate_exec:file { execute execute_no_trans };
allow knox_untrusted_app dumpsys_exec:file { execute execute_no_trans };
allow knox_untrusted_app fixmo_app:binder { call transfer };
allow knox_untrusted_app fixmo_app:binder transfer;
allow knox_untrusted_app fixmo_app:fd use;
allow knox_untrusted_app gad_untrusted_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow knox_untrusted_app gad_untrusted_app_data_file:file execmod;
allow knox_untrusted_app gad_untrusted_app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow knox_untrusted_app gad_untrusted_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_untrusted_app init_tmpfs:file read;
allow knox_untrusted_app itsonclient_app:unix_dgram_socket sendto;
allow knox_untrusted_app itsonclient_app:unix_stream_socket connectto;
allow knox_untrusted_app itson_socket:dir { open getattr read search ioctl };
allow knox_untrusted_app itson_socket:{ file lnk_file } { getattr open read ioctl lock };
allow knox_untrusted_app itson_socket:sock_file write;
allow knox_untrusted_app itson_socket:sock_file write;
allow knox_untrusted_app knox_clipboard_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_untrusted_app knox_clipboard_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_untrusted_app knox_dar_shared_device:chr_file write;
allow knox_untrusted_app knox_kap_device:chr_file getattr;
allow knox_untrusted_app knox_system_app:binder { call transfer };
allow knox_untrusted_app knox_system_app:fd use;
allow knox_untrusted_app knox_untrusted_app:process sigkill;
allow knox_untrusted_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_untrusted_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_untrusted_app mmb_data_file:sock_file write;
allow knox_untrusted_app mmb_mw:unix_stream_socket connectto;
allow knox_untrusted_app mpctl_socket:sock_file write;
allow knox_untrusted_app mpctl_socket:sock_file write;
allow knox_untrusted_app mpdecision:unix_dgram_socket sendto;
allow knox_untrusted_app mpdecision:unix_stream_socket connectto;
allow knox_untrusted_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow knox_untrusted_app newAttr34:dir { open getattr read search ioctl };
allow knox_untrusted_app newAttr34:fd use;
allow knox_untrusted_app newAttr34:{ file lnk_file } { getattr open read ioctl lock };
allow knox_untrusted_app newAttr36:binder { call transfer };
allow knox_untrusted_app newAttr3:binder { call transfer };
allow knox_untrusted_app newAttr3:binder transfer;
allow knox_untrusted_app newAttr3:fd use;
allow knox_untrusted_app newAttr95:unix_stream_socket connectto;
allow knox_untrusted_app platform_app_data_file:file { rename unlink };
allow knox_untrusted_app servicemanager:binder { call transfer };
allow knox_untrusted_app shell_data_file:dir { open getattr read search ioctl };
allow knox_untrusted_app shell_data_file:file { getattr open read ioctl lock };
allow knox_untrusted_app smartcard_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow knox_untrusted_app smartcard_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_untrusted_app smartcard_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow knox_untrusted_app sprintitson_file:dir { open getattr read search ioctl };
allow knox_untrusted_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow knox_untrusted_app s_system_app:unix_stream_socket connectto;
allow knox_untrusted_app s_system_app:unix_stream_socket { read write };
allow knox_untrusted_app sysfs_battery_supply:file { { getattr open read ioctl lock } { open append write } };
allow knox_untrusted_app system_app_data_file:file { read write getattr };
allow knox_untrusted_app system_app:unix_stream_socket connectto;
allow knox_untrusted_app system_app:unix_stream_socket { read write };
allow knox_untrusted_app system_file:file execute_no_trans;
allow knox_untrusted_app system_server:unix_stream_socket connectto;
allow knox_untrusted_app tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow knox_untrusted_app untrusted_app_devpts:chr_file { open getattr read write ioctl };
allow knox_untrusted_app untrusted_app_tmpfs:file execmod;
allow knox_untrusted_app untrusted_app_tmpfs:file execute;
allow knox_untrusted_app untrusted_app_tmpfs:file { read write };
allow knox_untrusted_app vmware_app:binder *;
allow ks block_device:dir { { open getattr read search ioctl } add_name write };
allow ks block_device:lnk_file { getattr open read ioctl lock };
allow ks dw_mmc_device:dir { { open getattr read search ioctl } add_name write };
allow ks dw_mmc_device:lnk_file { getattr open read ioctl lock };
allow ks efsks:fd use;
allow ks efsks:process sigchld;
allow ks emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow ks firmware:file { getattr open read ioctl lock };
allow ks init:unix_stream_socket connectto;
allow ks init:unix_stream_socket connectto;
allow ks ks_exec:file { entrypoint open read execute getattr };
allow ks m9kefsblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow ks modem_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow ks modem_device:lnk_file { getattr open read ioctl lock };
allow ks modemstblk_device:blk_file { open append write };
allow ks property_socket:sock_file { open append write };
allow ks property_socket:sock_file write;
allow ks qcks:fd use;
allow ks radio_device:chr_file { getattr open read ioctl lock };
allow ks radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ks rild_prop:property_service set;
allow ks sdcard_type:file { getattr open read ioctl lock };
allow ks self:capability2 block_suspend;
allow ks self:capability { dac_override chown sys_boot };
allow ks shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ks sysfs:file { { getattr open read ioctl lock } { open append write } };
allow ks sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow ks sysfs_wake_lock:file { { getattr open read ioctl lock } append };
allow ks system_data_file:file { { getattr open read ioctl lock } { open append write } };
allow ks system_file:file { getattr execute execute_no_trans };
allow ks tombstone_data_file:dir { open getattr read search ioctl };
allow ks tombstones_data_file:dir { { open getattr read search ioctl } add_name write };
allow ks tombstones_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ks usb_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow launcher firmware_file:dir { open getattr read search ioctl };
allow launcher firmware_file:file { getattr open read ioctl lock };
allow launcher init:process sigchld;
allow launcher init:unix_stream_socket connectto;
allow launcher launcher_exec:file { entrypoint open read execute getattr };
allow launcher launcher_tmpfs:file { read write };
allow launcher property_socket:sock_file write;
allow launcher qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow launcher self:capability dac_override;
allow launcher system_prop:property_service set;
allow launcher tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow lhd bbd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow lhd init:process sigchld;
allow lhd lhd_exec:file { entrypoint open read execute getattr };
allow lhd lhd_tmpfs:file { read write };
allow lhd node:tcp_socket node_bind;
allow lhd port:tcp_socket name_bind;
allow lhd sysfs:file { { getattr open read ioctl lock } { open append write } };
allow lhd sysfs_sec:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow lhd sysfs_sec:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow lhd sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow lhd sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow lhd system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow lhd system_data_file:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow lhd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow llk_untrusted_app anr_data_file:file { getattr open read ioctl lock };
allow llk_untrusted_app { apk_tmp_file apk_private_tmp_file }:dir { open getattr read search ioctl };
allow llk_untrusted_app { apk_tmp_file apk_private_tmp_file }:file { getattr open read ioctl lock };
allow llk_untrusted_app app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow llk_untrusted_app app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow llk_untrusted_app app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow llk_untrusted_app asec_apk_file:file { getattr open read ioctl lock };
allow llk_untrusted_app asec_public_file:file { execute execmod };
allow llk_untrusted_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow llk_untrusted_app block_device:blk_file getattr;
allow llk_untrusted_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow llk_untrusted_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow llk_untrusted_app container_app_data_backend:dir { open getattr read search ioctl };
allow llk_untrusted_app device:fifo_file { { getattr open read ioctl lock } { open append write } };
allow llk_untrusted_app device:sock_file { { getattr open read ioctl lock } { open append write } };
allow llk_untrusted_app DMM-daemon:unix_stream_socket connectto;
allow llk_untrusted_app download_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow llk_untrusted_app download_file:fd use;
allow llk_untrusted_app download_file:file { unlink { { getattr open read ioctl lock } { open append write } } };
allow llk_untrusted_app gad_untrusted_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow llk_untrusted_app gad_untrusted_app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow llk_untrusted_app gad_untrusted_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow llk_untrusted_app itsonclient_app:unix_dgram_socket sendto;
allow llk_untrusted_app itsonclient_app:unix_stream_socket connectto;
allow llk_untrusted_app itson_socket:dir { open getattr read search ioctl };
allow llk_untrusted_app itson_socket:{ file lnk_file } { getattr open read ioctl lock };
allow llk_untrusted_app itson_socket:sock_file write;
allow llk_untrusted_app itson_socket:sock_file write;
allow llk_untrusted_app knox_dar_shared_device:chr_file write;
allow llk_untrusted_app knox_kap_device:chr_file getattr;
allow llk_untrusted_app knox_untrusted_app:process sigkill;
allow llk_untrusted_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow llk_untrusted_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow llk_untrusted_app mmb_data_file:sock_file write;
allow llk_untrusted_app mmb_mw:unix_stream_socket connectto;
allow llk_untrusted_app mpctl_socket:sock_file write;
allow llk_untrusted_app mpctl_socket:sock_file write;
allow llk_untrusted_app mpdecision:unix_dgram_socket sendto;
allow llk_untrusted_app mpdecision:unix_stream_socket connectto;
allow llk_untrusted_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow llk_untrusted_app platform_app_data_file:file { rename unlink };
allow llk_untrusted_app shell_data_file:dir { open getattr read search ioctl };
allow llk_untrusted_app shell_data_file:file { getattr open read ioctl lock };
allow llk_untrusted_app sprintitson_file:dir { open getattr read search ioctl };
allow llk_untrusted_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow llk_untrusted_app s_system_app:unix_stream_socket connectto;
allow llk_untrusted_app s_system_app:unix_stream_socket { read write };
allow llk_untrusted_app system_app_data_file:file { read write getattr };
allow llk_untrusted_app system_app:unix_stream_socket connectto;
allow llk_untrusted_app system_app:unix_stream_socket { read write };
allow llk_untrusted_app system_server:unix_stream_socket connectto;
allow llk_untrusted_app tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow llk_untrusted_app untrusted_app_devpts:chr_file { open getattr read write ioctl };
allow llk_untrusted_app untrusted_app_tmpfs:file execmod;
allow llk_untrusted_app untrusted_app_tmpfs:file execute;
allow llk_untrusted_app untrusted_app_tmpfs:file { read write };
allow lmkd appdomain:dir { open getattr read search ioctl };
allow lmkd appdomain:{ file lnk_file } { getattr open read ioctl lock };
allow lmkd appdomain:file write;
allow lmkd appdomain:process sigkill;
allow lmkd cgroup:dir { remove_name rmdir };
allow lmkd { good_app fixmo_app }:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow lmkd { good_app fixmo_app }:file { { getattr open read ioctl lock } { open append write } };
allow lmkd init:process sigchld;
allow lmkd lmkd_exec:file { entrypoint open read execute getattr };
allow lmkd lmkd_tmpfs:file { read write };
allow lmkd self:capability { dac_override sys_resource kill };
allow lmkd self:capability ipc_lock;
allow lmkd self:capability sys_nice;
allow lmkd self:process ~noatsecure;
allow lmkd sysfs:file write;
allow lmkd sysfs_lowmemorykiller:file { open append write };
allow lmkd sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow lmkd system_server:dir { open getattr read search ioctl };
allow lmkd system_server:{ file lnk_file } { getattr open read ioctl lock };
allow lmkd system_server:file write;
allow location_app anr_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow location_app anr_data_file:file { { getattr open read ioctl lock } { open append write } };
allow location_app location_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow location_app location_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } ;
allow location_app location_app_tmpfs:file execute;
allow location_app location_app_tmpfs:file { read write };
allow location_app location_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow location_app location_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow location_app qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow location_app qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow location_app qmuxd_socket:sock_file write;
allow location_app qmuxd:unix_stream_socket connectto;
allow location_app self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow location_app servicemanager:binder { call transfer };
allow location_app system_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow location_app system_app_data_file:dir { open getattr read search ioctl };
allow location_app system_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow location init:process sigchld;
allow location location_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow location location_data_file:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow location location_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow location location_exec:file { entrypoint open read execute getattr };
allow location location_exec:file execute_no_trans;
allow location location_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow location location_tmpfs:file { read write };
allow location-mq gps_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow location-mq gps_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow location-mq system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow location-mq system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow location netmgrd:dir { open getattr read search ioctl };
allow location netmgrd:{ file lnk_file } { getattr open read ioctl lock };
allow location qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow location qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow location qmuxd_socket:sock_file write;
allow location qmuxd:unix_stream_socket connectto;
allow location rfs_shared_hlos_file:dir { open getattr read search ioctl };
allow location rfs_shared_hlos_file:file { getattr open read ioctl lock };
allow location self:capability { setuid setgid net_admin };
allow location self:netlink_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow location self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow location sensors_device:chr_file { getattr open read ioctl lock };
allow location sensors_socket:sock_file { open append write };
allow location sensors:unix_stream_socket connectto;
allow location servicemanager:binder { call transfer };
allow location surfaceflinger:binder transfer;
allow location system_server:binder { call transfer };
allow location system_server:fd use;
allow location system_server:unix_stream_socket { read write };
allow logd domain:dir { open getattr read search ioctl };
allow logd domain:{ file lnk_file } { getattr open read ioctl lock };
allow logd init:process sigchld;
allow logd kernel:system syslog_read;
allow logd kmsg_device:chr_file { open append write };
allow logd location_app:dir { open getattr read search ioctl };
allow logd location_app:file { getattr open read ioctl lock };
allow logd logd_exec:file { entrypoint open read execute getattr };
allow logd logd_tmpfs:file { read write };
allow logd self:capability2 syslog;
allow logd self:capability { setuid setgid sys_nice audit_control };
allow logd self:netlink_audit_socket { { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } } nlmsg_write };
allow logwrapper cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow logwrapper debuggerd:unix_dgram_socket sendto;
allow logwrapper devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow logwrapper init:process sigchld;
allow logwrapper log_device:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow logwrapper log_device:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow logwrapper logwrapper_exec:file { entrypoint open read execute getattr };
allow logwrapper logwrapper_tmpfs:file { read write };
allow logwrapper newAttr59:dir { open getattr read search ioctl };
allow logwrapper newAttr59:{ file lnk_file } { getattr open read ioctl lock };
allow logwrapper self:capability { setuid net_bind_service setgid net_raw net_admin sys_admin };
allow logwrapper self:capability sys_module;
allow logwrapper self:{ socket udp_socket packet_socket netlink_socket netlink_route_socket } *;
allow logwrapper s_system_app:unix_dgram_socket sendto;
allow logwrapper system_app:unix_dgram_socket sendto;
allow logwrapper system_file:file { getattr execute execute_no_trans };
allow logwrapper system_server:unix_dgram_socket sendto;
allow logwrapper system_wpa_socket:sock_file write;
allow logwrapper wifi_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow logwrapper wifi_data_file:file { { getattr open read ioctl lock } { open append write } };
allow logwrapper wifi_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow logwrapper wpa_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow lowi-server gps_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow lowi-server location-mq:unix_stream_socket connectto;
allow lpm ashmem_device:chr_file execute;
allow lpm block_device:dir { open getattr read search ioctl };
allow lpm efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow lpm efs_type:dir { open getattr read search ioctl };
allow lpm efs_type:file { getattr open read ioctl lock };
allow lpm emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow lpm graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow lpm graphics_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow lpm init:process sigchld;
allow lpm input_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow lpm input_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow lpm input_device:file { { getattr open read ioctl lock } { open append write } };
allow lpm lpm_exec:file { entrypoint open read execute getattr };
allow lpm lpm_tmpfs:file { read write };
allow lpm paramblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow lpm platform_app_data_file:dir { open getattr read search ioctl };
allow lpm platform_app_data_file:file { getattr open read ioctl lock };
allow lpm proc_sysrq:file { { getattr open read ioctl lock } { open append write } };
allow lpm self:capability { net_admin sys_tty_config sys_boot dac_override };
allow lpm self:netlink_kobject_uevent_socket { create setopt bind read };
allow lpm sysfs:file { { getattr open read ioctl lock } { open append write } };
allow lpm sysfs_graphics:file { { getattr open read ioctl lock } { open append write } };
allow lpm sysfs_sec:file { { getattr open read ioctl lock } { open append write } };
allow lpm sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow lptcpgc init:process sigchld;
allow lptcpgc lptcpgc_exec:file { entrypoint open read execute getattr };
allow lptcpgc lptcpgc_tmpfs:file { read write };
allow lptcpgc lptcp_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow lptcpgc socket_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow lptcpgc system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow lptcpgc system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow lptcpgc system_data_file:dir { write remove_name add_name };
allow lptcpgc system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow lptcpgc system_data_file:sock_file { create unlink };
allow macloader init:process sigchld;
allow macloader kernel:system module_request;
allow macloader macloader_exec:file { entrypoint open read execute getattr };
allow macloader macloader_tmpfs:file { read write };
allow macloader self:capability { net_admin net_raw dac_read_search dac_override sys_module chown };
allow macloader sysfs:file { { getattr open read ioctl lock } { open append write } };
allow macloader sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow macloader system_data_file:file { getattr open read ioctl lock };
allow macloader wifi_efs_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow macloader wifi_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow mcStarter firmware_file:dir { open getattr read search ioctl };
allow mcStarter firmware_file:file { getattr open read ioctl lock };
allow mcStarter init:process sigchld;
allow mcStarter mcStarter_exec:file { entrypoint open read execute getattr };
allow mcStarter tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mdm_helper block_device:dir { getattr search write };
allow mdm_helper efs_boot_dev:blk_file { open read getattr write };
allow mdm_helper efsbridgehsic_device:chr_file { read write open getattr ioctl };
allow mdm_helper esoc_device:chr_file { read write ioctl open };
allow mdm_helper esoc_device:dir { open search };
allow mdm_helper firmware_file:dir { search };
allow mdm_helper firmware_file:file { open read getattr };
allow mdm_helper init:process sigchld;
allow mdm_helper ksbridgehsic_device:chr_file { read write open getattr ioctl };
allow mdm_helper mdm_helper_exec:file { entrypoint open read execute getattr };
allow mdm_helper mdm_helper_exec:file { execute_no_trans };
allow mdm_helper mdm_helper_tmpfs:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mdm_helper mdm_helper_tmpfs:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mdm_helper mdm_helper_tmpfs:file { read write };
allow mdm_helper_proxy self:capability { dac_read_search dac_override };
allow mdm_helper self:capability2 block_suspend;
allow mdm_helper self:capability { dac_read_search dac_override chown fowner fsetid sys_resource net_raw };
allow mdm_helper shell_exec:file { read open execute execute_no_trans };
allow mdm_helper shell:fd { use };
allow mdm_helper ssr_device:chr_file { open read };
allow mdm_helper sysfs_esoc:dir { open search read };
allow mdm_helper sysfs_esoc:lnk_file { read };
allow mdm_helper sysfs:file { open read write getattr };
allow mdm_helper sysfs_hsic:dir { open read search };
allow mdm_helper sysfs_hsic:file { read write open };
allow mdm_helper sysfs_ssr:dir { open search read };
allow mdm_helper sysfs_ssr:lnk_file { read open };
allow mdm_helper sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow mdm_helper sysfs_wake_lock:file { open append };
allow mdm_helper system_file:file { execute_no_trans };
allow mdm_helper tmpfs:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mdm_helper tmpfs:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mdm_helper tombstone_data_file:dir { create search open read write getattr add_name };
allow mdm_helper tombstone_data_file:file { create read write open getattr };
allow mdnsd init:process sigchld;
allow mdnsd mdnsd_exec:file { entrypoint open read execute getattr };
allow mdnsd mdnsd_tmpfs:file { read write };
allow media_rw_data_file xsdcardfs:filesystem associate;
allow mediaserver adsprpcd_service:service_manager add;
allow mediaserver apk_data_file:file { read getattr };
allow mediaserver apk_data_file:sock_file { open append write };
allow mediaserver app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mediaserver app_data_file:dir search;
allow mediaserver app_data_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } };
allow mediaserver app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow mediaserver app_data_file:sock_file setattr;
allow mediaserver appdomain:binder { call transfer };
allow mediaserver appdomain:binder transfer;
allow mediaserver appdomain:fd use;
allow mediaserver appdomain:fifo_file { getattr read write };
allow mediaserver app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver asec_apk_file:dir search;
allow mediaserver asec_apk_file:file { getattr open read ioctl lock };
allow mediaserver asec_apk_file:file { read getattr };
allow mediaserver ashmem_device:chr_file execute;
allow mediaserver at_distributor:fd use;
allow mediaserver audio_data_file:dir { { open getattr read search ioctl } add_name write };
allow mediaserver audio_data_file:dir remove_name;
allow mediaserver audio_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver audio_data_file:sock_file { create setattr unlink };
allow mediaserver audiod:binder transfer;
allow mediaserver audio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver audio_device:dir { open getattr read search ioctl };
allow mediaserver audio_prop:property_service set;
allow mediaserver bbccontainer_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver bbccontainer_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver binderservicedomain:binder { call transfer };
allow mediaserver binderservicedomain:fd use;
allow mediaserver bluetooth_serial_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver bluetooth_socket:sock_file write;
allow mediaserver bluetooth:unix_stream_socket connectto;
allow mediaserver bluetooth:unix_stream_socket connectto;
allow mediaserver bugreport_exec:file { execute execute_no_trans };
allow mediaserver camera_data_file:dir { open getattr read search ioctl };
allow mediaserver camera_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow mediaserver camera_data_file:sock_file write;
allow mediaserver camera_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver camera_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver camera_device:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver camera_device:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver camera_prop:property_service set;
allow mediaserver camera_socket:sock_file write;
allow mediaserver cnd_socket:sock_file write;
allow mediaserver cnd:unix_stream_socket connectto;
allow mediaserver container_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver container_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver container_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver container_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver container_app:dir { open getattr read search ioctl };
allow mediaserver container_app:file { getattr open read ioctl lock };
allow mediaserver container_app_sdcard_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver container_app_sdcard_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver containerdomain:binder { call transfer };
allow mediaserver containerdomain:fd use;
allow mediaserver devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver downfilters_lib_file:dir { open getattr read search ioctl };
allow mediaserver downfilters_lib_file:file { getattr execute execute_no_trans };
allow mediaserver downfilters_lib_file:file { getattr open read ioctl lock };
allow mediaserver drm_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver drm_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver drm_security_system_file:dir search;
allow mediaserver drmserver:binder transfer;
allow mediaserver drmserver_socket:sock_file { open append write };
allow mediaserver drmserver_socket:sock_file { open append write };
allow mediaserver drmserver_socket:sock_file write;
allow mediaserver drmserver:unix_stream_socket connectto;
allow mediaserver drmserver:unix_stream_socket connectto;
allow mediaserver dts_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mediaserver dts_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver dumplog_data_file:file { open append write };
allow mediaserver dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver dumpstate:binder transfer;
allow mediaserver dumpstate_exec:file { execute execute_no_trans };
allow mediaserver dumpsys:binder transfer;
allow mediaserver dumpsys_exec:file { execute execute_no_trans };
allow mediaserver efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver firmware:dir { open getattr read search ioctl };
allow mediaserver firmware:file { getattr open read ioctl lock };
allow mediaserver fixmo_app:binder { call transfer };
allow mediaserver fixmo_app:binder transfer;
allow mediaserver fixmo_app:fd use;
allow mediaserver fm_radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver gad_untrusted_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mediaserver gad_untrusted_app_data_file:dir search;
allow mediaserver gad_untrusted_app_data_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } };
allow mediaserver gad_untrusted_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow mediaserver gad_untrusted_app_data_file:sock_file setattr;
allow mediaserver good_app:binder { call transfer };
allow mediaserver good_app:binder transfer;
allow mediaserver good_app:fd use;
allow mediaserver gpu_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver graphics_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mediaserver i2c_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver imsd:binder transfer;
allow mediaserver init:process sigchld;
allow mediaserver init:unix_stream_socket connectto;
allow mediaserver init:unix_stream_socket connectto;
allow mediaserver init:unix_stream_socket { getattr read write };
allow mediaserver isolated_app_tmpfs:file { { getattr open read ioctl lock } { open append write } };
allow mediaserver jackservice:binder { call transfer };
allow mediaserver jackservice:binder transfer;
allow mediaserver jackservice:fd use;
allow mediaserver kernel:system module_request;
allow mediaserver kgsl_device:chr_file { { { getattr open read ioctl lock } { open append write } } execute };
allow mediaserver m2m1shot_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver media_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver media_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver media_rw_data_file:dir { open getattr read search ioctl };
allow mediaserver media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver media_rw_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow mediaserver mediaserver_exec:file { entrypoint open read execute getattr };
allow mediaserver mediaserver_service:service_manager add;
allow mediaserver mediaserver_tmpfs:file { read write };
allow mediaserver mediaserver_tmpfs:file write;
allow mediaserver mm-qcamera-daemon:unix_dgram_socket sendto;
allow mediaserver mm-qcamerad:unix_dgram_socket sendto;
allow mediaserver mobicoredaemon:unix_stream_socket connectto;
allow mediaserver mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver mpctl_socket:dir { open getattr read search ioctl };
allow mediaserver mpctl_socket:dir { open getattr read search ioctl };
allow mediaserver mpctl_socket:sock_file write;
allow mediaserver mpctl_socket:sock_file write;
allow mediaserver mpctl_socket:sock_file write;
allow mediaserver mpctl_socket:sock_file write;
allow mediaserver mpdecision:unix_dgram_socket sendto;
allow mediaserver mpdecision:unix_stream_socket connectto;
allow mediaserver mpdecision:unix_stream_socket connectto;
allow mediaserver newAttr33:dir { open getattr read search ioctl };
allow mediaserver newAttr33:file { getattr open read ioctl lock };
allow mediaserver nfc:binder { call transfer };
allow mediaserver nfc:fd use;
allow mediaserver obb_apk_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver obb_apk_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver oemfs:dir search;
allow mediaserver oemfs:file { getattr open read ioctl lock };
allow mediaserver oneseg_mw:binder transfer;
allow mediaserver perfd:unix_dgram_socket sendto;
allow mediaserver perfd:unix_stream_socket connectto;
allow mediaserver personal_page_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mediaserver personal_page_file:file { { getattr open read ioctl lock } { open append write } };
allow mediaserver platform_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver platform_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver platform_app:dir { open getattr read search ioctl };
allow mediaserver platform_app:file { getattr open read ioctl lock };
allow mediaserver proc:file write;
allow mediaserver property_socket:sock_file write;
allow mediaserver property_socket:sock_file write;
allow mediaserver pvrsync_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver qdsp_device:chr_file { getattr open read ioctl lock };
allow mediaserver qmux_audio_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mediaserver qmux_audio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow mediaserver qmuxd_socket:sock_file write;
allow mediaserver qmuxd:unix_stream_socket connectto;
allow mediaserver qmuxd:unix_stream_socket connectto;
allow mediaserver qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver qtaguid_device:chr_file { getattr open read ioctl lock };
allow mediaserver qtaguid_proc:file { { getattr open read ioctl lock } { open append write } };
allow mediaserver radio:binder { call transfer };
allow mediaserver radio_data_file:dir search;
allow mediaserver radio_data_file:file { getattr open read ioctl lock };
allow mediaserver radio_data_file:file { read getattr };
allow mediaserver radio:dir { open getattr read search ioctl };
allow mediaserver radio:fd use;
allow mediaserver radio:file { getattr open read ioctl lock };
allow mediaserver rild:binder { call transfer };
allow mediaserver rild:fd use;
allow mediaserver rild:unix_stream_socket { connectto read write setopt };
allow mediaserver rpmsg_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver s5p_smem_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver samsungpowersoundplay:binder { call transfer };
allow mediaserver samsungpowersoundplay:binder transfer;
allow mediaserver samsungpowersoundplay:fd use;
allow mediaserver samsungpowersoundplay:file { getattr open read ioctl lock };
allow mediaserver sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver sdcard_type:dir { open getattr read search ioctl };
allow mediaserver sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver sdcard_type:{ file lnk_file } { getattr open read ioctl lock };
allow mediaserver sdcard_type:file write;
allow mediaserver sec_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver secmm_prop:property_service set;
allow mediaserver seiren_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver self:capability { net_raw net_admin setuid setgid };
allow mediaserver self:process execmem;
allow mediaserver self:socket *;
allow mediaserver self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow mediaserver servicemanager:binder { call transfer };
allow mediaserver setup_ymc_etc_system_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mediaserver shell_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mediaserver shell_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow mediaserver socket_device:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver s_platform_app:dir { open getattr read search ioctl };
allow mediaserver s_platform_app:file { getattr open read ioctl lock };
allow mediaserver srp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver s_system_app:fifo_file { open append write };
allow mediaserver surfaceflinger:binder transfer;
allow mediaserver sysfs_esoc:dir { open getattr read search ioctl };
allow mediaserver sysfs_esoc:lnk_file read;
allow mediaserver sysfs:file { { getattr open read ioctl lock } { open append write } };
allow mediaserver sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow mediaserver sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow mediaserver system_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mediaserver system_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow mediaserver system_app_data_file:file { { { getattr open read ioctl lock } { open append write } } setattr };
allow mediaserver system_app:fifo_file { open append write };
allow mediaserver system:binder { call transfer };
allow mediaserver system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mediaserver system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver system:dir { open getattr read search ioctl };
allow mediaserver system:fd use;
allow mediaserver system_fifo:dir { open getattr read search ioctl };
allow mediaserver system_file:file { getattr execute execute_no_trans };
allow mediaserver system:file { getattr open read ioctl lock };
allow mediaserver system_library_file:dir { open getattr read search ioctl };
allow mediaserver system_prop:property_service set;
allow mediaserver system_server:fifo_file { getattr open read ioctl lock };
allow mediaserver system:unix_stream_socket { read write setopt };
allow mediaserver tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver tee:unix_stream_socket connectto;
allow mediaserver thermald:unix_stream_socket connectto;
allow mediaserver thermal-engine:unix_stream_socket connectto;
allow mediaserver thermal_socket:sock_file write;
allow mediaserver time_daemon:unix_stream_socket connectto;
allow mediaserver tmpfs:file write;
allow mediaserver uibc_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mediaserver uibc_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mediaserver ump_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver ump_device:sock_file { getattr open read ioctl lock };
allow mediaserver untrusted_app_tmpfs:file write;
allow mediaserver untrusteddomain:dir { open getattr read search ioctl };
allow mediaserver untrusteddomain:file { getattr open read ioctl lock };
allow mediaserver untrusteddomain:process sigchld;
allow mediaserver untrusteddomain:unix_stream_socket { read write getattr connectto };
allow mediaserver video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mediaserver video_device:dir { open getattr read search ioctl };
allow mediaserver video_device:dir search;
allow mediaserver video_device:lnk_file { getattr open read ioctl lock };
allow mediaserver wfdservice:binder transfer;
allow mediaserver zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow mfc mfc_tmpfs:file execute;
allow mfc mfc_tmpfs:file { read write };
allow mfgloader init:process sigchld;
allow mfgloader init:unix_stream_socket connectto;
allow mfgloader kernel:key search;
allow mfgloader mfgloader_exec:file { entrypoint open read execute getattr };
allow mfgloader mfgloader_tmpfs:file { read write };
allow mfgloader property_socket:sock_file write;
allow mfgloader self:capability { net_admin net_raw dac_override sys_module };
allow mfgloader sysfs:file write;
allow mfgloader system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mfgloader system_data_file:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow mfgloader system_prop:property_service set;
allow mfgloader wifi_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mfgloader wifi_efs_file:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mfm mfm_tmpfs:file execute;
allow mfm mfm_tmpfs:file { read write };
allow mfs mfs_tmpfs:file execute;
allow mfs mfs_tmpfs:file { read write };
allow mfw mfw_tmpfs:file execute;
allow mfw mfw_tmpfs:file { read write };
allow mlexe init:process sigchld;
allow mlexe media_rw_data_file:dir { open getattr read search ioctl };
allow mlexe mif_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mlexe mlexe_exec:file { entrypoint open read execute getattr };
allow mlexe mlexe_tmpfs:file { read write };
allow mlexe rild:unix_stream_socket connectto;
allow mlexe sdcard_type:dir { open getattr read search ioctl };
allow mlexe self:capability dac_override;
allow mlexe self:capability setuid;
allow mlexe shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow mlexe sysfs:file { open append write };
allow mlexe sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow mlexe system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mlexe system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mlexe system_file:file { getattr execute execute_no_trans };
allow mlexe system_file:file { getattr open read ioctl lock };
allow mmb_apk mmb_apk_tmpfs:file execute;
allow mmb_apk mmb_apk_tmpfs:file { read write };
allow mmi graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mmi init:process sigchld;
allow mmi init:unix_stream_socket connectto;
allow mmi input_device:chr_file { getattr open read ioctl lock };
allow mmi input_device:dir { getattr open read ioctl lock };
allow mmi misc_partition:blk_file { open append write };
allow mmi mmi_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mmi mmi_data_file:file { { getattr open read ioctl lock } { open append write } };
allow mmi mmi_exec:file { entrypoint open read execute getattr };
allow mmi mmi_tmpfs:file { read write };
allow mmi nfc_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mmi powerctl_prop:property_service set;
allow mmi property_socket:sock_file write;
allow mmi self:capability2 block_suspend;
allow mmi self:capability { sys_nice dac_override };
allow mmi shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow mmi sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow mm-pp-daemon diag_device:chr_file { getattr open read ioctl lock };
allow mm-pp-daemon diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mm-pp-daemon display_misc_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mm-pp-daemon display_misc_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mm-pp-daemon graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mm-pp-daemon graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mm-pp-daemon graphics_device:dir { open getattr read search ioctl };
allow mm-pp-daemon graphics_device:dir search;
allow mm-pp-daemon init:process sigchld;
allow mm-pp-daemon init:unix_stream_socket connectto;
allow mm-pp-daemon init:unix_stream_socket connectto;
allow mm-pp-daemon init:unix_stream_socket connectto;
allow mm-pp-daemon init:unix_stream_socket { listen accept };
allow mm-pp-daemon mm-pp-daemon_exec:file { entrypoint open read execute getattr };
allow mm-pp-daemon mm-pp-daemon_tmpfs:file { read write };
allow mm-pp-daemon persist_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mm-pp-daemon persist_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mm-pp-daemon pps_socket:sock_file write;
allow mm-pp-daemon property_socket:sock_file write;
allow mm-pp-daemon property_socket:sock_file write;
allow mm-pp-daemon sensors_device:chr_file { getattr open read ioctl lock };
allow mm-pp-daemon sensors_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow mm-pp-daemon sensors:unix_stream_socket connectto;
allow mm-pp-daemon servicemanager:binder call;
allow mm-pp-daemon servicemanager:binder { call transfer };
allow mm-pp-daemon surfaceflinger:binder { call transfer };
allow mm-pp-daemon surfaceflinger:fd use;
allow mm-pp-daemon sysfs:file { { getattr open read ioctl lock } { open append write } };
allow mm-pp-daemon sysfs:file write;
allow mm-pp-daemon sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow mm-pp-daemon system_prop:property_service set;
allow mm-pp-daemon system_prop:property_service set;
allow mm-pp-daemon system_server:binder { call transfer };
allow mm-pp-daemon system_server:fd use;
allow mm-pp-daemon system_server:unix_stream_socket { read write };
allow mm-qcamera-daemon adsprpc_device:chr_file { getattr open read ioctl lock };
allow mm-qcamera-daemon camera_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mm-qcamera-daemon camera_device:dir { open getattr read search ioctl };
allow mm-qcamera-daemon genlock_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mm-qcamera-daemon graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mm-qcamera-daemon graphics_device:dir { open getattr read search ioctl };
allow mm-qcamera-daemon input_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mm-qcamera-daemon input_device:dir { open getattr read search ioctl };
allow mm-qcamera-daemon kgsl_device:chr_file { { { getattr open read ioctl lock } { open append write } } execute };
allow mm-qcamera-daemon media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mm-qcamera-daemon media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mm-qcamera-daemon mediaserver:fd use;
allow mm-qcamera-daemon mpdecision:unix_stream_socket connectto;
allow mm-qcamera-daemon sdcard_internal:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mm-qcamera-daemon sdcard_internal:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mm-qcamera-daemon shell_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mm-qcamera-daemon socket_device:sock_file { open append write };
allow mm-qcamera-daemon surfaceflinger:fd use;
allow mm-qcamera-daemon sysfs:file { { getattr open read ioctl lock } { open append write } };
allow mm-qcamera-daemon sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow mm-qcamera-daemon system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mm-qcamera-daemon system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mm-qcamera-daemon system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mm-qcamera-daemon video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mm-qcamerad camera_data_file:dir { write remove_name search add_name };
allow mm-qcamerad camera_data_file:sock_file { create unlink };
allow mm-qcamerad camera_device:dir search;
allow mm-qcamerad camera_socket:dir { open search write add_name remove_name };
allow mm-qcamerad camera_socket:sock_file { create unlink write };
allow mm-qcamerad { gpu_device video_device camera_device sensors_device }:chr_file { { getattr open read ioctl lock } { open append write } };
allow mm-qcamerad init:process sigchld;
allow mm-qcamerad mm-qcamerad_exec:file { entrypoint open read execute getattr };
allow mm-qcamerad mm-qcamerad_tmpfs:file { read write };
allow mm-qcamerad node:tcp_socket node_bind;
allow mm-qcamerad port:tcp_socket name_bind;
allow mm-qcamerad self:process execmem;
allow mm-qcamerad self:tcp_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow mm-qcamerad sensors_socket:sock_file write;
allow mm-qcamerad sensors:unix_stream_socket connectto;
allow mm-qcamerad servicemanager:binder { call transfer };
allow mm-qcamerad shell_data_file:dir search;
allow mm-qcamerad { surfaceflinger mediaserver }:fd use;
allow mm-qcamerad system_data_file:dir { open search write add_name remove_name };
allow mm-qcamerad system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mm-qcamerad system_server:binder { call transfer };
allow mm-qcamerad system_server:fd use;
allow mm-qcamerad system_server:unix_stream_socket { read write };
allow mobexdaemon app_data_file:dir { open getattr read search ioctl };
allow mobexdaemon gad_untrusted_app_data_file:dir { open getattr read search ioctl };
allow mobexdaemon init:process sigchld;
allow mobexdaemon init:unix_stream_socket connectto;
allow mobexdaemon kiesexe:unix_stream_socket connectto;
allow mobexdaemon kies_prop:property_service set;
allow mobexdaemon media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mobexdaemon media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mobexdaemon mobexdaemon_exec:file { entrypoint open read execute getattr };
allow mobexdaemon mobexdaemon_tmpfs:file { read write };
allow mobexdaemon obb_apk_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mobexdaemon port:tcp_socket name_connect;
allow mobexdaemon property_socket:sock_file { open append write };
allow mobexdaemon radio_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mobexdaemon radio_data_file:file { { getattr open read ioctl lock } { open append write } };
allow mobexdaemon sdcard_external:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mobexdaemon sdcard_external:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mobexdaemon sdcard_internal:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mobexdaemon sdcard_internal:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mobexdaemon sdcard_type:file { { getattr open read ioctl lock } { open append write } };
allow mobexdaemon self:tcp_socket { write read create connect };
allow mobexdaemon shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow mobexdaemon s_system_app:unix_stream_socket connectto;
allow mobexdaemon system_app:unix_stream_socket connectto;
allow mobexdaemon system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mobexdaemon system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mobexdaemon system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mobexdaemon system_file:file { getattr execute execute_no_trans };
allow mobicoredaemon apk_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow mobicoredaemon apk_data_file:lnk_file { getattr open read ioctl lock };
allow mobicoredaemon appdomain:fd use;
allow mobicoredaemon daemon_app_process:process { siginh rlimitinh };
allow mobicoredaemon daemon_app_process:process transition;
allow mobicoredaemon efs_file:file { getattr open read ioctl lock };
allow mobicoredaemon firmware:dir { open getattr read search ioctl };
allow mobicoredaemon firmware:file { getattr open read ioctl lock };
allow mobicoredaemon init:process sigchld;
allow mobicoredaemon init_shell:fd use;
allow mobicoredaemon init_shell:process sigchld;
allow mobicoredaemon init:unix_stream_socket connectto;
allow mobicoredaemon mobicoredaemon_exec:file { entrypoint open read execute getattr };
allow mobicoredaemon mobicoredaemon_exec:file { entrypoint open read execute getattr };
allow mobicoredaemon mobicoredaemon_tmpfs:file { read write };
allow mobicoredaemon mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mobicoredaemon mobicore_prop:property_service set;
allow mobicoredaemon property_socket:sock_file write;
allow mobicoredaemon qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow mobicoredaemon rootfs:file entrypoint;
allow mobicoredaemon self:capability dac_override;
allow mobicoredaemon self:netlink_socket { read bind create write };
allow mobicoredaemon zygote_exec:file { getattr open read execute };
allow modem_firmware labeledfs:filesystem associate;
allow mpdecision cpu_dma_latency_device:chr_file { open append write };
allow mpdecision device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mpdecision device_latency:chr_file { open append write };
allow mpdecision device:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mpdecision init:process sigchld;
allow mpdecision kernel:process setsched;
allow mpdecision kernel:process setsched;
allow mpdecision labeledfs:dir { open getattr read search ioctl };
allow mpdecision mediaserver:dir { open getattr read search ioctl };
allow mpdecision mediaserver:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mpdecision mediaserver:file { { getattr open read ioctl lock } { open append write } };
allow mpdecision mpctl_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mpdecision mpctl_data_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } unlink };
allow mpdecision mpctl_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mpdecision mpctl_socket:sock_file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } unlink };
allow mpdecision mpdecision_exec:file { entrypoint open read execute getattr };
allow mpdecision mpdecision_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mpdecision mpdecision_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mpdecision mpdecision_tmpfs:file { read write };
allow mpdecision self:capability { net_admin chown dac_override fsetid sys_nice };
allow mpdecision self:capability { net_admin chown fsetid dac_override };
allow mpdecision self:netlink_kobject_uevent_socket { create read setopt bind };
allow mpdecision self:netlink_kobject_uevent_socket { read bind create setopt };
allow mpdecision self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow mpdecision socket_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mpdecision socket_device:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mpdecision s_system_app:dir { open getattr read search ioctl };
allow mpdecision sysfs_cpu_online:file { { getattr open read ioctl lock } { open append write } };
allow mpdecision sysfs_devices_system_cpu:file { { getattr open read ioctl lock } { open append write } };
allow mpdecision sysfs:file { { getattr open read ioctl lock } { open append write } };
allow mpdecision sysfs:file write;
allow mpdecision sysfs_mpdecision:file { getattr open read ioctl lock };
allow mpdecision sysfs_mpdecision:file { { getattr open read ioctl lock } { open append write } };
allow mpdecision sysfs_rqstats:dir search;
allow mpdecision sysfs_rqstats:dir search;
allow mpdecision sysfs_rqstats:file { open append write };
allow mpdecision sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow mpdecision sysfs_thermal:dir search;
allow mpdecision sysfs_thermal:dir search;
allow mpdecision system_app:dir { open getattr read search ioctl };
allow mpdecision system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mpdecision system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow mpdecision system:dir { open getattr read search ioctl };
allow mpdecision system:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow mpdecision system:file { getattr open read ioctl lock };
allow mpdecision system:file { { getattr open read ioctl lock } { open append write } };
allow mpdecision system_server:dir search;
allow mpdecision system_server:file { open read };
allow mpdecision thermald:unix_stream_socket connectto;
allow msm_irqbalanced cgroup:dir { create add_name };
allow msm_irqbalanced init:process sigchld;
allow msm_irqbalanced msm_irqbalanced_exec:file { entrypoint open read execute getattr };
allow msm_irqbalanced msm_irqbalanced_tmpfs:file { read write };
allow msm_irqbalanced proc:file write;
allow msm_irqbalanced self:capability { setuid setgid dac_override };
allow msm_irqbalanced sysfs_devices_system_cpu:file write;
allow msm_irqbalanced sysfs_rqstats:dir { open getattr read search ioctl };
allow msm_irqbalanced sysfs_rqstats:{ file lnk_file } { getattr open read ioctl lock };
allow mtp init:process sigchld;
allow mtp kernel:system module_request;
allow mtp mtp_exec:file { entrypoint open read execute getattr };
allow mtp mtp_tmpfs:file { read write };
allow mtp port:tcp_socket name_connect;
allow mtp ppp_exec:file { getattr open read execute };
allow mtp ppp:process { siginh rlimitinh };
allow mtp ppp:process signal;
allow mtp ppp:process transition;
allow mtp self:capability net_raw;
allow mtp self:rawip_socket create;
allow mtp self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow mtp self:tcp_socket { create setopt connect write read };
allow mtp vpn_data_file:dir search;
allow netd app_data_file:file read;
allow netd cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow netd clatd_exec:file { getattr open read execute };
allow netd clatd:process { siginh rlimitinh };
allow netd clatd:process signal;
allow netd clatd:process transition;
allow netd cnd_socket:sock_file write;
allow netd cnd:unix_stream_socket connectto;
allow netd ctl_mdnsd_prop:property_service set;
allow netd devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow netd dhcp_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow netd dhcp_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netd dhcp_exec:file { getattr open read execute };
allow netd dhcp_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow netd dhcp:process { siginh rlimitinh };
allow netd dhcp:process signal;
allow netd dhcp:process transition;
allow netd dhcp_prop:property_service set;
allow netd dhcp_system_file:dir { open getattr read search ioctl };
allow netd dhcp_system_file:file { getattr open read ioctl lock };
allow netd dnsmasq_exec:file { getattr open read execute };
allow netd dnsmasq:process { siginh rlimitinh };
allow netd dnsmasq:process { sigkill };
allow netd dnsmasq:process signal;
allow netd dnsmasq:process transition;
allow netd dnsproxyd_socket:sock_file { open append write };
allow netd dumplog_data_file:dir { open getattr read search ioctl };
allow netd dumplog_data_file:file { getattr open read ioctl lock };
allow netd gad_untrusted_app_data_file:file read;
allow netd good_app:tcp_socket { read write setopt getopt };
allow netd good_app:udp_socket { read write setopt getopt };
allow netd hostapd_exec:file { getattr open read execute };
allow netd hostapd:process { siginh rlimitinh };
allow netd hostapd:process signal;
allow netd hostapd:process transition;
allow netd hostapd:unix_dgram_socket sendto;
allow netd init:process sigchld;
allow netd init:tcp_socket { read write setopt getopt };
allow netd init:unix_stream_socket connectto;
allow netd init:unix_stream_socket connectto;
allow netd isolated_app_tmpfs:file { open append write };
allow netd kernel:system module_request;
allow netd kernel:system module_request;
allow netd kernel:system syslog_read;
allow netd kmsg_device:chr_file { getattr open read ioctl lock };
allow netd media_rw_data_file:dir { open getattr read search ioctl };
allow netd media_rw_data_file:file { getattr open read ioctl lock };
allow netd net_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow netd net_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netd netd:capability { setgid setuid };
allow netd netd_exec:file { entrypoint open read execute getattr };
allow netd netdomain:fd use;
allow netd netdomain:{ tcp_socket udp_socket rawip_socket dccp_socket tun_socket } { read write getattr setattr getopt setopt };
allow netd netd:packet_socket { create bind setopt read ioctl };
allow netd netd_socket:sock_file { open append write };
allow netd netd_tmpfs:file { read write };
allow netd newAttr19 : { { chr_file blk_file } { file lnk_file sock_file fifo_file } } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netd newAttr19:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow netd node:{ tcp_socket udp_socket } node_bind;
allow netdomain cnd_socket:sock_file write;
allow netdomain cnd:unix_stream_socket connectto;
allow netdomain dnsproxyd_socket:sock_file write;
allow netdomain dpmd:unix_stream_socket connectto;
allow netdomain dpmwrapper_socket:sock_file write;
allow netdomain fwmarkd_socket:sock_file write;
allow netdomain mdnsd_socket:sock_file write;
allow netdomain mdnsd:unix_stream_socket connectto;
allow netdomain netd:unix_stream_socket connectto;
allow netdomain netd:unix_stream_socket connectto;
allow netdomain node_type:{ tcp_socket udp_socket } node_bind;
allow netdomain port_type:tcp_socket name_bind;
allow netdomain port_type:tcp_socket name_connect;
allow netdomain port_type:udp_socket name_bind;
allow netdomain self:netlink_route_socket { { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } } nlmsg_read };
allow netdomain self:tcp_socket { create { { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } listen accept } };
allow netdomain self:{ udp_socket rawip_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow netd port:tcp_socket { name_bind name_connect };
allow netd port:{ tcp_socket udp_socket } name_bind;
allow netd proc_net:file write;
allow netd property_socket:sock_file write;
allow netd property_socket:sock_file write;
allow netd random_device:chr_file { getattr open read ioctl lock };
allow netd sdcard_type:dir { open getattr read search ioctl };
allow netd sdcard_type:file { getattr open read ioctl lock };
allow netd self:capability { dac_override chown fowner };
allow netd self:capability kill;
allow netd self:capability { net_admin net_raw kill };
allow netd self:capability { setuid fsetid setgid net_bind_service sys_module net_admin net_raw };
allow netd self:netlink_kobject_uevent_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow netd self:netlink_nflog_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow netd self:netlink_route_socket *;
allow netd self:netlink_route_socket nlmsg_write;
allow netd self:{ packet_socket tcp_socket netlink_socket } *;
allow netd self:rawip_socket *;
allow netd self:{ tcp_socket udp_socket } *;
allow netd self:tun_socket create;
allow netd self:unix_stream_socket *;
allow netd shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow netd sysfs:file write;
allow netd sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow netd sysrq_proc:file write;
allow netd system_data_file:file { getattr open read ioctl lock };
allow netd system_file:file { getattr execute execute_no_trans };
allow netd system_library_file:dir { open getattr read search ioctl };
allow netd system_prop:property_service set;
allow netd tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow netd tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow netd wfd_app:fd use;
allow netd wfd_app:tcp_socket { read write setopt getopt };
allow netd wfdservice:fd use;
allow netd wfdservice:tcp_socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow netd wifi_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow netd wifi_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow netd wifi_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netd wifi_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netd wpa_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow netd wpa_socket:dir { { getattr open read ioctl lock } { open append write } };
allow netd wpa_socket:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netd wpa_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netmgrd app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow netmgrd app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netmgrd cnd_socket:sock_file write;
allow netmgrd cnd:unix_stream_socket connectto;
allow netmgrd data_test_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow netmgrd data_test_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netmgrd diag_device:chr_file { { { getattr open read ioctl lock } { open append write } } };
allow netmgrd gad_untrusted_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow netmgrd gad_untrusted_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netmgrd init:process sigchld;
allow netmgrd init:unix_stream_socket { connectto };
allow netmgrd init:unix_stream_socket connectto;
allow netmgrd kernel:system { module_request };
allow netmgrd kernel:system module_request;
allow netmgrd net_data_file:dir { open getattr read search ioctl };
allow netmgrd net_data_file:file { getattr open read ioctl lock };
allow netmgrd netd_socket:sock_file write;
allow netmgrd netmgrd:capability { dac_override net_raw net_admin sys_module fsetid setgid setuid setpcap };
allow netmgrd netmgrd_exec:file { entrypoint open read execute getattr };
allow netmgrd netmgrd:netlink_route_socket { setopt getattr write nlmsg_write };
allow netmgrd netmgrd:netlink_socket { write read create bind };
allow netmgrd netmgrd:netlink_xfrm_socket { { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } } nlmsg_write nlmsg_read };
allow netmgrd netmgrd:rawip_socket { create getopt setopt write };
allow netmgrd netmgrd:socket { create ioctl };
allow netmgrd netmgrd_tmpfs:file { read write };
allow netmgrd net_radio_prop:property_service { set };
allow netmgrd proc:dir { open search write add_name remove_name };
allow netmgrd proc:file { open append write };
allow netmgrd proc_net:dir { open search write add_name remove_name };
allow netmgrd proc_net:file { open append write };
allow netmgrd proc_net:file { write };
allow netmgrd property_socket:sock_file { open append write };
allow netmgrd property_socket:sock_file write;
allow netmgrd property_socket:sock_file write;
allow netmgrd qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow netmgrd qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow netmgrd qmuxd_socket:sock_file write;
allow netmgrd qmuxd:unix_stream_socket connectto;
allow netmgrd qmuxd:unix_stream_socket connectto;
allow netmgrd qmux_radio_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow netmgrd qmux_radio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netmgrd radio_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow netmgrd radio_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netmgrd radio_prop:property_service set;
allow netmgrd radio_prop:property_service set;
allow netmgrd self:capability { sys_module setuid fsetid setgid net_raw net_admin dac_override chown setpcap };
allow netmgrd self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow netmgrd self:{ udp_socket packet_socket netlink_socket netlink_route_socket rawip_socket } *;
allow netmgrd shell_exec:file { execute { getattr open read ioctl lock } execute_no_trans };
allow netmgrd shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow netmgrd smem_log_device:chr_file { { { getattr open read ioctl lock } { open append write } } };
allow netmgrd sysfs_esoc:dir { open getattr read search ioctl };
allow netmgrd sysfs_esoc:lnk_file read;
allow netmgrd sysfs:file write;
allow netmgrd sysfs_ssr:dir { open getattr read search ioctl };
allow netmgrd sysfs_ssr:{ file lnk_file } { getattr open read ioctl lock };
allow netmgrd system_data_file:dir { { open getattr read search ioctl } add_name write };
allow netmgrd system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow netmgrd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow netmgrd system_file:file { execute_no_trans };
allow netmgrd system_file:file { getattr execute execute_no_trans };
allow netmgrd system_prop:property_service { set };
allow netmgrd system_prop:property_service set;
allow netmgrd { wcnss_service_exec wpa_exec }:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow netmgrd wpa_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow newAttr10 carrier_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr10 carrier_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr10 carrier_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr10 carrier_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr11 knox_system_app:binder { call transfer };
allow newAttr11 knox_system_app:binder transfer;
allow newAttr11 knox_system_app:fd use;
allow newAttr13 shell_data_file:file { getattr execute execute_no_trans };
allow newAttr13 ump_device:sock_file { getattr open read ioctl lock };
allow newAttr14 system:tcp_socket { getattr read write };
allow newAttr14 video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow newAttr15 sec_efs_file:dir { open getattr read search ioctl };
allow newAttr15 sec_efs_file:file { getattr open read ioctl lock };
allow newAttr1 app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr1 app_data_file:file execute;
allow newAttr1 app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr1 app_public_data_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr1 app_public_data_type:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr1 asec_apk_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr1 asec_apk_file:file { execmod { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } { getattr execute execute_no_trans } };
allow newAttr1 asec_public_file:file { execute execmod };
allow newAttr1 bbccontainer_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr1 bbccontainer_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr1 binderservicedomain:binder { call transfer };
allow newAttr1 binderservicedomain:fd use;
allow newAttr1 carrier_file:dir { open getattr read search ioctl };
allow newAttr1 carrier_file:file { getattr open read ioctl lock };
allow newAttr1 container_app_data_backend:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr1 container_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr1 drmserver:binder { call transfer };
allow newAttr1 drmserver:fd use;
allow newAttr1 efs_file:dir { open getattr search ioctl };
allow newAttr1 efs_file:file { getattr open ioctl lock };
allow newAttr1 fuse:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr1 fuse:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr1 gad_untrusted_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr1 gad_untrusted_app_data_file:file execute;
allow newAttr1 gad_untrusted_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr1 imei_efs_file:dir { open getattr read search ioctl };
allow newAttr1 imei_efs_file:file { getattr open read ioctl lock };
allow newAttr1 isolated_app:dir { open getattr read search ioctl };
allow newAttr1 isolated_app:{ file lnk_file } { getattr open read ioctl lock };
allow newAttr1 media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr1 media_rw_data_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } execute };
allow newAttr1 newAttr1:binder { call transfer };
allow newAttr1 newAttr1:binder transfer;
allow newAttr1 newAttr1:fd use;
allow newAttr1 newAttr1:fifo_file { { getattr open read ioctl lock } { open append write } };
allow newAttr1 newAttr1:unix_stream_socket { getopt getattr read write shutdown };
allow newAttr1 newAttr54:{ dir { { chr_file blk_file } { file lnk_file sock_file fifo_file } } } getattr;
allow newAttr1 newAttr75:{ dir { { chr_file blk_file } { file lnk_file sock_file fifo_file } } } getattr;
allow newAttr1 newAttr75:dir { open getattr read search ioctl };
allow newAttr1 obb_apk_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr1 obb_apk_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr1 personal_page_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr1 personal_page_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr1 radio_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow newAttr1 radio_data_file:file { { getattr open read ioctl lock } { open append write } };
allow newAttr1 rild:unix_stream_socket connectto;
allow newAttr1 sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr1 sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr1 servicemanager:binder { call transfer };
allow newAttr1 shell_data_file:dir { { open getattr read search ioctl } rmdir write add_name remove_name };
allow newAttr1 shell_data_file:file { { getattr open read ioctl lock } write };
allow newAttr1 shell_data_file:file { write getattr };
allow newAttr1 shell_data_file:lnk_file { { getattr open read ioctl lock } write };
allow newAttr1 shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow newAttr1 sprintitson_file:file execute;
allow newAttr1 untrusteddomain:process ptrace;
allow newAttr1 vfat:dir { open getattr read search ioctl };
allow newAttr1 vfat:file { getattr open read ioctl lock };
allow newAttr2 newAttr54:dir { open getattr read search ioctl };
allow newAttr32 tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow newAttr33 appdomain:fifo_file { { getattr open read ioctl lock } { open append write } };
allow newAttr40 shell_data_file:file write;
allow newAttr42 self:process *;
allow newAttr49 devpts:chr_file { read write };
allow newAttr50 diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow newAttr6 newAttr4:binder { call transfer };
allow newAttr6 newAttr4:binder transfer;
allow newAttr6 newAttr4:fd use;
allow newAttr7 newAttr33:dir { open getattr read search ioctl };
allow newAttr7 newAttr33:{ file lnk_file } { getattr open read ioctl lock };
allow newAttr86 newAttr18 : { { chr_file blk_file } { file lnk_file sock_file fifo_file } } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr86 newAttr18:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr86 newAttr30:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr87 newAttr82 : { { chr_file blk_file } { file lnk_file sock_file fifo_file } } { { getattr open read ioctl lock } { open append write } };
allow newAttr87 newAttr82 : dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow newAttr8 m2m1shot_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow newAttr91 newAttr16:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr91 newAttr16:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow newAttr92 newAttr89 : dir { open search write add_name remove_name };
allow newAttr92 newAttr89 : { file lnk_file sock_file fifo_file } { open append write };
allow newAttr93 newAttr46:binder { call transfer };
allow newAttr93 { untrusteddomain shell }:binder { call transfer };
allow newAttr94 newAttr71:dir { open getattr read search ioctl };
allow newAttr94 newAttr71:{ file lnk_file sock_file fifo_file } { getattr open read ioctl lock };
allow newAttr96 graphics_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow newAttr97 newAttr33:fd use;
allow newAttr97 newAttr37:binder { call transfer };
allow newAttr98 newAttr35:binder { call transfer };
allow newAttr98 { zygote_socket zygote_tmpfs }:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow newAttr98 { zygote_socket zygote_tmpfs }:file { { getattr open read ioctl lock } { open append write } };
allow newAttr9 adbd:process sigchld;
allow newAttr9 app_data_file:sock_file { create unlink };
allow newAttr9 devpts:chr_file { getattr read write ioctl };
allow newAttr9 gad_untrusted_app_data_file:sock_file { create unlink };
allow newAttr9 shell:process sigchld;
allow newAttr9 system_data_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow newAttr9 zygote_exec:file { getattr open read ioctl lock };
allow nfc apk_data_file:lnk_file read;
allow nfc app_efs_file:file { getattr open read ioctl lock };
allow nfc at_distributor:binder transfer;
allow nfc bugreport_exec:file { execute execute_no_trans };
allow nfc cache_file:file { open append write };
allow nfc dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow nfc dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow nfc dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow nfc dumpstate:binder transfer;
allow nfc dumpstate_exec:file { execute execute_no_trans };
allow nfc dumpsys:binder transfer;
allow nfc dumpsys_exec:file { execute execute_no_trans };
allow nfc fixmo_app:binder { call transfer };
allow nfc fixmo_app:binder transfer;
allow nfc fixmo_app:fd use;
allow nfc good_app:binder { call transfer };
allow nfc good_app:binder transfer;
allow nfc good_app:fd use;
allow nfc init_tmpfs:file read;
allow nfc init:unix_stream_socket connectto;
allow nfc init:unix_stream_socket connectto;
allow nfc init:unix_stream_socket { read write };
allow nfc init:unix_stream_socket setopt;
allow nfc mediaserver:binder transfer;
allow nfc nfc_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow nfc nfc_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow nfc nfc_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow nfc nfc_prop:property_service set;
allow nfc nfc_service:service_manager add;
allow nfc nfc_tmpfs:file execute;
allow nfc nfc_tmpfs:file { read write };
allow nfc platform_app_data_file:file { open append write };
allow nfc property_socket:sock_file { open append write };
allow nfc property_socket:sock_file write;
allow nfc radio_device:chr_file { { getattr open ioctl lock } { open append } };
allow nfc sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow nfc sdcard_type:file { getattr link unlink rename };
allow nfc sdcard_type:file { open append write };
allow nfc sec_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow nfc sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow nfc sem_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow nfc servicemanager:binder { call transfer };
allow nfc servicemanager:binder { call transfer };
allow nfc servicemanager:fd use;
allow nfc s_system_app:fifo_file { open append write };
allow nfc surfaceflinger:binder transfer;
allow nfc sysfs:file write;
allow nfc sysfs_nfc_power_writable:file { { getattr open read ioctl lock } { open append write } };
allow nfc sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow nfc system_app:fifo_file { open append write };
allow nfc system_data_file:dir { open getattr read search ioctl };
allow nfc system_data_file:file { getattr open read ioctl lock };
allow nfc uart_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow nfc zygote:binder { call transfer };
allow nfc zygote:fd use;
allow nqs init:process sigchld;
allow nqs nqs_exec:file { entrypoint open read execute getattr };
allow nqs nqs_tmpfs:file { read write };
allow olsrd init:process sigchld;
allow olsrd node:tcp_socket node_bind;
allow olsrd node:udp_socket node_bind;
allow olsrd olsrd_exec:file { entrypoint open read execute getattr };
allow olsrd olsrd_tmpfs:file { read write };
allow olsrd port:tcp_socket name_bind;
allow olsrd port:udp_socket name_bind;
allow olsrd proc_net:file write;
allow olsrd self:capability { net_admin net_raw net_bind_service };
allow olsrd self:netlink_socket { create bind read };
allow olsrd shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow olsrd system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow olsrd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow olsrd system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow oneseg_apk oneseg_apk_tmpfs:file execute;
allow oneseg_apk oneseg_apk_tmpfs:file { read write };
allow oneseg_apk oneseg_mw:binder transfer;
allow oneseg_mw app_data_file:file { open append write };
allow oneseg_mw audio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow oneseg_mw audio_device:dir { open getattr read search ioctl };
allow oneseg_mw audio_device:lnk_file { getattr open read ioctl lock };
allow oneseg_mw block_device:dir search;
allow oneseg_mw device:sock_file write;
allow oneseg_mw dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow oneseg_mw dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow oneseg_mw dvb_device:chr_file { getattr open read ioctl lock };
allow oneseg_mw efs_file:dir search;
allow oneseg_mw emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow oneseg_mw emmcblk_device:dir search;
allow oneseg_mw gad_untrusted_app_data_file:file { open append write };
allow oneseg_mw imei_efs_file:dir { open getattr read search ioctl };
allow oneseg_mw imei_efs_file:file { getattr open read ioctl lock };
allow oneseg_mw init:process sigchld;
allow oneseg_mw init:unix_stream_socket { read write };
allow oneseg_mw kgsl_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow oneseg_mw media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow oneseg_mw media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow oneseg_mw media_rw_data_file:file { getattr link unlink rename };
allow oneseg_mw mediaserver:binder { call transfer };
allow oneseg_mw mediaserver:fd use;
allow oneseg_mw mmb_device:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow oneseg_mw mpdecision:unix_stream_socket connectto;
allow oneseg_mw node:udp_socket { node_bind };
allow oneseg_mw oneseg_apk:binder { call transfer };
allow oneseg_mw oneseg_apk:dir { getattr open read ioctl lock };
allow oneseg_mw oneseg_apk:fd use;
allow oneseg_mw oneseg_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow oneseg_mw oneseg_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow oneseg_mw oneseg_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow oneseg_mw oneseg_mw:binder { call transfer };
allow oneseg_mw oneseg_mw:binder transfer;
allow oneseg_mw oneseg_mw_exec:file { entrypoint open read execute getattr };
allow oneseg_mw oneseg_mw_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow oneseg_mw oneseg_mw:fd use;
allow oneseg_mw oneseg_mw_service:service_manager add;
allow oneseg_mw oneseg_mw_tmpfs:file { read write };
allow oneseg_mw platform_app:binder call;
allow oneseg_mw platform_app_data_file:file { open append write };
allow oneseg_mw port:tcp_socket name_connect;
allow oneseg_mw port:udp_socket { name_bind };
allow oneseg_mw radio_data_file:dir search;
allow oneseg_mw radio_data_file:file { getattr open read ioctl lock };
allow oneseg_mw random_device:chr_file { getattr open read ioctl lock };
allow oneseg_mw rild:unix_stream_socket connectto;
allow oneseg_mw sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow oneseg_mw sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow oneseg_mw self:capability { dac_override net_raw net_admin };
allow oneseg_mw self:tcp_socket { write read create setopt connect };
allow oneseg_mw self:udp_socket { create setopt bind write read shutdown name_bind node_bind };
allow oneseg_mw servicemanager:binder { call transfer };
allow oneseg_mw shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow oneseg_mw socket_device:sock_file { open append write };
allow oneseg_mw s_platform_app:binder call;
allow oneseg_mw s_system_app:binder { call transfer };
allow oneseg_mw s_system_app:fd use;
allow oneseg_mw s_system_app:fd use;
allow oneseg_mw surfaceflinger:binder { call transfer };
allow oneseg_mw surfaceflinger:fd use;
allow oneseg_mw sysfs:file { open append write };
allow oneseg_mw system_app:binder { call transfer };
allow oneseg_mw system_app:fd use;
allow oneseg_mw system_app:fd use;
allow oneseg_mw system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow oneseg_mw system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow oneseg_mw system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow oneseg_mw system_file:file { getattr execute execute_no_trans };
allow oneseg_mw system_server:binder { call transfer };
allow oneseg_mw system_server:fd use;
allow oneseg_mw untrusteddomain:fd use;
allow oneseg_mw video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow oneseg_mw video_device:dir { open getattr read search ioctl };
allow oneseg_mw video_device:lnk_file { getattr open read ioctl lock };
allow otp_server app_efs_file:file { read open };
allow otp_server efs_file:dir search;
allow otp_server efs_type:dir { open getattr read search ioctl };
allow otp_server efs_type:{ file lnk_file } { getattr open read ioctl lock };
allow otp_server firmware_file:dir { open getattr read search ioctl };
allow otp_server firmware_file:file { getattr open read ioctl lock };
allow otp_server init:process sigchld;
allow otp_server mobicoredaemon:unix_stream_socket connectto;
allow otp_server mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow otp_server mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow otp_server otp_server_exec:file { entrypoint open read execute getattr };
allow otp_server otp_server_exec:file { entrypoint open read execute getattr };
allow otp_server otp_server_service:service_manager add;
allow otp_server otp_server_service:service_manager add;
allow otp_server otp_server_tmpfs:file { read write };
allow otp_server platform_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow otp_server platform_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow otp_server qseecom_device:chr_file { read write ioctl open };
allow otp_server radio_data_file:dir search;
allow otp_server radio_data_file:file { read open };
allow otp_server servicemanager:binder { call transfer };
allow otp_server shell_exec:file { read execute open execute_no_trans };
allow otp_server system_file:file execute_no_trans;
allow otp_server system_server:fifo_file { read write getattr ioctl };
allow otp_server system_server:process sigchld;
allow otp_server wifi_efs_file:file { read open };
allow p2p_supplicant device:file { getattr open read ioctl lock };
allow p2p_supplicant init:process sigchld;
allow p2p_supplicant kernel:system module_request;
allow p2p_supplicant kernel:system module_request;
allow p2p_supplicant p2p_supplicant_exec:file { entrypoint open read execute getattr };
allow p2p_supplicant p2p_supplicant_tmpfs:file { read write };
allow p2p_supplicant random_device:chr_file { read open };
allow p2p_supplicant self:capability { setuid net_admin setgid net_raw };
allow p2p_supplicant self:capability { setuid net_admin setgid net_raw };
allow p2p_supplicant self:netlink_route_socket *;
allow p2p_supplicant self:netlink_route_socket { write bind create read nlmsg_write };
allow p2p_supplicant self:netlink_socket *;
allow p2p_supplicant self:netlink_socket { write getattr setopt read bind create };
allow p2p_supplicant self:packet_socket *;
allow p2p_supplicant self:packet_socket *;
allow p2p_supplicant self:packet_socket { bind create ioctl read write };
allow p2p_supplicant self:udp_socket *;
allow p2p_supplicant self:udp_socket { create ioctl };
allow p2p_supplicant system_data_file:dir { add_name remove_name };
allow p2p_supplicant system:unix_dgram_socket sendto;
allow p2p_supplicant system:unix_dgram_socket sendto;
allow p2p_supplicant system_wpa_socket:sock_file write;
allow p2p_supplicant system_wpa_socket:sock_file write;
allow p2p_supplicant wifi_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow p2p_supplicant wifi_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow p2p_supplicant wifi_data_file:dir { open getattr read search ioctl };
allow p2p_supplicant wifi_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow p2p_supplicant wifi_data_file:dir { write remove_name add_name };
allow p2p_supplicant wifi_data_file:file { { getattr open read ioctl lock } { open append write } };
allow p2p_supplicant wifi_data_file:file { read write getattr open };
allow p2p_supplicant wifi_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow p2p_supplicant wifi_data_file:sock_file { write create unlink setattr };
allow perfd cpuctl_device:file { { getattr open read ioctl lock } { open append write } };
allow perfd domain:dir search;
allow perfd domain:file { open read };
allow perfd init:process sigchld;
allow perfd mediaserver:dir { open getattr read search ioctl };
allow perfd mediaserver:file { getattr open read ioctl lock };
allow perfd mpctl_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow perfd mpctl_data_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } unlink };
allow perfd mpctl_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow perfd mpctl_socket:sock_file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } unlink };
allow perfd msm_irqbalanced:unix_stream_socket connectto;
allow perfd msm_irqbalance_socket:sock_file write;
allow perfd perfd_exec:file { entrypoint open read execute getattr };
allow perfd perfd_tmpfs:file { read write };
allow perfd proc:file write;
allow perfd self:capability { net_admin chown dac_override fsetid };
allow perfd self:netlink_kobject_uevent_socket { create read setopt bind };
allow perfd self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow perfd sysfs_cpu_online:file { { getattr open read ioctl lock } { open append write } };
allow perfd sysfs_devices_system_cpu:file { { getattr open read ioctl lock } { open append write } };
allow perfd sysfs:file write;
allow perfd sysfs_thermal:dir search;
allow perfd sysfs_thermal:file { open write };
allow perfd system_server:dir search;
allow perfd system_server:file { open read };
allow perfd thermal-engine:unix_stream_socket connectto;
allow perfd thermal_socket:sock_file write;
allow per_mgr dumplog_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow per_mgr dumplog_data_file:file { { getattr open read ioctl lock } { open append write } };
allow per_mgr init:process sigchld;
allow per_mgr per_mgr:binder { call transfer };
allow per_mgr per_mgr:binder transfer;
allow per_mgr per_mgr_exec:file { entrypoint open read execute getattr };
allow per_mgr per_mgr:fd use;
allow per_mgr per_mgr_service:service_manager add;
allow per_mgr per_mgr_tmpfs:file { read write };
allow per_mgr rild:binder { call transfer };
allow per_mgr rild:binder transfer;
allow per_mgr rild:fd use;
allow per_mgr self:binder { transfer call };
allow per_mgr self:capability { net_raw };
allow per_mgr self:socket { create ioctl bind read write };
allow per_mgr servicemanager:binder { call transfer };
allow per_mgr ssr_device:chr_file { open read };
allow per_mgr sysfs_esoc:dir { open search read };
allow per_mgr sysfs_esoc:lnk_file { read };
allow per_mgr sysfs_ssr:dir { open search read };
allow per_mgr sysfs_ssr:lnk_file { read open };
allow per_mgr system_server:binder { call transfer };
allow per_mgr system_server:binder { call transfer };
allow per_mgr system_server:binder transfer;
allow per_mgr system_server:fd use;
allow per_mgr system_server:fd use;
allow personal_page_file xsdcardfs:filesystem associate;
allow platform_app apaservice:binder transfer;
allow platform_app apk_private_data_file:dir search;
allow platform_app { apk_tmp_file apk_private_tmp_file }:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow platform_app { apk_tmp_file apk_private_tmp_file }:file { { getattr open read ioctl lock } { open append write } };
allow platform_app app_data_file:file execmod;
allow platform_app asec_apk_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow platform_app asec_apk_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow platform_app at_distributor:unix_stream_socket connectto;
allow platform_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow platform_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow platform_app container_app:dir search;
allow platform_app cpk_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow platform_app cpk_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow platform_app dcm_data_file:dir { open getattr read search ioctl };
allow platform_app dcm_data_file:file { getattr open read ioctl lock };
allow platformappdomain dumpstate_socket:sock_file { open append write };
allow platformappdomain init_tmpfs:file read;
allow platformappdomain init:unix_stream_socket setopt;
allow platformappdomain mobicoredaemon:unix_stream_socket connectto;
allow platformappdomain mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow platformappdomain mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow platformappdomain platform_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow platformappdomain platform_app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow platformappdomain platform_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow platformappdomain sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow platformappdomain sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow platformappdomain sec_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow platformappdomain sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow platformappdomain sysfs_battery_supply:file { { getattr open read ioctl lock } { open append write } };
allow platformappdomain sysfs_graphics:file { { getattr open read ioctl lock } { open append write } };
allow platformappdomain sysfs_mdnie_writable:file { { getattr open read ioctl lock } { open append write } };
allow platformappdomain sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow platformappdomain system_app_data_file:file write;
allow platformappdomain tima_dump_exec:file { getattr execute execute_no_trans };
allow platformappdomain uhid_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow platformappdomain unlabeled:dir search;
allow platformappdomain url_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow platform_app downfilters_lib_file:dir { open getattr read search ioctl };
allow platform_app downfilters_lib_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow platform_app dtseagleservice:binder { call transfer };
allow platform_app dtseagleservice:binder transfer;
allow platform_app dtseagleservice:fd use;
allow platform_app ese_service:service_manager add;
allow platform_app fidodaemon:binder { call transfer };
allow platform_app fidodaemon:binder transfer;
allow platform_app fidodaemon:fd use;
allow platform_app fixmo_app:binder { call transfer };
allow platform_app fixmo_app:binder transfer;
allow platform_app fixmo_app:fd use;
allow platform_app gad_untrusted_app_data_file:file execmod;
allow platform_app good_app:binder { call transfer };
allow platform_app good_app:binder transfer;
allow platform_app good_app:fd use;
allow platform_app irm_platform_app_tmpfs:file write;
allow platform_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow platform_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow platform_app mediaserver:unix_stream_socket connectto;
allow platform_app mst_ctrl_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow platform_app ovr_device:chr_file { getattr open read ioctl lock };
allow platform_app pfw_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow platform_app pfw_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow platform_app platform_app_service:service_manager add;
allow platform_app platform_app_tmpfs:file execute;
allow platform_app platform_app_tmpfs:file { read write };
allow platform_app platform_app_tmpfs:file write;
allow platform_app prov_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow platform_app prov_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow platform_app shell_data_file:dir search;
allow platform_app shell_data_file:file { open getattr read };
allow platform_app sprintitson_file:file execute;
allow platform_app ss_conn_daemon_socket:sock_file write;
allow platform_app ss_conn_daemon:unix_stream_socket connectto;
allow platform_app ss_kbservice_daemon_socket:sock_file write;
allow platform_app ss_kbservice_daemon:unix_stream_socket connectto;
allow platform_app uibc_socket:sock_file write;
allow platform_app wfdservice:binder { call transfer };
allow platform_app wfdservice:binder transfer;
allow platform_app wfdservice:fd use;
allow platform_app writingbuddymanager_service:service_manager add;
allow playready drm_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow playready drm_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow playready efs_file:dir { open getattr read search ioctl };
allow playready efs_file:file { open append write };
allow playready firmware:dir { open getattr read search ioctl };
allow playready firmware:file { getattr open read ioctl lock };
allow playready init:process sigchld;
allow playready playready_exec:file { entrypoint open read execute getattr };
allow playready playready_tmpfs:file { read write };
allow playready qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow playready self:capability { dac_override chown };
allow playready shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow playready system_file:file { getattr execute execute_no_trans };
allow playready tmpfs:chr_file { { getattr open read ioctl lock } { open append write } };
allow policyloader_app app_data_file:dir { open getattr read search ioctl };
allow policyloader_app app_data_file:file { getattr open read ioctl lock };
allow policyloader_app dalvikcache_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow policyloader_app dalvikcache_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow policyloader_app gad_untrusted_app_data_file:dir { open getattr read search ioctl };
allow policyloader_app gad_untrusted_app_data_file:file { getattr open read ioctl lock };
allow policyloader_app policyloader_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow policyloader_app policyloader_app_data_file:file { getattr execute execute_no_trans };
allow policyloader_app policyloader_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow policyloader_app policyloader_app_tmpfs:file execute;
allow policyloader_app policyloader_app_tmpfs:file { read write };
allow policyloader_app secure_storage_device:sock_file write;
allow policyloader_app secure_storage:unix_stream_socket connectto;
allow policyloader_app security_file:dir { open getattr read search ioctl };
allow policyloader_app security_file:file { getattr open read ioctl lock };
allow policyloader_app security_spota_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow policyloader_app security_spota_file:dir { open getattr read search ioctl };
allow policyloader_app security_spota_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow policyloader_app security_spota_file:file { getattr open read ioctl lock };
allow policyloader_app security_spota_file:lnk_file { create rename unlink };
allow policyloader_app shell_data_file:dir { open getattr read search ioctl };
allow policyloader_app shell_data_file:file { getattr open read ioctl lock };
allow policyloader_app trusteddomain:fd use;
allow port-bridge gadget_serial_device:chr_file { { { getattr open read ioctl lock } { open append write } } };
allow port-bridge init:process sigchld;
allow port-bridge mhi_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow port-bridge port-bridge:capability { dac_override };
allow port-bridge port-bridge_exec:file { entrypoint open read execute getattr };
allow port-bridge port-bridge:netlink_kobject_uevent_socket { create bind read };
allow port-bridge port-bridge_tmpfs:file { read write };
allow ppp ashmem_device:chr_file execute;
allow ppp csc_prop:property_service set;
allow ppp dalvikcache_data_file:file setattr;
allow ppp devpts:chr_file { ioctl open setattr };
allow ppp dnsproxyd_socket:sock_file write;
allow ppp init:unix_stream_socket connectto;
allow ppp mtp:fd use;
allow ppp mtp:process sigchld;
allow ppp mtp:socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow ppp mtp:unix_dgram_socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow ppp netd:unix_stream_socket connectto;
allow ppp net_radio_prop:property_service set;
allow pppoewrapper ashmem_device:chr_file execute;
allow pppoewrapper ashmem_device:chr_file execute;
allow pppoewrapper csc_prop:property_service set;
allow pppoewrapper dalvikcache_data_file:file setattr;
allow pppoewrapper devpts:chr_file { ioctl open setattr };
allow pppoewrapper dnsproxyd_socket:sock_file write;
allow pppoewrapper init:process sigchld;
allow pppoewrapper init:unix_stream_socket connectto;
allow pppoewrapper mtp:fd use;
allow pppoewrapper mtp:socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow pppoewrapper mtp:unix_dgram_socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow pppoewrapper netd:unix_stream_socket connectto;
allow pppoewrapper net_radio_prop:property_service set;
allow pppoewrapper ppp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow pppoewrapper pppoewrapper_exec:file { entrypoint open read execute getattr };
allow pppoewrapper pppoewrapper_tmpfs:file { read write };
allow pppoewrapper ppp_system_file:dir { open getattr read search ioctl };
allow pppoewrapper ppp_system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow pppoewrapper property_socket:sock_file write;
allow pppoewrapper self:capability net_admin;
allow pppoewrapper self:capability { setuid net_raw fsetid kill setgid fowner dac_override };
allow pppoewrapper self:process execmem;
allow pppoewrapper self:udp_socket { create ioctl };
allow pppoewrapper setupwizard_prop:property_service set;
allow pppoewrapper system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow pppoewrapper system_prop:property_service set;
allow pppoewrapper vpn_data_file:dir { open search write add_name remove_name };
allow pppoewrapper vpn_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow pppoewrapper zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ppp ppp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ppp ppp_exec:file { entrypoint open read execute getattr };
allow ppp ppp_system_file:dir { open getattr read search ioctl };
allow ppp ppp_system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ppp property_socket:sock_file write;
allow ppp self:capability net_admin;
allow ppp self:capability { setuid net_raw fsetid kill setgid fowner dac_override };
allow ppp self:udp_socket { create ioctl };
allow ppp setupwizard_prop:property_service set;
allow ppp system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow ppp vpn_data_file:dir { open search write add_name remove_name };
allow ppp vpn_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow prepare_param block_device:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow prepare_param block_device:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow prepare_param dw_mmc_device:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { getattr open read ioctl lock };
allow prepare_param emmcblk_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow prepare_param emmcblk_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow prepare_param emmcblk_device:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow prepare_param init:process sigchld;
allow prepare_param padblk_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow prepare_param paramblk_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow prepare_param paramblk_device:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow prepare_param prepare_param_sh_file:file { entrypoint { getattr open read ioctl lock } };
allow prepare_param prepare_param_sh_file:file { entrypoint open read execute getattr };
allow prepare_param self:capability { fowner chown fsetid dac_override };
allow prepare_param shell_exec:file { getattr open read ioctl lock };
allow prepare_param system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow pts_device devpts:filesystem associate;
allow ptt_socket_app diag_device:chr_file { getattr open read ioctl lock };
allow ptt_socket_app init:process sigchld;
allow ptt_socket_app persist_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow ptt_socket_app persist_data_file:file { { getattr open read ioctl lock } { open append write } };
allow ptt_socket_app ptt_socket_app_exec:file { entrypoint open read execute getattr };
allow ptt_socket_app ptt_socket_app_tmpfs:file { read write };
allow ptt_socket_app rootfs:lnk_file { getattr open read ioctl lock };
allow ptt_socket_app self:capability { setgid setuid net_admin net_raw dac_override dac_read_search };
allow ptt_socket_app system_file:dir { open getattr read search ioctl };
allow ptt_socket_app system_file:file { getattr open read ioctl lock };
allow qcks block_device:dir { open getattr read search ioctl };
allow qcks block_device:lnk_file { getattr open read ioctl lock };
allow qcks dw_mmc_device:dir { { open getattr read search ioctl } add_name write };
allow qcks dw_mmc_device:lnk_file { getattr open read ioctl lock };
allow qcks efsks_exec:file { getattr open read execute };
allow qcks efsks_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow qcks efsks:process { siginh rlimitinh };
allow qcks efsks:process signal;
allow qcks efsks:process transition;
allow qcks emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow qcks firmware:dir { open getattr read search ioctl };
allow qcks firmware:file { getattr open read ioctl lock };
allow qcks init:process sigchld;
allow qcks init:unix_stream_socket connectto;
allow qcks ks_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow qcks m9kefsblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow qcks modem_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow qcks modem_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow qcks modem_device:lnk_file { { getattr open read ioctl lock } { open append write } };
allow qcks modemstblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow qcks property_socket:sock_file { open append write };
allow qcks property_socket:sock_file write;
allow qcks qcks_exec:file { entrypoint open read execute getattr };
allow qcks qcks_tmpfs:file { read write };
allow qcks radio_device:chr_file { getattr open read ioctl lock };
allow qcks radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qcks rild_prop:property_service set;
allow qcks sdcard_external:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow qcks sdcard_external:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qcks sdcard_type:dir { open getattr read search ioctl };
allow qcks sdcard_type:file { getattr open read ioctl lock };
allow qcks self:capability { fsetid dac_override setuid };
allow qcks shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow qcks sysfs:file { open append write };
allow qcks sysfs_wake_lock:file { { getattr open read ioctl lock } append };
allow qcks system_data_file:dir { open search write add_name remove_name };
allow qcks system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qcks system_file:file { getattr execute execute_no_trans };
allow qcks tombstone_data_file:dir add_name;
allow qcks tombstone_data_file:dir { open getattr read search ioctl };
allow qcks tombstones_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow qcks tombstones_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qcks usb_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qcks usbfs:dir { open getattr read search ioctl };
allow qcomsysd block_device:dir { search };
allow qcomsysd bootselect_device:blk_file { open read getattr write };
allow qcomsysd diag_device:chr_file { open read write ioctl };
allow qcomsysd init:process sigchld;
allow qcomsysd misc_partition:blk_file { open read getattr write };
allow qcomsysd qcomsysd_exec:file { entrypoint open read execute getattr };
allow qcomsysd qcomsysd_tmpfs:file { read write };
allow qcomsysd self:capability { dac_override };
allow qcomsysd smem_log_device:chr_file { open read write ioctl };
allow qcomsysd sysfs_socinfo:dir { open search read };
allow qcomsysd sysfs_socinfo:file { open read write };
allow qcom-system-daemon diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qcom-system-daemon self:capability dac_override;
allow qlogd device:dir { open getattr read search ioctl };
allow qlogd diag_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow qlogd fuse:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow qlogd fuse:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qlogd init:process sigchld;
allow qlogd kernel:system syslog_mod;
allow qlogd logdr_socket:sock_file write;
allow qlogd logd:unix_stream_socket connectto;
allow qlogd qlogd_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow qlogd qlogd_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qlogd qlogd_exec:file { entrypoint open read execute getattr };
allow qlogd qlogd_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qlogd qlogd_tmpfs:file { read write };
allow qlogd ramdump_device:chr_file { setattr { { getattr open read ioctl lock } { open append write } } };
allow qlogd self:capability2 { block_suspend syslog };
allow qlogd self:capability { setuid setgid dac_override dac_read_search sys_admin net_raw net_admin fowner fsetid kill sys_module };
allow qlogd self:packet_socket { create ioctl bind getopt setopt };
allow qlogd shell_exec:file { execute read open execute_no_trans };
allow qlogd smem_log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qlogd socket_device:sock_file { create setattr };
allow qlogd sysfs_wake_lock:file { { getattr open read ioctl lock } append };
allow qlogd system_data_file:dir { write add_name };
allow qlogd system_data_file:file { open read write create };
allow qlogd system_file:file execute_no_trans;
allow qmiproxy diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qmiproxy init:process sigchld;
allow qmiproxy init:unix_stream_socket connectto;
allow qmiproxy property_socket:sock_file { open append write };
allow qmiproxy qmiproxy_exec:file { entrypoint open read execute getattr };
allow qmiproxy qmiproxy_tmpfs:file { read write };
allow qmiproxy qmux_radio_socket:dir { open search write add_name remove_name };
allow qmiproxy qmux_radio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qmiproxy radio_prop:property_service set;
allow qmuxd bugreport_exec:file { execute execute_no_trans };
allow qmuxd cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow qmuxd diag_device:chr_file { { { getattr open read ioctl lock } { open append write } } };
allow qmuxd dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow qmuxd dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qmuxd dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qmuxd dumpstate_exec:file { execute execute_no_trans };
allow qmuxd dumpsys_exec:file { execute execute_no_trans };
allow qmuxd hsic_device:chr_file { { { getattr open read ioctl lock } { open append write } } };
allow qmuxd hsic_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qmuxd init:process sigchld;
allow qmuxd init:unix_stream_socket connectto;
allow qmuxd mhi_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qmuxd property_socket:sock_file write;
allow qmuxd qmux_audio_socket:dir { open search write add_name remove_name };
allow qmuxd qmux_audio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qmuxd qmux_bluetooth_socket:dir { open search write add_name remove_name };
allow qmuxd qmux_bluetooth_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qmuxd qmuxd:capability2 { block_suspend };
allow qmuxd qmuxd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qmuxd qmuxd_exec:file { entrypoint open read execute getattr };
allow qmuxd qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow qmuxd qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow qmuxd qmuxd_socket:sock_file write;
allow qmuxd qmuxd_tmpfs:file { read write };
allow qmuxd qmuxd:unix_stream_socket connectto;
allow qmuxd qmux_gps_socket:dir { open search write add_name remove_name };
allow qmuxd qmux_gps_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qmuxd qmux_radio_socket:dir { open search write add_name remove_name };
allow qmuxd qmux_radio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qmuxd radio_prop:property_service set;
allow qmuxd rild_prop:property_service set;
allow qmuxd self:capability2 block_suspend;
allow qmuxd self:capability setpcap;
allow qmuxd self:capability { setuid dac_override setpcap };
allow qmuxd self:capability { setuid setgid setpcap dac_override };
allow qmuxd shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow qmuxd smd_cntl_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qmuxd smd_device:chr_file { { { getattr open read ioctl lock } { open append write } } };
allow qmuxd sysfs_esoc:dir { open getattr read search ioctl };
allow qmuxd sysfs_esoc:lnk_file read;
allow qmuxd sysfs:file { open append write };
allow qmuxd sysfs:file { open append write };
allow qmuxd sysfs_hsic_modem_wait:file { open append write };
allow qmuxd sysfs_hsic_modem_wait:file { open append write };
allow qmuxd sysfs_smd_open_timeout:file { open append write };
allow qmuxd sysfs_ssr:dir { open getattr read search ioctl };
allow qmuxd sysfs_ssr:{ file lnk_file } { getattr open read ioctl lock };
allow qmuxd sysfs_wake_lock:file { append open };
allow qmuxd sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow qmuxd system_file:file { getattr execute execute_no_trans };
allow qmuxd tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qosmgr init:process sigchld;
allow qosmgr qosmgr_exec:file { entrypoint open read execute getattr };
allow qosmgr qosmgr_tmpfs:file { read write };
allow qosmgr sysfs:file write;
allow qrngd hw_random_device:chr_file { getattr open read ioctl lock };
allow qrngd init:process sigchld;
allow qrngd qrngd_exec:file { entrypoint open read execute getattr };
allow qrngd qrngd_tmpfs:file { read write };
allow qrngd random_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qrngd self:capability { setuid setgid sys_admin };
allow qseecomd apk_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow qseecomd apk_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qseecomd block_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow qseecomd device:dir { open getattr read search ioctl };
allow qseecomd drm_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow qseecomd drm_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qseecomd efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow qseecomd efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qseecomd efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qseecomd emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow qseecomd init:unix_stream_socket connectto;
allow qseecomd mmcblk0rpmb_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow qseecomd property_socket:sock_file { open append write };
allow qseecomd qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qseecomd qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qseecomd self:capability { chown setuid setgid sys_rawio dac_override sys_admin };
allow qseecomd sg_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qseecomd shell_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow qseecomd shell_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qseecomd ssdblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow qseecomd system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow qseecomd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow qseecomd system_prop:property_service set;
allow qti init:process sigchld;
allow qti kernel:system module_request;
allow qti mhi_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qti qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow qti qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow qti qmuxd_socket:sock_file write;
allow qti qmuxd:unix_stream_socket connectto;
allow qti qti_exec:file { entrypoint open read execute getattr };
allow qti qti_tmpfs:file { read write };
allow qti rmnet_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qti rmnet_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qti self:capability { net_admin net_raw fsetid sys_module dac_override };
allow qti self:netlink_socket { write bind create read };
allow qti self:socket { write read create ioctl };
allow qti self:udp_socket { create ioctl };
allow qti shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow qti smd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qti smem_log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow qti system_file:file execute_no_trans;
allow quipc_igsn system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow quipc_igsn system_data_file:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow quipc_main gps_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow quipc_main gps_data_file:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow quipc_main system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow quipc_main system_data_file:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow quipc_main system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow racoon cgroup:dir { add_name create };
allow racoon dnsproxyd_socket:sock_file write;
allow racoon init:process sigchld;
allow racoon kernel:system module_request;
allow racoon keystore:binder { call transfer };
allow racoon keystore:fd use;
allow racoon keystore:keystore_key { get sign verify };
allow racoon keystore:unix_stream_socket connectto;
allow racoon netd:unix_stream_socket connectto;
allow racoon node:udp_socket node_bind;
allow racoon port:udp_socket name_bind;
allow racoon ppp_system_file:dir search;
allow racoon ppp_system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow racoon racoon_exec:file { entrypoint open read execute getattr };
allow racoon racoon_tmpfs:file { read write };
allow racoon self:capability { net_admin net_bind_service net_raw setuid };
allow racoon self:key_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow racoon self:tun_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow racoon self:udp_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow racoon servicemanager:binder { call transfer };
allow racoon servicemanager:binder { call transfer };
allow racoon servicemanager:fd use;
allow racoon system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow racoon tun_device:chr_file { getattr open read ioctl lock };
allow racoon vpn_data_file:dir { open search write add_name remove_name };
allow racoon vpn_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow radio alarm_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow radio apaservice:binder { call transfer };
allow radio apaservice:fd use;
allow radio app_data_file:dir { open getattr read search ioctl };
allow radio app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow radio app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow radio app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow radio app_efs_file:file { getattr open read ioctl lock };
allow radio app_library_file:dir { open getattr read search ioctl };
allow radio at_distributor:binder transfer;
allow radio at_distributor:unix_stream_socket connectto;
allow radio bbccontainer_app_data_backend:dir search;
allow radio bintvoutservice:binder { call transfer };
allow radio bintvoutservice:fd use;
allow radio bluetooth_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow radio bluetooth_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow radio bugreport_exec:file { execute execute_no_trans };
allow radio carrier_file:dir { open getattr read search ioctl };
allow radio carrier_file:file { getattr open read ioctl lock };
allow radio carrier_file:file { getattr open read ioctl lock };
allow radio carrier_file:file { getattr open read ioctl lock };
allow radio container_app_data_backend:dir search;
allow radio container_app_data_file:dir search;
allow radio cpk_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow radio cpk_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow radio ctl_rildaemon_prop:property_service set;
allow radio device:sock_file write;
allow radio devpts:chr_file { read write };
allow radio diagandroid_app:unix_stream_socket connectto;
allow radio dpmd_socket:sock_file write;
allow radio dpmd:unix_stream_socket connectto;
allow radio drm_data_file:dir { reparent rmdir { getattr open read ioctl lock } add_name remove_name getattr };
allow radio drm_data_file:file { getattr open read ioctl lock };
allow radio dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow radio dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow radio dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow radio dumpstate:binder transfer;
allow radio dumpstate_exec:file { execute execute_no_trans };
allow radio dumpstate_socket:sock_file write;
allow radio dumpsys:binder transfer;
allow radio dumpsys_exec:file { execute execute_no_trans };
allow radio efs_file:dir { create reparent rmdir setattr open getattr search ioctl add_name remove_name link unlink rename } ;
allow radio efs_file:file { create setattr getattr open ioctl lock link unlink rename };
allow radio fixmo_app:binder { call transfer };
allow radio fixmo_app:binder transfer;
allow radio fixmo_app:fd use;
allow radio gad_untrusted_app_data_file:dir { open getattr read search ioctl };
allow radio gad_untrusted_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow radio genlock_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow radio good_app:binder { call transfer };
allow radio good_app:binder transfer;
allow radio good_app:fd use;
allow radio graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow radio healthd:binder { call transfer };
allow radio healthd:fd use;
allow radio imei_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow radio imei_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow radio ims_service:service_manager add;
allow radio ims_socket:sock_file write;
allow radio ims:unix_stream_socket connectto;
allow radio init_shell:unix_stream_socket connectto;
allow radio init_tmpfs:file read;
allow radio init:unix_stream_socket connectto;
allow radio init:unix_stream_socket { read write setopt };
allow radio insthk_exec:file { getattr execute execute_no_trans };
allow radio jackservice:binder { call transfer };
allow radio jackservice:fd use;
allow radio kgsl_device:chr_file { { { getattr open read ioctl lock } { open append write } } execute };
allow radio log_device:chr_file { getattr open read ioctl lock };
allow radio mediaserver:binder transfer;
allow radio mif_device:chr_file { { { getattr open read ioctl lock } { open append write } } { getattr execute execute_no_trans } };
allow radio mobicoredaemon:unix_stream_socket connectto;
allow radio mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow radio mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow radio net_data_file:dir search;
allow radio net_data_file:file { getattr open read ioctl lock };
allow radio net_radio_prop:property_service set;
allow radio platform_app_data_file:file { open append write };
allow radio property_socket:sock_file write;
allow radio qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow radio qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow radio qmuxd_socket:sock_file write;
allow radio qmuxd:unix_stream_socket connectto;
allow radio qmux_radio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow radio radio_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow radio radio_data_file:file execute;
allow radio radio_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow radio radio_prop:property_service set;
allow radio radio_prop:property_service set;
allow radio radio_service:service_manager add;
allow radio radio_tmpfs:file execute;
allow radio radio_tmpfs:file { read write };
allow radio rild_prop:property_service set;
allow radio rild_socket:sock_file { open append write };
allow radio rild_socket:sock_file write;
allow radio rild:unix_stream_socket connectto;
allow radio sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow radio sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow radio sec_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow radio sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow radio self:rawip_socket { create read };
allow radio sensorhubservice:binder { call transfer };
allow radio sensorhubservice:fd use;
allow radio servicemanager:binder { call transfer };
allow radio servicemanager:binder { call transfer };
allow radio servicemanager:fd use;
allow radio shell_data_file:dir { open getattr read search ioctl };
allow radio shell_data_file:dir search;
allow radio shell_data_file:file { getattr open read ioctl lock };
allow radio shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow radio smd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow radio sprintitson_file:dir { open getattr read search ioctl };
allow radio sprintitson_file:dir { open getattr read search ioctl };
allow radio sprintitson_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow radio sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow radio s_system_app:fifo_file { open append write };
allow radio surfaceflinger:binder transfer;
allow radio sysfs_battery_supply:file { { getattr open read ioctl lock } { open append write } };
allow radio sysfs:file { open append };
allow radio sysfs_sec:file { { getattr open read ioctl lock } { open append write } };
allow radio sysfs_sensor_writable:file { { getattr open read ioctl lock } { open append write } };
allow radio sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow radio system_app_data_file:file setattr;
allow radio system_app:fifo_file { open append write };
allow radio system_data_file:dir { open getattr read search ioctl };
allow radio system_data_file:file { getattr open read ioctl lock };
allow radio system_file:file execute_no_trans;
allow radio system_file:lnk_file getattr;
allow radio system_prop:property_service set;
allow radio system_radio_prop:property_service set;
allow radio system:tcp_socket { read write };
allow radio system:tcp_socket { read write };
allow radio system:unix_stream_socket { setopt connectto };
allow radio telecom_service:service_manager add;
allow radio tmpfs:file { getattr open read ioctl lock };
allow radio tz_socket:sock_file write;
allow radio ump_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow radio untrusteddomain:process sigchld;
allow radio usb_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow radio wifi_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow radio wifi_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow radio zygote:binder { call transfer };
allow radio zygote:binder transfer;
allow radio zygote:fd use;
allow rfs_access firmware_file:dir { open getattr read search ioctl };
allow rfs_access firmware_file:file { getattr open read ioctl lock };
allow rfs_access init:process sigchld;
allow rfs_access rfs_access_exec:file { entrypoint open read execute getattr };
allow rfs_access rfs_access_tmpfs:file { read write };
allow rfs_access rfs_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rfs_access rfs_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rfs_access rfs_shared_hlos_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rfs_access rfs_shared_hlos_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rfs_access rfs_system_file:dir { open getattr read search ioctl };
allow rfs_access rfs_system_file:file { getattr open read ioctl lock };
allow rfs_access rfs_system_file:lnk_file { getattr open read ioctl lock };
allow rfs_access self:capability2 block_suspend;
allow rfs_access self:capability { setuid net_raw setgid setpcap };
allow rfs_access self:capability { setuid setgid setpcap net_raw };
allow rfs_access self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow rfs_access smem_log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rfs_access sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow rfs_access system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rfs_access tombstone_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rfs_access tombstone_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rfs_access uio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild alarm_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild anr_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow rild anr_data_file:file { { getattr open read ioctl lock } { open append write } };
allow rild app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild app_efs_file:file { getattr open read ioctl lock };
allow rild ashmem_device:chr_file execute;
allow rild at_distributor:dir { open getattr read search ioctl };
allow rild at_distributor:dir { open getattr read search ioctl };
allow rild at_distributor:file { getattr open read ioctl lock };
allow rild at_distributor:file { getattr open read ioctl lock };
allow rild bin_nv_data_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild block_device:dir { open getattr read search ioctl };
allow rild bluetooth:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild bluetooth_efs_file:dir { open getattr read search ioctl };
allow rild bluetooth_efs_file:file { getattr open read ioctl lock };
allow rild bluetooth:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild bugreport_exec:file { execute execute_no_trans };
allow rild cellgeofenced:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild cellgeofenced:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild commonplatformappdomain:dir { open getattr read search ioctl };
allow rild commonplatformappdomain:dir { open getattr read search ioctl };
allow rild commonplatformappdomain:file { getattr open read ioctl lock };
allow rild commonplatformappdomain:file { getattr open read ioctl lock };
allow rild ctl_dumpstate_prop:property_service set;
allow rild ctl_rildaemon_prop:property_service set;
allow rild daemon_app_process:process { siginh rlimitinh };
allow rild daemon_app_process:process transition;
allow rild device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow rild device:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild dumpstate_exec:file { execute execute_no_trans };
allow rild dumpstate_exec:file { getattr execute execute_no_trans };
allow rild dumpstate_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild dumpsys_exec:file { execute execute_no_trans };
allow rild efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild efs_gsm_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild efs_gsm_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild emmcblk_device:blk_file { getattr open read ioctl lock };
allow rild emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow rild esoc_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild gad_untrusted_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild gad_untrusted_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild gpsd:dir { open getattr read search ioctl };
allow rild gps_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild gpsd:file { getattr open read ioctl lock };
allow rild imei_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild imei_efs_file:dir { open getattr read search ioctl };
allow rild imei_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild imei_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow rild imei_efs_file:file { open append write };
allow rild init:dir { open getattr read search ioctl };
allow rild init:file { getattr open read ioctl lock };
allow rild init:process sigchld;
allow rild init:tun_socket relabelfrom;
allow rild init:unix_stream_socket connectto;
allow rild kernel:system module_request;
allow rild knox_kap_device:chr_file { getattr open read ioctl lock };
allow rild mbin_device:lnk_file { getattr open read ioctl lock };
allow rild media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild media_rw_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow rild media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild mediaserver:binder transfer;
allow rild mediaserver:binder { transfer call };
allow rild mediaserver:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild mediaserver:dir { open getattr read search ioctl };
allow rild mediaserver:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild mediaserver:file { getattr open read ioctl lock };
allow rild mif_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild mif_device:lnk_file { open append write };
allow rild mlexe:dir { open getattr read search ioctl };
allow rild mlexe:file { getattr open read ioctl lock };
allow rild mtd_device:dir search;
allow rild netmgrd:dir { open getattr read search ioctl };
allow rild netmgrd:{ file lnk_file } { getattr open read ioctl lock };
allow rild net_radio_prop:property_service set;
allow rild newAttr58:dir { open getattr read search ioctl };
allow rild newAttr58:{ file lnk_file } { getattr open read ioctl lock };
allow rild nv_core_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild per_mgr:binder { call transfer };
allow rild per_mgr:binder transfer;
allow rild per_mgr:fd use;
allow rild platform_app:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild platform_app:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild proc:file { open append write };
allow rild proc:file { open append write };
allow rild proc_net:file { open append write };
allow rild property_socket:sock_file write;
allow rild qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow rild qmuxd_socket:sock_file write;
allow rild qmuxd:unix_stream_socket connectto;
allow rild qmuxd:unix_stream_socket connectto;
allow rild qmux_radio_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow rild qmux_radio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild radioblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow rild radio_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild radio_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow rild radio_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild radio_device:blk_file { getattr open read ioctl lock };
allow rild radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild radio:dir { open getattr read search ioctl };
allow rild radio:file { getattr open read ioctl lock };
allow rild radio_prop:property_service set;
allow rild recoveryblk_device:blk_file { getattr open read ioctl lock };
allow rild rild_exec:file { entrypoint open read execute getattr };
allow rild rild_prop:property_service set;
allow rild rild_socket:chr_file { open read write };
allow rild rild_tmpfs:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild rild_tmpfs:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild rild_tmpfs:file { read write };
allow rild samsung_app:dir { open getattr read search ioctl };
allow rild samsung_app:file { getattr open read ioctl lock };
allow rild sdcard_internal:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild sdcard_internal:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild sdcard_type:dir { open getattr read search ioctl };
allow rild sec_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild self:capability2 block_suspend;
allow rild self:capability { chown dac_override };
allow rild self:capability { chown dac_override dac_read_search };
allow rild self:capability dac_override;
allow rild self:capability { setuid net_admin net_raw };
allow rild self:netlink_kobject_uevent_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow rild self:netlink_kobject_uevent_socket read;
allow rild self:netlink_route_socket nlmsg_write;
allow rild self:netlink_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow rild self:{ netlink_socket packet_socket netlink_route_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow rild self:packet_socket { read create ioctl };
allow rild self:packet_socket { read create ioctl };
allow rild self:process execmem;
allow rild self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow rild servicemanager:binder { call transfer };
allow rild servicemanager:binder { call transfer };
allow rild setupwizard_prop:property_service set;
allow rild shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow rild smd_cxm_qmi_device:chr_file { open append write };
allow rild smdexe:dir { open getattr read search ioctl };
allow rild smdexe:file { getattr open read ioctl lock };
allow rild socket_device:dir write;
allow rild s_platform_app:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild s_platform_app:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild ssr_device:chr_file { open read };
allow rild s_system_app:dir search;
allow rild s_system_app:file { getattr open read ioctl lock };
allow rild s_system_app:file { getattr open read ioctl lock };
allow rild sysfs_esoc:dir { search read open };
allow rild sysfs_esoc:file { write };
allow rild sysfs_esoc:lnk_file { read };
allow rild sysfs:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild sysfs_sec:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow rild sysfs_sec:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow rild sysfs_ssr:dir { open getattr read search ioctl };
allow rild sysfs_ssr:dir { open search read };
allow rild sysfs_ssr:lnk_file read;
allow rild sysfs_ssr:lnk_file { read open };
allow rild sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow rild sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow rild system_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow rild system_app_data_file:file { { { getattr open read ioctl lock } { open append write } } setattr };
allow rild system_app:dir search;
allow rild system_app:file { getattr open read ioctl lock };
allow rild system_app:file { getattr open read ioctl lock };
allow rild system:binder { call transfer };
allow rild system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rild system_data_file:dir { open getattr read search ioctl };
allow rild system_data_file:dir { open search write add_name remove_name };
allow rild system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rild system_data_file:file { getattr open read ioctl lock };
allow rild system:fd use;
allow rild system_file:dir { open getattr read search ioctl };
allow rild system_file:file { getattr execute execute_no_trans };
allow rild system_health_monitor_device:chr_file { getattr open read ioctl lock };
allow rild system_prop:property_service set;
allow rild system_radio_prop:property_service set;
allow rild system_server:binder transfer;
allow rild time_daemon:unix_stream_socket connectto;
allow rild tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild uart_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rild usb_device:chr_file { open append write };
allow rild vpnclientd:tun_socket relabelfrom;
allow rild wpa:dir { open getattr read search ioctl };
allow rild wpa:file { getattr open read ioctl lock };
allow rild zygote_exec:file { getattr open read execute };
allow rild zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow rmt_storage block_device:dir { open getattr read search ioctl };
allow rmt_storage block_device:dir { open getattr read search ioctl };
allow rmt_storage block_device:lnk_file { getattr open read ioctl lock };
allow rmt_storage cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rmt_storage cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow rmt_storage ctl_default_prop:property_service set;
allow rmt_storage efsblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage emmcblk_device:lnk_file { getattr open read ioctl lock };
allow rmt_storage fscblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage fsg_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage fsg_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage fsg_device:lnk_file { getattr open read ioctl lock };
allow rmt_storage init:process sigchld;
allow rmt_storage init:unix_stream_socket connectto;
allow rmt_storage init:unix_stream_socket connectto;
allow rmt_storage log_device:chr_file ioctl;
allow rmt_storage log_device:chr_file read;
allow rmt_storage mmcblk0_device:blk_file { getattr open read ioctl lock };
allow rmt_storage mmc_block_device:blk_file { getattr open read ioctl lock };type seempd, domain;
allow rmt_storage modem_device:lnk_file { getattr open read ioctl lock };
allow rmt_storage modem_efs_partition_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage modemstblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage paramblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage property_socket:sock_file write;
allow rmt_storage property_socket:sock_file write;
allow rmt_storage rmt_storage_exec:file { entrypoint open read execute getattr };
allow rmt_storage rmt_storage_tmpfs:file { read write };
allow rmt_storage self:capability2 block_suspend;
allow rmt_storage self:capability2 block_suspend;
allow rmt_storage self:capability { net_raw setuid setgid dac_override sys_admin setpcap };
allow rmt_storage self:capability { setuid setgid sys_admin dac_override net_raw setpcap };
allow rmt_storage self:socket { bind create ioctl setopt };
allow rmt_storage self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow rmt_storage self:socket { read write };
allow rmt_storage smem_log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage smem_log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage ssdblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage ssdblk_device:lnk_file { getattr open read ioctl lock };
allow rmt_storage sysfs:file { open append write };
allow rmt_storage sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow rmt_storage system_file:file { getattr execute execute_no_trans };
allow rmt_storage uio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow rootfs sysfs:filesystem associate;
allow rtcc block_device:dir { open getattr read search ioctl };
allow rtcc device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow rtcc init:process sigchld;
allow rtcc proc:file write;
allow rtcc ram_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow rtcc rtcc_exec:file { entrypoint open read execute getattr };
allow rtcc rtcc_tmpfs:file { read write };
allow rtcc self:capability { chown sys_admin dac_override };
allow rtcc shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow rtcc sysfs:dir setattr;
allow rtcc sysfs:file { setattr write };
allow rtcc system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow rtc_log appdomain:fd use;
allow rtc_log dumplog_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow rtc_log dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow rtc_log init:process sigchld;
allow rtc_log { isolated_app_tmpfs untrusted_app_tmpfs }:file write;
allow rtc_log rtc_log_sh_file:file { entrypoint open read execute getattr };
allow rtc_log shell_exec:file { read entrypoint };
allow rtc_log system_file:file execute_no_trans;
allow runas adbd:process sigchld;
allow runas app_data_file:dir { getattr search };
allow runas devpts:chr_file { read write ioctl };
allow runas gad_untrusted_app_data_file:dir { getattr search };
allow runas kernel:security check_context;
allow runas runas_exec:file { entrypoint open read execute getattr };
allow runas security_file:dir { open getattr read search ioctl };
allow runas security_file:file { getattr open read ioctl lock };
allow runas security_spota_file:dir { open getattr read search ioctl };
allow runas security_spota_file:file { getattr open read ioctl lock };
allow runas self:capability dac_read_search;
allow runas self:capability { setuid setgid };
allow runas self:process setcurrent;
allow runas selinuxfs:file { { getattr open read ioctl lock } { open append write } };
allow runas shell_data_file:file { read write };
allow runas shell:fd use;
allow runas shell:fifo_file { read write };
allow runas shell:process sigchld;
allow runas system_data_file:file { getattr open read ioctl lock };
allow samsung_app app_data_file:file { getattr execute execute_no_trans };
allow samsung_app appdomain:fifo_file { getattr open read ioctl lock };
allow samsung_app app_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow samsung_app app_library_file:dir { open getattr read search ioctl };
allow samsung_app audit_log:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow samsung_app bluetooth:unix_stream_socket connectto;
allow samsung_app bluetooth:unix_stream_socket { read write };
allow samsung_app bluetooth:unix_stream_socket shutdown;
allow samsung_app bugreport_exec:file { execute execute_no_trans };
allow samsung_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow samsung_app devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow samsung_app dnsproxyd_socket:sock_file { open append write };
allow samsung_app drm_efs_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow samsung_app drm_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow samsung_app dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow samsung_app dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow samsung_app dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow samsung_app dumpstate_exec:file { execute execute_no_trans };
allow samsung_app dumpsys_exec:file { execute execute_no_trans };
allow samsung_app gad_untrusted_app_data_file:file { getattr execute execute_no_trans };
allow samsung_app hidden_file:file { { getattr open read ioctl lock } { open append write } };
allow samsung_app init_tmpfs:file read;
allow samsung_app init:unix_stream_socket { connectto setopt };
allow samsung_app netd:unix_stream_socket connectto;
allow samsung_app node:{ tcp_socket udp_socket } node_bind;
allow samsung_app platform_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow samsung_app platform_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow samsung_app platform_media_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow samsung_app platform_media_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow samsung_app port:tcp_socket name_connect;
allow samsung_app port:tcp_socket name_connect;
allow samsung_app port:{ tcp_socket udp_socket } name_bind;
allow samsung_app qtaguid_device:chr_file { getattr open read ioctl lock };
allow samsung_app radio_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow samsung_app rild:unix_stream_socket connectto;
allow samsung_app samsung_app_tmpfs:file execute;
allow samsung_app samsung_app_tmpfs:file { open append write };
allow samsung_app samsung_app_tmpfs:file { read write };
allow samsung_app sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow samsung_app sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow samsung_app sec-ril:unix_stream_socket connectto;
allow samsung_app self:netlink_kobject_uevent_socket { read bind setopt create };
allow samsung_app self:netlink_route_socket { read bind create };
allow samsung_app self:{ tcp_socket udp_socket } *;
allow samsung_app system_data_file:file execute;
allow samsung_app system_file:file execute_no_trans;
allow samsung_app system:tcp_socket { read write };
allow samsung_app usb_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow samsung_app wifi_efs_file:dir { open getattr read search ioctl };
allow samsung_app wifi_efs_file:file { getattr open read ioctl lock };
allow samsung_app zygote:binder { call transfer };
allow samsung_app zygote:fd use;
allow samsungpowersoundplay audio_prop:property_service set;
allow samsungpowersoundplay carrier_file:dir { open getattr read search ioctl };
allow samsungpowersoundplay carrier_file:file { getattr open read ioctl lock };
allow samsungpowersoundplay init:process sigchld;
allow samsungpowersoundplay init:unix_stream_socket connectto;
allow samsungpowersoundplay mediaserver:binder { call transfer };
allow samsungpowersoundplay mediaserver:binder transfer;
allow samsungpowersoundplay mediaserver:fd use;
allow samsungpowersoundplay property_socket:sock_file write;
allow samsungpowersoundplay samsungpowersoundplay_exec:file { entrypoint open read execute getattr };
allow samsungpowersoundplay samsungpowersoundplay_tmpfs:file { read write };
allow samsungpowersoundplay servicemanager:binder { call transfer };
allow samsungpowersoundplay servicemanager:binder { call transfer };
allow samsungpowersoundplay servicemanager:fd use;
allow scs csc_prop:property_service set;
allow scs dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow scs dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow scs init:process sigchld;
allow scs init:unix_stream_socket connectto;
allow scs property_socket:sock_file write;
allow scs radio_prop:property_service set;
allow scs scs_exec:file { entrypoint open read execute getattr };
allow scs scs_tmpfs:file { read write };
allow scs system_prop:property_service set;
allow sdcardd bbccontainer_app_data_backend:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow sdcardd bbccontainer_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sdcardd cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sdcardd container_app_data_backend:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow sdcardd container_app_data_backend:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sdcardd device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow sdcardd fuse_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow sdcardd init:process sigchld;
allow sdcardd install_data_file:file { getattr open read ioctl lock };
allow sdcardd kernel:system syslog_mod;
allow sdcardd klog_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sdcardd labeledfs:filesystem unmount;
allow sdcardd media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sdcardd media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sdcardd media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sdcardd media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sdcardd media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sdcardd media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sdcardd obb_apk_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sdcardd obb_apk_file:dir { open getattr read search ioctl };
allow sdcardd obb_apk_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sdcardd rootfs:dir mounton;
allow sdcardd rootfs:file { getattr open read ioctl lock };
allow sdcardd sdcardd_exec:file { entrypoint open read execute getattr };
allow sdcardd sdcardd_tmpfs:file { read write };
allow sdcardd sdcard_external:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sdcardd sdcard_external:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sdcardd sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sdcardd sdcard_type:dir mounton;
allow sdcardd sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sdcardd sdcard_type:filesystem { mount unmount };
allow sdcardd sdcard_type:filesystem unmount;
allow sdcardd security_file:file { getattr open read ioctl lock };
allow sdcardd security_spota_file:file { getattr open read ioctl lock };
allow sdcardd self:capability { chown };
allow sdcardd self:capability { setuid setgid dac_override sys_admin sys_resource };
allow sdcardd system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sdcardd system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sdcardd system_data_file:file { getattr open read ioctl lock };
allow sdcardd xsdcardfs:filesystem { mount unmount remount };
allow sdcard_external labeledfs:filesystem associate;
allow sdp_cryptod init:process sigchld;
allow sdp_cryptod kernel:system module_request;
allow sdp_cryptod mobicoredaemon:unix_stream_socket connectto;
allow sdp_cryptod mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow sdp_cryptod qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow sdp_cryptod sdp_cryptod_exec:file { entrypoint open read execute getattr };
allow sdp_cryptod sdp_cryptod_tmpfs:file { read write };
allow sdp_cryptod self:netlink_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow sdp_cryptod users_system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow sdp_cryptod users_system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril alarm_device:chr_file write;
allow sec-ril anr_data_file:dir { open getattr read search ioctl };
allow sec-ril anr_data_file:file { { getattr open read ioctl lock } { open append write } };
allow sec-ril app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sec-ril app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sec-ril app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril ashmem_device:chr_file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow sec-ril bugreport_exec:file { execute execute_no_trans };
allow sec-ril carrier_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sec-ril carrier_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril daemon_app_process:process { siginh rlimitinh };
allow sec-ril daemon_app_process:process transition;
allow sec-ril dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sec-ril dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril dumpstate_exec:file { execute execute_no_trans };
allow sec-ril dumpsys_exec:file { execute execute_no_trans };
allow sec-ril efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sec-ril efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril gad_untrusted_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sec-ril gad_untrusted_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril imei_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sec-ril imei_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril init:process sigchld;
allow sec-ril init:unix_stream_socket connectto;
allow sec-ril kernel:system module_request;
allow sec-ril kernel:system syslog_read;
allow sec-ril property_socket:sock_file write;
allow sec-ril qmuxd:unix_stream_socket connectto;
allow sec-ril qmux_radio_socket:dir { write add_name };
allow sec-ril qmux_radio_socket:sock_file { write create setattr };
allow sec-ril radio_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow sec-ril radio_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow sec-ril radio_prop:property_service set;
allow sec-ril rild_prop:property_service set;
allow sec-ril rild:unix_stream_socket connectto;
allow sec-ril rootfs:file execute;
allow sec-ril sec_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sec-ril sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril sec-ril_exec:file { entrypoint open read execute getattr };
allow sec-ril sec-ril_tmpfs:file { read write };
allow sec-ril self:capability { net_admin dac_override net_raw sys_module setuid chown };
allow sec-ril self:process ptrace;
allow sec-ril self:{ udp_socket packet_socket } { read create ioctl };
allow sec-ril servicemanager:binder { call transfer };
allow sec-ril servicemanager:binder { call transfer };
allow sec-ril servicemanager:fd use;
allow sec-ril shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow sec-ril sysfs:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow sec-ril sysfs_wake_lock:file { read write open };
allow sec-ril system:binder { call transfer };
allow sec-ril system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sec-ril system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sec-ril system:fd use;
allow sec-ril system_file:file { getattr execute execute_no_trans };
allow sec-ril system_prop:property_service set;
allow sec-ril system_server:binder transfer;
allow sec-ril zygote_exec:file { getattr open read execute };
allow sec-ril zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow secstarter app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow secstarter app_data_file:file { getattr open read ioctl lock };
allow secstarter gad_untrusted_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow secstarter gad_untrusted_app_data_file:file { getattr open read ioctl lock };
allow secstarter init:process sigchld;
allow secstarter init:unix_stream_socket connectto;
allow secstarter property_socket:sock_file write;
allow secstarter secstarter_exec:file { entrypoint open read execute getattr };
allow secstarter secstarter_tmpfs:file { read write };
allow secstarter system_data_file:dir { open search write add_name remove_name };
allow secstarter system_data_file:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow secstarter system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow secstarter system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow secstarter vpn_prop:property_service set;
allow secure_storage commonplatformappdomain:fd use;
allow secure_storage container_app:fd use;
allow secure_storage debugfs:dir { open getattr read search ioctl };
allow secure_storage debugfs:file { getattr open read ioctl lock };
allow secure_storage efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow secure_storage efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow secure_storage firmware:dir { open getattr read search ioctl };
allow secure_storage firmware:{ file lnk_file } { getattr open read ioctl lock };
allow secure_storage init:process sigchld;
allow secure_storage init_shell:unix_stream_socket connectto;
allow secure_storage mobicoredaemon:unix_stream_socket connectto;
allow secure_storage mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow secure_storage mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow secure_storage qseecom_device:chr_file { read write ioctl open };
allow secure_storage sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow secure_storage sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow secure_storage secure_storage_device:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow secure_storage secure_storage_device:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow secure_storage secure_storage_device:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow secure_storage secure_storage_exec:file { entrypoint open read execute getattr };
allow secure_storage secure_storage_tmpfs:file { read write };
allow secure_storage s_system_app:fd use;
allow secure_storage store_app:fd use;
allow secure_storage system_app:fd use;
allow secure_storage system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow secure_storage system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow secure_storage vold:fd use;
allow secure_storage wpa:fd use;
allow security_firmware labeledfs:filesystem associate;
allow seempd firmware_file:dir { open getattr read search ioctl };
allow seempd firmware_file:file { getattr open read ioctl lock };
allow seempd init:process sigchld;
allow seempd seempd_exec:file { entrypoint open read execute getattr };
allow seempd seempd_tmpfs:file { read write };
allow seempd seemp_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow seempd seemp_file:{ file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow seempd seemplog_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow seempd system_data_file:file { getattr open read ioctl lock };
allow seempd tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow selinux_net ashmem_device:chr_file execute;
allow selinux_net csc_prop:property_service set;
allow selinux_net dalvikcache_data_file:file { write setattr };
allow selinux_net devpts:chr_file getattr;
allow selinux_net init:process sigchld;
allow selinux_net init:unix_stream_socket connectto;
allow selinux_net input_device:chr_file { write getattr open };
allow selinux_net property_socket:sock_file write;
allow selinux_net self:capability { fowner fsetid dac_override };
allow selinux_net selinux_net_exec:file { entrypoint open read execute getattr };
allow selinux_net selinux_net_exec:file open;
allow selinux_net selinux_net_exec:file open;
allow selinux_net selinux_net_tmpfs:file { read write };
allow selinux_net servicemanager:binder call;
allow selinux_net setupwizard_prop:property_service set;
allow selinux_net shell_exec:file read;
allow selinux_net shell_exec:file { read execute open execute_no_trans };
allow selinux_net shell:fd use;
allow selinux_net system:binder { transfer call };
allow selinux_net system_file:file execute_no_trans;
allow selinux_net zygote_exec:file { read getattr open execute execute_no_trans };
allow sem app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sem app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sem efs_file:dir { open getattr read search ioctl };
allow sem efs_file:file { getattr open read ioctl lock };
allow sem init:process sigchld;
allow sem init:unix_stream_socket connectto;
allow sem mobicoredaemon:unix_stream_socket connectto;
allow sem mobicore-user_device:chr_file { read write open ioctl };
allow sem nfc_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow sem property_socket:sock_file write;
allow sem prov_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sem prov_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sem qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow sem sec_efs_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow sem sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sem self:capability dac_override;
allow sem sem_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow sem sem_exec:file { entrypoint open read execute getattr };
allow sem sem_tmpfs:file { read write };
allow sem system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sem system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sem system_prop:property_service set;
allow sensorhubservice app_data_file:file { open append write };
allow sensorhubservice at_distributor:binder transfer;
allow sensorhubservice at_distributor:fd use;
allow sensorhubservice bugreport_exec:file { execute execute_no_trans };
allow sensorhubservice dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sensorhubservice dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sensorhubservice dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sensorhubservice dumpstate:binder transfer;
allow sensorhubservice dumpstate_exec:file { execute execute_no_trans };
allow sensorhubservice dumpsys:binder transfer;
allow sensorhubservice dumpsys_exec:file { execute execute_no_trans };
allow sensorhubservice gad_untrusted_app_data_file:file { open append write };
allow sensorhubservice ime_app:binder transfer;
allow sensorhubservice init:process sigchld;
allow sensorhubservice init:unix_stream_socket connectto;
allow sensorhubservice init:unix_stream_socket { read write };
allow sensorhubservice input_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow sensorhubservice input_device:dir { open getattr read search ioctl };
allow sensorhubservice platform_app_data_file:file { open append write };
allow sensorhubservice radio:binder transfer;
allow sensorhubservice radio:fd use;
allow sensorhubservice sdcard_type:file { open append write };
allow sensorhubservice self:capability dac_override;
allow sensorhubservice sensorhubservice_exec:file { entrypoint open read execute getattr };
allow sensorhubservice sensorhubservice_service:service_manager add;
allow sensorhubservice sensorhubservice_tmpfs:file { read write };
allow sensorhubservice servicemanager:binder { call transfer };
allow sensorhubservice servicemanager:binder { call transfer };
allow sensorhubservice servicemanager:fd use;
allow sensorhubservice shell:binder transfer;
allow sensorhubservice s_system_app:binder transfer;
allow sensorhubservice s_system_app:fd use;
allow sensorhubservice s_system_app:fifo_file { open append write };
allow sensorhubservice sysfs:file write;
allow sensorhubservice sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow sensorhubservice system_app:binder transfer;
allow sensorhubservice system_app:fd use;
allow sensorhubservice system_app:fifo_file { open append write };
allow sensorhubservice system:binder { call transfer };
allow sensorhubservice system:fd use;
allow sensorhubservice system_server:binder transfer;
allow sensorhubservice untrusteddomain:binder transfer;
allow sensorhubservice untrusteddomain:fd use;
allow sensors cgroup:dir { create add_name };
allow sensors device_latency:chr_file { open append write };
allow sensors init:process sigchld;
allow sensors persist_file:dir { open getattr read search ioctl };
allow sensors self:capability2 block_suspend;
allow sensors self:capability chown;
allow sensors self:capability { dac_override dac_read_search net_bind_service };
allow sensors self:capability { setuid setgid };
allow sensors self:process execmem;
allow sensors self:socket *;
allow sensors sensors_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sensors sensors_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sensors sensors_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow sensors sensors_exec:file { entrypoint open read execute getattr };
allow sensors sensors_persist_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sensors sensors_persist_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sensors sensors_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sensors sensors_tmpfs:file { read write };
allow sensors smd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow sensors smem_log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow sensors socket_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow sensors sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow sensors system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow servicemanager adbd:dir search;
allow servicemanager adbd:file { read open };
allow servicemanager adbd:process getattr;
allow servicemanager androidshmservice:dir search;
allow servicemanager androidshmservice:file { read open };
allow servicemanager androidshmservice:process getattr;
allow servicemanager apaservice:dir search;
allow servicemanager apaservice:file { read open };
allow servicemanager apaservice:process getattr;
allow servicemanager at_distributor:binder transfer;
allow servicemanager at_distributor:dir search;
allow servicemanager at_distributor:file { read open };
allow servicemanager at_distributor:process getattr;
allow servicemanager atfwd:binder transfer;
allow servicemanager ATFWD-daemon:dir search;
allow servicemanager ATFWD-daemon:file { read open };
allow servicemanager ATFWD-daemon:process getattr;
allow servicemanager atfwd:dir search;
allow servicemanager atfwd:file { read open };
allow servicemanager atfwd:process getattr;
allow servicemanager audiod:dir search;
allow servicemanager audiod:file { read open };
allow servicemanager audiod:process getattr;
allow servicemanager auditd:binder transfer;
allow servicemanager audit_log:file { { getattr open read ioctl lock } { open append write } };
allow servicemanager bauthserver:dir search;
allow servicemanager bauthserver:file { read open };
allow servicemanager bauthserver:process getattr;
allow servicemanager bintvoutservice:dir search;
allow servicemanager bintvoutservice:file { read open };
allow servicemanager bintvoutservice:process getattr;
allow servicemanager bluetooth:binder transfer;
allow servicemanager bluetooth:dir search;
allow servicemanager bluetooth:file { read open };
allow servicemanager bluetooth:process getattr;
allow servicemanager bootanim:binder transfer;
allow servicemanager bootanim:dir search;
allow servicemanager bootanim:dir search;
allow servicemanager bootanim:file { read open };
allow servicemanager bootanim:file { read open };
allow servicemanager bootanim:process getattr;
allow servicemanager bootanim:process getattr;
allow servicemanager charon:binder transfer;
allow servicemanager connfwexe:binder transfer;
allow servicemanager debuggerd:binder transfer;
allow servicemanager denial_prop:property_service set;
allow servicemanager device:file { getattr open read ioctl lock };
allow servicemanager domain:binder transfer;
allow servicemanager drmserver:binder transfer;
allow servicemanager drmserver:dir search;
allow servicemanager drmserver:dir search;
allow servicemanager drmserver:file { read open };
allow servicemanager drmserver:file { read open };
allow servicemanager drmserver:process getattr;
allow servicemanager drmserver:process getattr;
allow servicemanager dtseagleservice:dir search;
allow servicemanager dtseagleservice:file { read open };
allow servicemanager dtseagleservice:process getattr;
allow servicemanager dumpstate:binder transfer;
allow servicemanager dumpstate:dir search;
allow servicemanager dumpstate:file { read open };
allow servicemanager dumpstate:process getattr;
allow servicemanager dumpsys:binder transfer;
allow servicemanager edmaudit:process getattr;
allow servicemanager fidodaemon:dir search;
allow servicemanager fidodaemon:file { read open };
allow servicemanager fidodaemon:process getattr;
allow servicemanager fixmo_app:dir search;
allow servicemanager fixmo_app:file { read open };
allow servicemanager fixmo_app:process getattr;
allow servicemanager good_app:dir search;
allow servicemanager good_app:file { read open };
allow servicemanager good_app:process getattr;
allow servicemanager gpsd:dir search;
allow servicemanager gpsd:file { read open };
allow servicemanager gpsd:process getattr;
allow servicemanager gsiff_daemon:binder transfer;
allow servicemanager gsiff_daemon:dir search;
allow servicemanager gsiff_daemon:file { read open };
allow servicemanager gsiff_daemon:process getattr;
allow servicemanager hbtp:dir search;
allow servicemanager hbtp:file { read open };
allow servicemanager hbtp:process getattr;
allow servicemanager healthd:dir search;
allow servicemanager healthd:file { read open };
allow servicemanager healthd:process getattr;
allow servicemanager imscm:dir search;
allow servicemanager imscm:file { read open };
allow servicemanager imscm:process getattr;
allow servicemanager ims:dir search;
allow servicemanager ims:file { read open };
allow servicemanager ims:process getattr;
allow servicemanager init:process sigchld;
allow servicemanager init_shell:dir search;
allow servicemanager init_shell:file { read open };
allow servicemanager init_shell:process getattr;
allow servicemanager init:unix_stream_socket connectto;
allow servicemanager inputflinger:dir search;
allow servicemanager inputflinger:file { read open };
allow servicemanager inputflinger:process getattr;
allow servicemanager jackservice:dir search;
allow servicemanager jackservice:file { read open };
allow servicemanager jackservice:process getattr;
allow servicemanager kernel:security compute_av;
allow servicemanager keystore:dir search;
allow servicemanager keystore:file { read open };
allow servicemanager keystore:process getattr;
allow servicemanager kiesexe:binder transfer;
allow servicemanager kiesexe:dir search;
allow servicemanager kiesexe:file { read open };
allow servicemanager kiesexe:process getattr;
allow servicemanager knox_untrusted_app:dir search;
allow servicemanager knox_untrusted_app:file { read open };
allow servicemanager knox_untrusted_app:process getattr;
allow servicemanager location_app:dir search;
allow servicemanager location_app:file { read open };
allow servicemanager location_app:process getattr;
allow servicemanager location:dir search;
allow servicemanager location:file { read open };
allow servicemanager location:process getattr;
allow servicemanager mediaserver:dir search;
allow servicemanager mediaserver:file { read open };
allow servicemanager mediaserver:process getattr;
allow servicemanager mm-pp-daemon:dir search;
allow servicemanager mm-pp-daemon:file { read open };
allow servicemanager mm-pp-daemon:process getattr;
allow servicemanager mm-qcamerad:dir search;
allow servicemanager mm-qcamerad:file { read open };
allow servicemanager mm-qcamerad:process getattr;
allow servicemanager newAttr1:dir search;
allow servicemanager newAttr1:file { read open };
allow servicemanager newAttr1:process getattr;
allow servicemanager nfc:binder transfer;
allow servicemanager nfc:dir search;
allow servicemanager nfc:file { read open };
allow servicemanager nfc:process getattr;
allow servicemanager oneseg_mw:dir search;
allow servicemanager oneseg_mw:file { read open };
allow servicemanager oneseg_mw:process getattr;
allow servicemanager otp_server:dir search;
allow servicemanager otp_server:file { read open };
allow servicemanager otp_server:process getattr;
allow servicemanager per_mgr:dir search;
allow servicemanager per_mgr:file { read open };
allow servicemanager per_mgr:process getattr;
allow servicemanager proc_avc_msg:file { { getattr open read ioctl lock } { open append write } };
allow servicemanager property_socket:sock_file write;
allow servicemanager racoon:binder transfer;
allow servicemanager racoon:dir search;
allow servicemanager racoon:file { read open };
allow servicemanager racoon:process getattr;
allow servicemanager radio:binder transfer;
allow servicemanager radio:dir search;
allow servicemanager radio:file { read open };
allow servicemanager radio:process getattr;
allow servicemanager rild:dir search;
allow servicemanager rild:dir search;
allow servicemanager rild:file { read open };
allow servicemanager rild:file { read open };
allow servicemanager rild:process getattr;
allow servicemanager rild:process getattr;
allow servicemanager samsungpowersoundplay:binder transfer;
allow servicemanager samsungpowersoundplay:dir search;
allow servicemanager samsungpowersoundplay:file { read open };
allow servicemanager samsungpowersoundplay:process getattr;
allow servicemanager sec-ril:binder transfer;
allow servicemanager sec-ril:dir search;
allow servicemanager sec-ril:file { read open };
allow servicemanager sec-ril:process getattr;
allow servicemanager security_file:file { read open };
allow servicemanager security_spota_file:file { read open };
allow servicemanager self:binder set_context_mgr;
allow servicemanager self:netlink_selinux_socket *;
allow servicemanager selinuxfs:file { { getattr open read ioctl lock } { open append write } };
allow servicemanager sensorhubservice:binder transfer;
allow servicemanager sensorhubservice:dir search;
allow servicemanager sensorhubservice:file { read open };
allow servicemanager sensorhubservice:process getattr;
allow servicemanager servicemanager_exec:file { entrypoint open read execute getattr };
allow servicemanager servicemanager_tmpfs:file { read write };
allow servicemanager surfaceflinger:binder transfer;
allow servicemanager surfaceflinger:dir search;
allow servicemanager surfaceflinger:file { read open };
allow servicemanager surfaceflinger:process getattr;
allow servicemanager syscope_app:binder transfer;
allow servicemanager system_prop:property_service set;
allow servicemanager system_server:binder transfer;
allow servicemanager system_server:dir search;
allow servicemanager system_server:dir search;
allow servicemanager system_server:file { read open };
allow servicemanager system_server:file { read open };
allow servicemanager system_server:process getattr;
allow servicemanager system_server:process getattr;
allow servicemanager tee:dir search;
allow servicemanager tee:file { read open };
allow servicemanager tee:process getattr;
allow servicemanager tlc_server:dir search;
allow servicemanager tlc_server:file { read open };
allow servicemanager tlc_server:process getattr;
allow servicemanager vold:dir search;
allow servicemanager vold:file { read open };
allow servicemanager vold:process getattr;
allow servicemanager wfdservice:dir search;
allow servicemanager wfdservice:file { read open };
allow servicemanager wfdservice:process getattr;
allow servicemanager wlandutservice:dir search;
allow servicemanager wlandutservice:file { read open };
allow servicemanager wlandutservice:process getattr;
allow servicemanager wpa:binder transfer;
allow servicemanager wpa:dir search;
allow servicemanager wpa:file { read open };
allow servicemanager wpa:process getattr;
allow servicemanager zygote:binder transfer;
allow servicemanager zygote:dir search;
allow servicemanager zygote:file { read open };
allow servicemanager zygote:process getattr;
allow shared_relro shared_relro_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow shared_relro shared_relro_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow shared_relro shared_relro_tmpfs:file execute;
allow shared_relro shared_relro_tmpfs:file { read write };
allow shell adb_device:chr_file read;
allow shell adbd:fifo_file { { getattr open read ioctl lock } { open append write } };
allow shell adbd:process sigchld;
allow shell adbd:unix_stream_socket getopt;
allow shell anr_data_file:dir { open getattr read search ioctl };
allow shell anr_data_file:file { getattr open read ioctl lock };
allow shell anr_data_file:file { getattr open read ioctl lock };
allow shell apk_data_file:dir { open getattr read search ioctl };
allow shell apk_data_file:dir { open getattr read search ioctl };
allow shell apk_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow shell apk_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow shell app_data_file:dir search;
allow shell audit_log:dir read;
allow shell audit_log:file read;
allow shell bintvoutservice:binder { call transfer };
allow shell bintvoutservice:fd use;
allow shell bugreport_exec:file { execute execute_no_trans };
allow shell bugreport_exec:file { getattr open read execute };
allow shell bugreport:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow shell bugreport:process { siginh rlimitinh };
allow shell bugreport:process transition;
allow shell cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow shell cgroup:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow shell console_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow shell console_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow shell container_app:process getattr;
allow shell csc_prop:property_service set;
allow shell ctl_dumpstate_prop:property_service set;
allow shell ctl_dumpstate_prop:property_service set;
allow shell debugfs:file { getattr open read ioctl lock };
allow shell debugfs:file read;
allow shell debug_prop:property_service set;
allow shell debug_prop:property_service set;
allow shell device:sock_file write;
allow shell devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow shell devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow shell dev_type:lnk_file read;
allow shell dnsproxyd_socket:sock_file { open append write };
allow shell dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow shell dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow shell dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow shell dumpstate_exec:file { execute execute_no_trans };
allow shell dumpstate_exec:file { getattr open read execute };
allow shell dumpstate:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow shell dumpstate:process { siginh rlimitinh };
allow shell dumpstate:process transition;
allow shell dumpstate_socket:sock_file write;
allow shell dumpstate:unix_stream_socket connectto;
allow shell dumpsys_exec:file { execute execute_no_trans };
allow shell dumpsys_exec:file { getattr open read execute };
allow shell dumpsys:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow shell dumpsys:process { siginh rlimitinh };
allow shell dumpsys:process transition;
allow shell efs_file:dir { open getattr read search ioctl };
allow shell firmware:dir { open getattr read search ioctl };
allow shell firmware:{ file lnk_file } { getattr open read ioctl lock };
allow shell fixmo_app_data_file:dir getattr;
allow shell fixmo_app:process getattr;
allow shell full_device:chr_file read;
allow shell gad_untrusted_app_data_file:dir search;
allow shell healthd:binder { call transfer };
allow shell healthd:fd use;
allow shell init:process sigchld;
allow shell init:unix_stream_socket connectto;
allow shell init:unix_stream_socket connectto;
allow shell init:unix_stream_socket connectto;
allow shell input_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow shell input_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow shell input_device:chr_file { read ioctl };
allow shell input_device:dir { open getattr read search ioctl };
allow shell jackservice:binder { call transfer };
allow shell jackservice:fd use;
allow shell kernel:process sigchld;
allow shell kernel:system syslog_read;
allow shell log_device:chr_file { getattr open read ioctl lock };
allow shell log_device:chr_file read;
allow shell logdr_socket:sock_file write;
allow shell logdr_socket:sock_file write;
allow shell logd_socket:sock_file write;
allow shell logd_socket:sock_file write;
allow shell logd:unix_stream_socket connectto;
allow shell logd:unix_stream_socket connectto;
allow shell logd:unix_stream_socket connectto;
allow shell logd:unix_stream_socket connectto;
allow shell media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow shell media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow shell netd:unix_stream_socket connectto;
allow shell newAttr27:{ dir { { chr_file blk_file } { file lnk_file sock_file fifo_file } } } getattr;
allow shell newAttr27 :dir { open getattr read search ioctl };
allow shell newAttr33:dir { open getattr read search ioctl };
allow shell newAttr33:{ file lnk_file } { getattr open read ioctl lock };
allow shell newAttr33:process getattr;
allow shell newAttr54:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { getattr open read ioctl lock };
allow shell newAttr54:dir { open getattr read search ioctl };
allow shell newAttr54:dir { open getattr read search ioctl };
allow shell newAttr68:{ dir { { chr_file blk_file } { file lnk_file sock_file fifo_file } } } getattr;
allow shell newAttr74:dir { open getattr read search ioctl };
allow shell newAttr9:dir { open getattr read search ioctl };
allow shell newAttr9:{ file lnk_file } { getattr open read ioctl lock };
allow shell newAttr9:process sigkill;
allow shell node:tcp_socket node_bind;
allow shell persist_file:dir { open getattr read search ioctl };
allow shell persist_file:file { getattr open read ioctl lock };
allow shell port:tcp_socket { name_connect name_bind };
allow shell port:udp_socket name_bind;
allow shell powerctl_prop:property_service set;
allow shell proc_avc_msg:file read;
allow shell property_socket:sock_file write;
allow shell property_socket:sock_file write;
allow shell rootfs:dir { open getattr read search ioctl };
allow shell runas_exec:file { getattr open read execute };
allow shell runas:process { siginh rlimitinh };
allow shell runas:process transition;
allow shell sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow shell sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow shell self:netlink_route_socket { write getattr setopt read bind create nlmsg_read };
allow shell self:rawip_socket { getopt create };
allow shell self:tcp_socket { connect setopt read bind create accept write getattr getopt listen shutdown };
allow shell self:udp_socket { create ioctl };
allow shell sensorhubservice:binder { call transfer };
allow shell sensorhubservice:fd use;
allow shell setupwizard_prop:property_service set;
allow shell shell_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow shell shell_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow shell shell_data_file:fifo_file { write create };
allow shell shell_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow shell shell_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow shell shell_data_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow shell shell_data_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow shell shell_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow shell shell_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow shell shell_exec:file { entrypoint open read execute getattr };
allow shell shell_exec:file { entrypoint open read execute getattr };
allow shell shell_exec:file { entrypoint open read execute getattr };
allow shell shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow shell shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow shell shell_prop:property_service set;
allow shell shell_prop:property_service set;
allow shell shell_tmpfs:file execute;
allow shell shell_tmpfs:file { read write };
allow shell su_exec:file { getattr open read execute };
allow shell su:process { siginh rlimitinh };
allow shell su:process transition;
allow shell surfaceflinger:binder transfer;
allow shell sysfs_lowmemorykiller:file { getattr open read ioctl lock };
allow shell system_file:file { getattr execute execute_no_trans };
allow shell system_file:file { getattr execute execute_no_trans };
allow shell system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow shell system:process { siginh rlimitinh };
allow shell system:process transition;
allow shell system_prop:property_service set;
allow shell tima_dump_exec:file { getattr open read execute };
allow shell tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow shell tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow shell usb_bus_device:chr_file { getattr open read ioctl lock };
allow shell vibrator_device:chr_file read;
allow shell vold:unix_stream_socket connectto;
allow shell wifi_data_file:sock_file { getattr open read ioctl lock };
allow shell wpa_socket:sock_file { open append write };
allow shell wpa:unix_dgram_socket sendto;
allow shell zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow shell zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow smdexe ddexe:unix_stream_socket connectto;
allow smdexe dun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow smdexe init:process sigchld;
allow smdexe mif_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow smdexe rild:unix_stream_socket connectto;
allow smdexe self:capability { setuid dac_override };
allow smdexe smd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow smdexe smdexe_exec:file { entrypoint open read execute getattr };
allow smdexe smdexe_tmpfs:file { read write };
allow smdexe sysfs:file { { getattr open read ioctl lock } { open append write } };
allow smdexe sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow smdexe system_data_file:sock_file { { getattr open read ioctl lock } { open append write } };
allow s_platform_app apaservice:binder transfer;
allow s_platform_app apk_private_data_file:dir search;
allow s_platform_app { apk_tmp_file apk_private_tmp_file }:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow s_platform_app { apk_tmp_file apk_private_tmp_file }:file { { getattr open read ioctl lock } { open append write } };
allow s_platform_app app_data_file:file execmod;
allow s_platform_app asec_apk_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_platform_app asec_apk_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_platform_app at_distributor:unix_stream_socket connectto;
allow s_platform_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_platform_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_platform_app container_app:dir search;
allow s_platform_app cpk_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_platform_app cpk_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_platform_app dcm_data_file:dir { open getattr read search ioctl };
allow s_platform_app dcm_data_file:file { getattr open read ioctl lock };
allow s_platform_app downfilters_lib_file:dir { open getattr read search ioctl };
allow s_platform_app downfilters_lib_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow s_platform_app dtseagleservice:binder { call transfer };
allow s_platform_app dtseagleservice:binder transfer;
allow s_platform_app dtseagleservice:fd use;
allow s_platform_app ese_service:service_manager add;
allow s_platform_app fidodaemon:binder { call transfer };
allow s_platform_app fidodaemon:binder transfer;
allow s_platform_app fidodaemon:fd use;
allow s_platform_app fixmo_app:binder { call transfer };
allow s_platform_app fixmo_app:binder transfer;
allow s_platform_app fixmo_app:fd use;
allow s_platform_app gad_untrusted_app_data_file:file execmod;
allow s_platform_app good_app:binder { call transfer };
allow s_platform_app good_app:binder transfer;
allow s_platform_app good_app:fd use;
allow s_platform_app init:binder { transfer call };
allow s_platform_app init:unix_stream_socket connectto;
allow s_platform_app irm_platform_app_tmpfs:file write;
allow s_platform_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_platform_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_platform_app mediaserver:unix_stream_socket connectto;
allow s_platform_app mst_ctrl_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_platform_app newAttr56:file { getattr open read ioctl lock };
allow s_platform_app ovr_device:chr_file { getattr open read ioctl lock };
allow s_platform_app pfw_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_platform_app pfw_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_platform_app platform_app_service:service_manager add;
allow s_platform_app platform_app_tmpfs:file execute;
allow s_platform_app platform_app_tmpfs:file { read write };
allow s_platform_app platform_app_tmpfs:file write;
allow s_platform_app property_socket:sock_file write;
allow s_platform_app prov_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_platform_app prov_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_platform_app qseecom_device:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_platform_app qseecom_device:{ { file lnk_file sock_file fifo_file } chr_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_platform_app self:capability { dac_read_search dac_override setuid net_raw setgid net_admin };
allow s_platform_app shell_data_file:dir search;
allow s_platform_app shell_data_file:file { open getattr read };
allow s_platform_app socket_device:sock_file write;
allow s_platform_app sprintitson_file:file execute;
allow s_platform_app ss_conn_daemon_socket:sock_file write;
allow s_platform_app ss_conn_daemon:unix_stream_socket connectto;
allow s_platform_app ss_kbservice_daemon_socket:sock_file write;
allow s_platform_app ss_kbservice_daemon:unix_stream_socket connectto;
allow s_platform_app system_data_file:dir { relabelfrom relabelto };
allow s_platform_app system_data_file:lnk_file { getattr link unlink rename };
allow s_platform_app system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_platform_app uibc_socket:sock_file write;
allow s_platform_app wfdservice:binder { call transfer };
allow s_platform_app wfdservice:binder transfer;
allow s_platform_app wfdservice:fd use;
allow s_platform_app writingbuddymanager_service:service_manager add;
allow ss_conn_daemon init:process sigchld;
allow ss_conn_daemon node:tcp_socket node_bind;
allow ss_conn_daemon node:udp_socket node_bind;
allow ss_conn_daemon port:tcp_socket { name_bind name_connect };
allow ss_conn_daemon port:udp_socket name_bind;
allow ss_conn_daemon ss_conn_daemon_exec:file { entrypoint open read execute getattr };
allow ss_conn_daemon ss_conn_daemon_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ss_conn_daemon ss_conn_daemon_tmpfs:file { read write };
allow ss_conn_daemon system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ss_conn_daemon system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ss_conn_daemon usb_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sshd init:process sigchld;
allow sshd sshd_exec:file { entrypoint open read execute getattr };
allow sshd sshd_tmpfs:file { read write };
allow ss_kbservice_daemon init:process sigchld;
allow ss_kbservice_daemon ss_kbservice_daemon_exec:file { entrypoint open read execute getattr };
allow ss_kbservice_daemon ss_kbservice_daemon_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ss_kbservice_daemon ss_kbservice_daemon_socket:{ file fifo_file lnk_file sock_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ss_kbservice_daemon ss_kbservice_daemon_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ss_kbservice_daemon ss_kbservice_daemon_tmpfs:file { read write };
allow ss_kbservice_daemon system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow ss_kbservice_daemon system_data_file:dir { write add_name remove_name };
allow ss_kbservice_daemon system_data_file:fifo_file unlink;
allow ss_kbservice_daemon system_data_file:sock_file { create setattr unlink };
allow ss_kbservice_daemon uhid_device:chr_file { write ioctl open };
allow ssr_diag diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ssr_diag diag_device:chr_file read;
allow ssr_diag init:process sigchld;
allow ssr_diag self:netlink_kobject_uevent_socket { bind create setopt read };
allow ssr_diag self:netlink_kobject_uevent_socket read;
allow ssr_diag ssr_diag_exec:file { entrypoint open read execute getattr };
allow ssr_diag ssr_diag_tmpfs:file { read write };
allow ssr_setup init:process sigchld;
allow ssr_setup ssr_setup_exec:file { entrypoint open read execute getattr };
allow ssr_setup ssr_setup_tmpfs:file { read write };
allow ssr_setup sysfs_esoc:dir { { getattr open read ioctl lock } search };
allow ssr_setup sysfs_esoc:lnk_file { getattr open read ioctl lock };
allow ssr_setup sysfs:file { open append write };
allow ssr_setup sysfs_ssr:dir { { getattr open read ioctl lock } search };
allow ssr_setup sysfs_ssr:lnk_file { { getattr open read ioctl lock } { open append write } };
allow ssr_setup sysfs_ssr_toggle:file { { getattr open read ioctl lock } { open append write } };
allow sswap block_device:dir { open getattr read search ioctl };
allow sswap cache_file:file { open append write };
allow sswap init:process sigchld;
allow sswap proc:file { { getattr open read ioctl lock } { open append write } };
allow sswap rootfs:file entrypoint;
allow sswap self:capability sys_admin;
allow sswap self:capability { sys_admin dac_override };
allow sswap sswap_exec:file { entrypoint open read execute getattr };
allow sswap sswap_tmpfs:file { read write };
allow sswap swap_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow sswap sysfs:file { open append write };
allow sswap sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow s_system_app alarm_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app anr_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app anr_data_file:dir { { open getattr read search ioctl } add_name write };
allow s_system_app anr_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app anr_data_file:file { getattr link unlink rename };
allow s_system_app apk_data_file:dir { open getattr read search ioctl };
allow s_system_app apk_tmp_file:file { { getattr open read ioctl lock } { open append write } };
allow s_system_app app_data_file:file { execute execmod };
allow s_system_app appdomain:binder { call transfer };
allow s_system_app appdomain:fd use;
allow s_system_app app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app app_library_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app asec_apk_file:dir search;
allow s_system_app asec_apk_file:file { getattr open read ioctl lock };
allow s_system_app asec_apk_file:file { getattr open read ioctl lock };
allow s_system_app asec_image_file:dir { open getattr read search ioctl };
allow s_system_app at_distributor:binder transfer;
allow s_system_app at_distributor:unix_stream_socket connectto;
allow s_system_app atfwd:binder transfer;
allow s_system_app ATFWD-daemon:blk_file { getattr open read ioctl lock };
allow s_system_app atfwd_service:service_manager add;
allow s_system_app audio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app audit_log:file { open append write };
allow s_system_app backup_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app backup_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app bauthserver:binder transfer;
allow s_system_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow s_system_app bbccontainer_app_data_backend:lnk_file { getattr open read ioctl lock };
allow s_system_app bintvoutservice:binder { call transfer };
allow s_system_app bintvoutservice:fd use;
allow s_system_app block_device:blk_file { getattr ioctl lock append };
allow s_system_app block_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app block_device:lnk_file { getattr open read ioctl lock };
allow s_system_app bluetooth:binder transfer;
allow s_system_app bluetooth:unix_stream_socket ioctl;
allow s_system_app bugreport_exec:file { execute execute_no_trans };
allow s_system_app cache_backup_file:file { getattr link unlink rename };
allow s_system_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app carrier_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app carrier_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app carrier_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app carrier_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app cgroup:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app cnd_data_file:dir { open search write add_name remove_name };
allow s_system_app cnd_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app cne_service:service_manager add;
allow s_system_app color_service:service_manager add;
allow s_system_app connfwexe:unix_stream_socket connectto;
allow s_system_app container_app_data_backend:dir { open getattr read search ioctl };
allow s_system_app container_app_data_backend:lnk_file { getattr open read ioctl lock };
allow s_system_app container_app:dir { open getattr read search ioctl };
allow s_system_app containerdomain:binder { call transfer };
allow s_system_app containerdomain:fd use;
allow s_system_app container_system_file:dir getattr;
allow s_system_app cpk_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app cpk_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app csc_prop:property_service set;
allow s_system_app cs_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app cs_socket:sock_file write;
allow s_system_app cs:unix_stream_socket connectto;
allow s_system_app cs:unix_stream_socket connectto;
allow s_system_app ctl_bugreport_prop:property_service set;
allow s_system_app ctl_default_prop:property_service set;
allow s_system_app ctl_default_prop:property_service set;
allow s_system_app ctl_dumpstate_prop:property_service set;
allow s_system_app debugfs:file { getattr open read ioctl lock };
allow s_system_app debug_prop:property_service set;
allow s_system_app default_prop:property_service set;
allow s_system_app device:file { getattr open read ioctl lock };
allow s_system_app device:sock_file write;
allow s_system_app device:sock_file write;
allow s_system_app dhcp_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app dhcp_data_file:file { getattr open read ioctl lock };
allow s_system_app dhcp_exec:file { getattr execute execute_no_trans };
allow s_system_app dhcp_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow s_system_app diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app diagexe:unix_stream_socket connectto;
allow s_system_app dnsproxyd_socket:sock_file { open append write };
allow s_system_app downfilters_lib_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app downfilters_lib_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app dpmservice:service_manager add;
allow s_system_app drm_data_file:dir { { open getattr read search ioctl } add_name remove_name };
allow s_system_app drm_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow s_system_app drm_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app drm_data_file:file { getattr open read ioctl lock };
allow s_system_app drm_playready_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow s_system_app drm_playready_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app drm_security_system_file:dir { open getattr read search ioctl };
allow s_system_app dts_data_file:dir { open getattr read search ioctl };
allow s_system_app dts_data_file:file { getattr open read ioctl lock };
allow s_system_app dtseagleservice:binder { call transfer };
allow s_system_app dtseagleservice:binder transfer;
allow s_system_app dtseagleservice:fd use;
allow s_system_app dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app dumpstate:binder transfer;
allow s_system_app dumpstate_exec:file { execute execute_no_trans };
allow s_system_app dumpstate_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app dumpsys:binder transfer;
allow s_system_app dumpsys_exec:file { execute execute_no_trans };
allow s_system_app dun_service:service_manager add;
allow s_system_app dw_mmc_device:dir { open getattr read search ioctl };
allow s_system_app dw_mmc_device:file { { getattr open read ioctl lock } { open append write } };
allow s_system_app ecryptfs:filesystem getattr;
allow s_system_app efsblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app efs_file:file { create setattr open ioctl lock append getattr link unlink rename };
allow s_system_app emmcblk_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app epmd:unix_stream_socket connectto;
allow s_system_app epm_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app epm_socket:sock_file write;
allow s_system_app fidodaemon:binder { call transfer };
allow s_system_app fidodaemon:binder transfer;
allow s_system_app fidodaemon:fd use;
allow s_system_app firmware:dir { open getattr read search ioctl };
allow s_system_app firmware:file { getattr open read ioctl lock };
allow s_system_app firmware:{ file lnk_file } { getattr open read ioctl lock };
allow s_system_app fixmo_app:binder { call transfer };
allow s_system_app fixmo_app:binder transfer;
allow s_system_app fixmo_app:fd use;
allow s_system_app fm_radio_device:chr_file { read open ioctl };
allow s_system_app gad_untrusted_app_data_file:file { execute execmod };
allow s_system_app good_app:binder { call transfer };
allow s_system_app good_app:binder transfer;
allow s_system_app good_app:fd use;
allow s_system_app gps_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app gps_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app healthd:binder { call transfer };
allow s_system_app healthd:fd use;
allow s_system_app hidden_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app hidden_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app icd_device:chr_file { getattr open read ioctl lock };
allow s_system_app icd_exec:file { getattr open read ioctl lock };
allow s_system_app ims_service:service_manager add;
allow s_system_app init:binder { call transfer };
allow s_system_app init:fd use;
allow s_system_app init:process signull;
allow s_system_app init:unix_dgram_socket sendto;
allow s_system_app init:unix_stream_socket connectto;
allow s_system_app init:unix_stream_socket connectto;
allow s_system_app init:unix_stream_socket setopt;
allow s_system_app input_device:chr_file { read write ioctl open };
allow s_system_app IPSecService:unix_stream_socket connectto;
allow s_system_app ipsec_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app irm_media_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app irm_media_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app iss_efs_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow s_system_app iss_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow s_system_app jackservice:binder { call transfer };
allow s_system_app jackservice:fd use;
allow s_system_app kernel:process setsched;
allow s_system_app kernel:system module_request;
allow s_system_app kernel:system syslog_read;
allow s_system_app keychain_data_file:dir { open getattr read search ioctl };
allow s_system_app keychain_data_file:file { getattr open read ioctl lock };
allow s_system_app keystore:keystore_key { test get insert delete exist saw reset password lock unlock zero sign verify grant duplicate clear_uid };
allow s_system_app kiesexe:process signal;
allow s_system_app knox_clipboard_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow s_system_app knox_clipboard_file:file { { getattr open read ioctl lock } { open append write } };
allow s_system_app knox_dar_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app knox_kap_device:chr_file { getattr open read ioctl lock };
allow s_system_app knox_kap_prop:property_service set;
allow s_system_app log_device:chr_file read;
allow s_system_app logd_prop:property_service set;
allow s_system_app logd_socket:sock_file write;
allow s_system_app logd:unix_stream_socket connectto;
allow s_system_app log_prop:property_service set;
allow s_system_app logwrapper:unix_dgram_socket sendto;
allow s_system_app mediaserver:unix_stream_socket connectto;
allow s_system_app misc_user_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app misc_user_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app mm-pp-daemon:unix_stream_socket connectto;
allow s_system_app mm-pp-daemon:unix_stream_socket connectto;
allow s_system_app mobexdaemon:unix_stream_socket connectto;
allow s_system_app mobicoredaemon:unix_stream_socket connectto;
allow s_system_app mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app mpctl_socket:dir { open getattr read search ioctl };
allow s_system_app mpctl_socket:sock_file write;
allow s_system_app mpctl_socket:sock_file write;
allow s_system_app mpctl_socket:sock_file write;
allow s_system_app mpctl_socket:sock_file write;
allow s_system_app mpdecision:unix_dgram_socket sendto;
allow s_system_app mpdecision:unix_stream_socket connectto;
allow s_system_app mpdecision:unix_stream_socket connectto;
allow s_system_app msockets_socket:sock_file { open append write };
allow s_system_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app mtp_socket:sock_file { open append write };
allow s_system_app netd:unix_stream_socket connectto;
allow s_system_app net_radio_prop:property_service set;
allow s_system_app newAttr54:dir { open getattr read search ioctl };
allow s_system_app newAttr54:{ file lnk_file } { getattr open read ioctl lock };
allow s_system_app newAttr57:dir { open getattr read search ioctl };
allow s_system_app newAttr57:{ file lnk_file } { getattr open read ioctl lock };
allow s_system_app node:{ tcp_socket udp_socket } node_bind;
allow s_system_app null_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app oneseg_mw:binder transfer;
allow s_system_app otadm_efs_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow s_system_app otadm_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow s_system_app ovr_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app padblk_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app paramblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app perfd:unix_dgram_socket sendto;
allow s_system_app perfd:unix_stream_socket connectto;
allow s_system_app platform_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app platform_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app port:tcp_socket { name_bind name_connect };
allow s_system_app port:udp_socket name_bind;
allow s_system_app pps_socket:sock_file { open append write };
allow s_system_app pps_socket:sock_file write;
allow s_system_app proc_avc_msg:file { getattr open read ioctl lock };
allow s_system_app proc:file { open append };
allow s_system_app proc:file { open append write };
allow s_system_app proc_net:file write;
allow s_system_app property_socket:sock_file write;
allow s_system_app property_socket:sock_file write;
allow s_system_app prov_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app prov_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app qmuxd:unix_stream_socket connectto;
allow s_system_app qmux_radio_socket:dir { write add_name };
allow s_system_app qmux_radio_socket:sock_file { write create setattr };
allow s_system_app qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app qseecomd:unix_dgram_socket sendto;
allow s_system_app radio_data_file:file { getattr open read ioctl lock };
allow s_system_app rild:tun_socket relabelfrom;
allow s_system_app s5p_smem_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app samsung_app:lnk_file { getattr open read ioctl lock };
allow s_system_app sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app sec_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app seclevel_prop:property_service set;
allow s_system_app seclevel_prop:property_service set;
allow s_system_app secstarter:unix_dgram_socket sendto;
allow s_system_app secure_storage_device:dir { open getattr read search ioctl };
allow s_system_app secure_storage_device:sock_file { open append write };
allow s_system_app secure_storage:unix_stream_socket connectto;
allow s_system_app security_file:dir { open getattr read search ioctl };
allow s_system_app security_file:file { getattr open read ioctl lock };
allow s_system_app security_spota_file:dir { open getattr read search ioctl };
allow s_system_app security_spota_file:file { getattr open read ioctl lock };
allow s_system_app seemp_file:dir { open getattr read search ioctl };
allow s_system_app seemp_file:{ file fifo_file } { { getattr open read ioctl lock } { open append write } };
allow s_system_app self:capability { setuid setgid net_raw chown sys_ptrace sys_module setgid net_admin dac_override };
allow s_system_app self:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app self:netlink_kobject_uevent_socket *;
allow s_system_app self:netlink_kobject_uevent_socket { read create getattr setattr lock relabelfrom relabelto bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind };
allow s_system_app self:netlink_route_socket *;
allow s_system_app self:netlink_socket *;
allow s_system_app self:packet_socket { write bind create read setopt };
allow s_system_app self:tun_socket create;
allow s_system_app self:{ udp_socket tcp_socket rawip_socket } *;
allow s_system_app selinuxfs:dir { open getattr read search ioctl };
allow s_system_app selinuxfs:file { getattr open read ioctl lock };
allow s_system_app sensor_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app sensorhubservice:binder { call transfer };
allow s_system_app sensorhubservice:fd use;
allow s_system_app sensorhubservice:fifo_file { getattr open read ioctl lock };
allow s_system_app shell_data_file:dir { open getattr read search ioctl };
allow s_system_app shell_data_file:file { open append write };
allow s_system_app shell_data_file:file { open write };
allow s_system_app shell_exec:file { getattr execute execute_no_trans };
allow s_system_app shell_prop:property_service set;
allow s_system_app socket_device:dir { open search write add_name remove_name };
allow s_system_app socket_device:sock_file { create setattr { getattr open read ioctl lock } append { getattr link unlink rename } };
allow s_system_app socket_device:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app socket_device:sock_file write;
allow s_system_app sprintitson_file:dir { open getattr read search ioctl };
allow s_system_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow s_system_app store_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app store_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app su_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow s_system_app su_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow s_system_app syscope_app:process signal;
allow s_system_app syscope_app:process signal;
allow s_system_app sysfs_devices_system_cpu:file { { getattr open read ioctl lock } { open append write } };
allow s_system_app sysfs_exynos_writable:file { open append write };
allow s_system_app sysfs_lcd_writable:file { open append write };
allow s_system_app sysfs_mst_writable:file { { getattr open read ioctl lock } { open append write } };
allow s_system_app sysfs_mst_writable:file { { getattr open read ioctl lock } { open append write } };
allow s_system_app sysfs_sec:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow s_system_app sysfs_sec:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow s_system_app sysfs_sensor_writable:file { { getattr open read ioctl lock } { open append write } };
allow s_system_app sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow s_system_app system_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app system_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app system_app_data_file:file { getattr execute execute_no_trans };
allow s_system_app system_app_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app system_app_service:service_manager add;
allow s_system_app system_app_tmpfs:file execute;
allow s_system_app system_app_tmpfs:file { open append write };
allow s_system_app system_app_tmpfs:file { read write };
allow s_system_app system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app system_data_file:fifo_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app system_data_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow s_system_app system_data_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow s_system_app system_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app system_fifo:fifo_file { open append write };
allow s_system_app system_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app system_file:file { getattr execute execute_no_trans };
allow s_system_app system_file:file { getattr open read ioctl lock };
allow s_system_app system_file:file setattr;
allow s_system_app system_file:lnk_file { getattr execute };
allow s_system_app system_prop:property_service set;
allow s_system_app system_prop:property_service set;
allow s_system_app system_radio_prop:property_service set;
allow s_system_app system_server:unix_dgram_socket sendto;
allow s_system_app system:tcp_socket { getattr getopt };
allow s_system_app system:tcp_socket { read write };
allow s_system_app system:unix_stream_socket connectto;
allow s_system_app tee:unix_dgram_socket sendto;
allow s_system_app tima_dump_exec:file { getattr execute execute_no_trans };
allow s_system_app time_daemon:unix_stream_socket connectto;
allow s_system_app tmpfs:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow s_system_app tmpfs:file { { getattr open read ioctl lock } { open append write } };
allow s_system_app tombstone_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app tombstone_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app tui_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app tzic_device:chr_file { getattr open read ioctl lock };
allow s_system_app uhid_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app unlabeled:file write;
allow s_system_app untrusteddomain:lnk_file { { getattr link unlink rename } { getattr open read ioctl lock } };
allow s_system_app url_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow s_system_app users_system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app users_system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app usf_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow s_system_app usf_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app usf_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app usf_data_file:sock_file write;
allow s_system_app usf_prop:property_service set;
allow s_system_app usf:unix_stream_socket connectto;
allow s_system_app validity_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow s_system_app validity_device:{ fifo_file chr_file } { { getattr open read ioctl lock } { open append write } };
allow s_system_app validity_device:file { getattr open read ioctl lock };
allow s_system_app vcsFPService:process signull;
allow s_system_app vold:unix_stream_socket connectto;
allow s_system_app vpnclientd_socket:sock_file write;
allow s_system_app vpnclientd:unix_stream_socket connectto;
allow s_system_app wallpaper_file:file { getattr open read ioctl lock };
allow s_system_app wfdservice:binder { call transfer };
allow s_system_app wfdservice:binder transfer;
allow s_system_app wfdservice:fd use;
allow s_system_app wifi_data_file:dir { open getattr read search ioctl };
allow s_system_app wifi_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow s_system_app wifi_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app wifi_data_file:file { getattr open read ioctl lock };
allow s_system_app wifi_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app wifi_data_file:sock_file { getattr open read ioctl lock };
allow s_system_app wifi_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow s_system_app wifi_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow s_system_app wpa_socket:sock_file { open append write };
allow s_system_app wpa:unix_dgram_socket sendto;
allow s_system_app writingbuddymanager_service:service_manager add;
allow s_system_app zygote:binder { call transfer };
allow s_system_app zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow s_system_app zygote:fd use;
allow store_app store_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow store_app store_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow store_app store_app_tmpfs:file execute;
allow store_app store_app_tmpfs:file { read write };
allow subsystem_ramdump init:process sigchld;
allow subsystem_ramdump subsystem_ramdump_exec:file { entrypoint open read execute getattr };
allow subsystem_ramdump subsystem_ramdump_tmpfs:file { read write };
allow su domain:binder transfer;
allow su dumpstate:process sigchld;
allow surfaceflinger adbd:binder { call transfer };
allow surfaceflinger adbd:binder { call transfer };
allow surfaceflinger adbd:binder transfer;
allow surfaceflinger adbd:fd use;
allow surfaceflinger adbd:fd use;
allow surfaceflinger app_data_file:file { open append write };
allow surfaceflinger app_data_file:file { read write };
allow surfaceflinger appdomain:binder { call transfer };
allow surfaceflinger appdomain:binder transfer;
allow surfaceflinger appdomain:dir { open getattr read search ioctl };
allow surfaceflinger appdomain:fd use;
allow surfaceflinger appdomain:fd use;
allow surfaceflinger appdomain:{ file lnk_file } { getattr open read ioctl lock };
allow surfaceflinger binderservicedomain:binder { call transfer };
allow surfaceflinger binderservicedomain:dir { open getattr read search ioctl };
allow surfaceflinger binderservicedomain:fd use;
allow surfaceflinger binderservicedomain:{ file lnk_file } { getattr open read ioctl lock };
allow surfaceflinger bintvoutservice:binder { call transfer };
allow surfaceflinger bintvoutservice:binder transfer;
allow surfaceflinger bintvoutservice:fd use;
allow surfaceflinger bintvoutservice:file { getattr open read ioctl lock };
allow surfaceflinger bluetooth:binder { call transfer };
allow surfaceflinger bluetooth:fd use;
allow surfaceflinger bluetooth:fd use;
allow surfaceflinger bootanim:binder { call transfer };
allow surfaceflinger bootanim:binder transfer;
allow surfaceflinger bootanim:binder transfer;
allow surfaceflinger bootanim:fd use;
allow surfaceflinger bootanim:fd use;
allow surfaceflinger bootanim:fd use;
allow surfaceflinger bugreport:dir { open getattr read search ioctl };
allow surfaceflinger bugreport_exec:file { execute execute_no_trans };
allow surfaceflinger bugreport:file { getattr open read ioctl lock };
allow surfaceflinger cache_file:file write;
allow surfaceflinger camera_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger containerdomain:binder { call transfer };
allow surfaceflinger containerdomain:fd use;
allow surfaceflinger containerdomain:fd use;
allow surfaceflinger ctl_bootanim_prop:property_service set;
allow surfaceflinger ctl_default_prop:property_service set;
allow surfaceflinger debugfs:file { getattr open read ioctl lock };
allow surfaceflinger debug_prop:property_service set;
allow surfaceflinger devpts:chr_file { read write };
allow surfaceflinger display_misc_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow surfaceflinger display_misc_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow surfaceflinger domain:dir { getattr search };
allow surfaceflinger domain:lnk_file read;
allow surfaceflinger dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow surfaceflinger dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow surfaceflinger dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow surfaceflinger dumpstate:binder { call transfer };
allow surfaceflinger dumpstate:binder transfer;
allow surfaceflinger dumpstate:dir { open getattr read search ioctl };
allow surfaceflinger dumpstate:dir { open getattr read search ioctl };
allow surfaceflinger dumpstate_exec:file { execute execute_no_trans };
allow surfaceflinger dumpstate:fd use;
allow surfaceflinger dumpstate:file { getattr open read ioctl lock };
allow surfaceflinger dumpstate:{ file lnk_file } { getattr open read ioctl lock };
allow surfaceflinger dumpsys:binder transfer;
allow surfaceflinger dumpsys:dir { open getattr read search ioctl };
allow surfaceflinger dumpsys_exec:file { execute execute_no_trans };
allow surfaceflinger dumpsys:file { getattr open read ioctl lock };
allow surfaceflinger fixmo_app:binder { call transfer };
allow surfaceflinger fixmo_app:binder transfer;
allow surfaceflinger fixmo_app:fd use;
allow surfaceflinger gad_untrusted_app_data_file:file { open append write };
allow surfaceflinger gad_untrusted_app_data_file:file { read write };
allow surfaceflinger good_app:binder { call transfer };
allow surfaceflinger good_app:binder transfer;
allow surfaceflinger good_app:fd use;
allow surfaceflinger gpu_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger graphics_device:dir search;
allow surfaceflinger hpd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger hpd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger hpd_device:sock_file { getattr open read ioctl lock };
allow surfaceflinger i2c_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger init:dir { open getattr read search ioctl };
allow surfaceflinger init:file { getattr open read ioctl lock };
allow surfaceflinger init:process sigchld;
allow surfaceflinger init:unix_stream_socket connectto;
allow surfaceflinger init:unix_stream_socket connectto;
allow surfaceflinger init:unix_stream_socket { read write };
allow surfaceflinger isolated_app_tmpfs:file write;
allow surfaceflinger kgsl_device:chr_file { { { getattr open read ioctl lock } { open append write } } execute };
allow surfaceflinger location:binder { call transfer };
allow surfaceflinger location:fd use;
allow surfaceflinger m2m1shot_device:chr_file write;
allow surfaceflinger media_rw_data_file:file { open append write };
allow surfaceflinger mediaserver:binder { call transfer };
allow surfaceflinger mediaserver:dir { open getattr read search ioctl };
allow surfaceflinger mediaserver:fd use;
allow surfaceflinger mediaserver:fd use;
allow surfaceflinger mediaserver:file { getattr open read ioctl lock };
allow surfaceflinger mm-pp-daemon:binder transfer;
allow surfaceflinger mm-pp-daemon:dir { open getattr read search ioctl };
allow surfaceflinger mm-pp-daemon:{ file lnk_file } { getattr open read ioctl lock };
allow surfaceflinger mobexdaemon:file { getattr open read ioctl lock };
allow surfaceflinger mobicoredaemon:unix_stream_socket connectto;
allow surfaceflinger mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger mpctl_socket:dir { open getattr read search ioctl };
allow surfaceflinger mpctl_socket:sock_file write;
allow surfaceflinger mpctl_socket:sock_file write;
allow surfaceflinger newAttr33:dir { open getattr read search ioctl };
allow surfaceflinger newAttr33:{ file lnk_file } { getattr open read ioctl lock };
allow surfaceflinger newAttr59:dir { open getattr read search ioctl };
allow surfaceflinger newAttr59:{ file lnk_file } { getattr open read ioctl lock };
allow surfaceflinger nfc:binder { call transfer };
allow surfaceflinger nfc:fd use;
allow surfaceflinger nfc:fd use;
allow surfaceflinger oneseg_mw:binder transfer;
allow surfaceflinger perfd:unix_dgram_socket sendto;
allow surfaceflinger perfd:unix_stream_socket connectto;
allow surfaceflinger platform_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger property_socket:sock_file write;
allow surfaceflinger radio:binder { call transfer };
allow surfaceflinger radio:dir { open getattr read search ioctl };
allow surfaceflinger radio:fd use;
allow surfaceflinger radio:fd use;
allow surfaceflinger radio:file { getattr open read ioctl lock };
allow surfaceflinger s5p_smem_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger self:capability { dac_read_search sys_resource dac_override };
allow surfaceflinger self:netlink_kobject_uevent_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow surfaceflinger self:tcp_socket create;
allow surfaceflinger self:unix_stream_socket write;
allow surfaceflinger servicemanager:binder { call transfer };
allow surfaceflinger servicemanager:binder { call transfer };
allow surfaceflinger servicemanager:fd use;
allow surfaceflinger servicemanager:file { getattr open read ioctl lock };
allow surfaceflinger shell:binder { call transfer };
allow surfaceflinger shell_data_file:dir { open getattr read search ioctl };
allow surfaceflinger shell_data_file:dir search;
allow surfaceflinger shell:dir search;
allow surfaceflinger shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow surfaceflinger shell:fd use;
allow surfaceflinger shell:file { getattr open read ioctl lock };
allow surfaceflinger shell_prop:property_service set;
allow surfaceflinger s_system_app:dir { open getattr read search ioctl };
allow surfaceflinger s_system_app:fifo_file { open append write };
allow surfaceflinger s_system_app:file { getattr open read ioctl lock };
allow surfaceflinger surfaceflinger_exec:file { entrypoint open read execute getattr };
allow surfaceflinger surfaceflinger_service:service_manager add;
allow surfaceflinger surfaceflinger_tmpfs:file { read write };
allow surfaceflinger sysfs:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger sysfs:file write;
allow surfaceflinger sysfs:file write;
allow surfaceflinger sysfs_graphics:file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger sysfs_graphics:file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger sysfs_graphics:file write;
allow surfaceflinger sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger system_app:dir { open getattr read search ioctl };
allow surfaceflinger system_app:fifo_file { open append write };
allow surfaceflinger system_app:file { getattr open read ioctl lock };
allow surfaceflinger system:binder { call transfer };
allow surfaceflinger system_data_file:file { getattr open read ioctl lock };
allow surfaceflinger system_data_file:file { open append write };
allow surfaceflinger system:fd use;
allow surfaceflinger system:fd use;
allow surfaceflinger system_file:file { getattr execute execute_no_trans };
allow surfaceflinger system_prop:property_service set;
allow { surfaceflinger system_server } newAttr73:dir { open getattr read search ioctl };
allow { surfaceflinger system_server } newAttr73:{ file lnk_file sock_file fifo_file } { getattr open read ioctl lock };
allow { surfaceflinger system_server } newAttr83 : { { chr_file blk_file } { file lnk_file sock_file fifo_file } } { { getattr open read ioctl lock } { open append write } };
allow { surfaceflinger system_server } newAttr83 : dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow surfaceflinger tee:binder { call transfer };
allow surfaceflinger tee:binder transfer;
allow surfaceflinger tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger tee:fd use;
allow surfaceflinger tee:unix_stream_socket connectto;
allow surfaceflinger tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger ump_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger ump_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger untrusted_app_tmpfs:file { open append write };
allow surfaceflinger untrusteddomain:dir { open getattr read search ioctl };
allow surfaceflinger untrusteddomain:file { getattr open read ioctl lock };
allow surfaceflinger video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow surfaceflinger video_device:dir { open getattr read search ioctl };
allow surfaceflinger vold:dir search;
allow surfaceflinger wfdservice:binder { call transfer };
allow surfaceflinger wfdservice:binder transfer;
allow surfaceflinger wfdservice:fd use;
allow surfaceflinger zygote:binder { call transfer };
allow surfaceflinger zygote:binder transfer;
allow surfaceflinger zygote:fd use;
allow su shell:process sigchld;
allow su su_exec:file { entrypoint open read execute getattr };
allow su su_exec:file { entrypoint open read execute getattr };
allow su su_tmpfs:file execute;
allow su su_tmpfs:file { read write };
allow syscope_app anr_data_file:dir { open search write add_name remove_name };
allow syscope_app anr_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow syscope_app at_distributor:binder transfer;
allow syscope_app block_device:blk_file { open append write };
allow syscope_app block_device:dir { open getattr read search ioctl };
allow syscope_app block_device:lnk_file { getattr open read ioctl lock };
allow syscope_app block_device:lnk_file { getattr open read ioctl lock };
allow syscope_app bugreport_exec:file { execute execute_no_trans };
allow syscope_app domain:dir { open getattr read search ioctl };
allow syscope_app domain:{ file lnk_file } { getattr open read ioctl lock };
allow syscope_app dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow syscope_app dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow syscope_app dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow syscope_app dumpstate_exec:file { execute execute_no_trans };
allow syscope_app dumpsys_exec:file { execute execute_no_trans };
allow syscope_app emmcblk_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow syscope_app emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow syscope_app init:binder call;
allow syscope_app init:unix_stream_socket connectto;
allow syscope_app newAttr54:dir { open getattr read search ioctl };
allow syscope_app newAttr54:{ file lnk_file } { getattr open read ioctl lock };
allow syscope_app padblk_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow syscope_app paramblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow syscope_app persistblk_device:blk_file { open append write };
allow syscope_app property_socket:sock_file write;
allow syscope_app sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow syscope_app sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow syscope_app servicemanager:binder { call transfer };
allow syscope_app servicemanager:fd use;
allow syscope_app syscope_app_tmpfs:file execute;
allow syscope_app syscope_app_tmpfs:file { read write };
allow syscope_app sysrq_proc:file { getattr execute execute_no_trans };
allow syscope_app sysrq_proc:file { getattr open read ioctl lock };
allow syscope_app system_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow syscope_app system_app_data_file:{ file fifo_file lnk_file sock_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow syscope_app system_app_data_file:file { getattr execute execute_no_trans };
allow syscope_app system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow syscope_app system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow syscope_app system_prop:property_service set;
allow syscope_app system_sysscope_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow syscope_app system_sysscope_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sysfs tmpfs:filesystem associate;
allow sysfs_type sysfs:filesystem associate;
allow sysmon init:dir { open getattr read search ioctl };
allow sysmon init:file { getattr open read ioctl lock };
allow sysmon init:process sigchld;
allow sysmon kernel:dir { open getattr read search ioctl };
allow sysmon kernel:file { getattr open read ioctl lock };
allow sysmon kernel:system syslog_read;
allow sysmon self:capability2 syslog;
allow sysmon self:capability { fowner chown fsetid dac_override sys_admin };
allow sysmon sysmon_exec:file { entrypoint open read execute getattr };
allow sysmon sysmon_tmpfs:file { read write };
allow sysprof event_log_tags_file:file { getattr open read ioctl lock };
allow sysprof init:process sigchld;
allow sysprof log_device:chr_file { getattr open read ioctl lock };
allow sysprof newAttr33:dir { open getattr read search ioctl };
allow sysprof newAttr33:{ file lnk_file } { getattr open read ioctl lock };
allow sysprof self:capability2 syslog;
allow sysprof self:capability dac_override;
allow sysprof shell_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow sysprof shell_data_file:{ file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow sysprof sysprof_exec:file { entrypoint open read execute getattr };
allow sysprof sysprof_tmpfs:file { read write };
allow system adbd:binder transfer;
allow system_app alarm_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app anr_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app anr_data_file:dir { { open getattr read search ioctl } add_name write };
allow system_app anr_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app anr_data_file:file { getattr link unlink rename };
allow system_app apk_data_file:dir { open getattr read search ioctl };
allow system_app app_data_file:file { execute execmod };
allow system_app appdomain:binder { call transfer };
allow system_app appdomain:fd use;
allow system_app app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app app_library_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app asec_apk_file:dir search;
allow system_app asec_apk_file:file { getattr open read ioctl lock };
allow system_app asec_apk_file:file { getattr open read ioctl lock };
allow system_app asec_image_file:dir { open getattr read search ioctl };
allow system_app at_distributor:binder transfer;
allow system_app at_distributor:unix_stream_socket connectto;
allow system_app atfwd:binder transfer;
allow system_app ATFWD-daemon:blk_file { getattr open read ioctl lock };
allow system_app atfwd_service:service_manager add;
allow system_app audit_log:file { open append write };
allow system_app backup_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app backup_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app bauthserver:binder transfer;
allow system_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow system_app bbccontainer_app_data_backend:lnk_file { getattr open read ioctl lock };
allow system_app bintvoutservice:binder { call transfer };
allow system_app bintvoutservice:fd use;
allow system_app block_device:blk_file { getattr ioctl lock append };
allow system_app block_device:lnk_file { getattr open read ioctl lock };
allow system_app bluetooth:binder transfer;
allow system_app bluetooth:unix_stream_socket ioctl;
allow system_app bugreport_exec:file { execute execute_no_trans };
allow system_app cache_backup_file:file { getattr link unlink rename };
allow system_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app carrier_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app carrier_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app carrier_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app carrier_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app cgroup:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app cnd_data_file:dir { open search write add_name remove_name };
allow system_app cnd_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app cne_service:service_manager add;
allow system_app color_service:service_manager add;
allow system_app connfwexe:unix_stream_socket connectto;
allow system_app container_app_data_backend:dir { open getattr read search ioctl };
allow system_app container_app_data_backend:lnk_file { getattr open read ioctl lock };
allow system_app container_app:dir { open getattr read search ioctl };
allow system_app containerdomain:binder { call transfer };
allow system_app containerdomain:fd use;
allow system_app container_system_file:dir getattr;
allow system_app cpk_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app cpk_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app csc_prop:property_service set;
allow system_app cs_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_app cs_socket:sock_file write;
allow system_app cs:unix_stream_socket connectto;
allow system_app cs:unix_stream_socket connectto;
allow system_app ctl_bugreport_prop:property_service set;
allow system_app ctl_default_prop:property_service set;
allow system_app ctl_default_prop:property_service set;
allow system_app ctl_dumpstate_prop:property_service set;
allow system_app debugfs:file { getattr open read ioctl lock };
allow system_app debug_prop:property_service set;
allow system_app device:file { getattr open read ioctl lock };
allow system_app device:sock_file write;
allow system_app device:sock_file write;
allow system_app dhcp_data_file:file { getattr open read ioctl lock };
allow system_app dhcp_exec:file { getattr execute execute_no_trans };
allow system_app dhcp_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow system_app diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app diagexe:unix_stream_socket connectto;
allow system_app dnsproxyd_socket:sock_file { open append write };
allow system appdomain:binder transfer;
allow system_app downfilters_lib_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app downfilters_lib_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app dpmservice:service_manager add;
allow system_app drm_data_file:dir { { open getattr read search ioctl } add_name remove_name };
allow system_app drm_data_file:file { getattr open read ioctl lock };
allow system_app drm_playready_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_app drm_playready_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app drm_security_system_file:dir { open getattr read search ioctl };
allow system_app dts_data_file:dir { open getattr read search ioctl };
allow system_app dts_data_file:file { getattr open read ioctl lock };
allow system_app dtseagleservice:binder { call transfer };
allow system_app dtseagleservice:binder transfer;
allow system_app dtseagleservice:fd use;
allow system_app dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app dumpstate:binder transfer;
allow system_app dumpstate_exec:file { execute execute_no_trans };
allow system_app dumpstate_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_app dumpsys:binder transfer;
allow system_app dumpsys_exec:file { execute execute_no_trans };
allow system_app dun_service:service_manager add;
allow system_app dw_mmc_device:dir { open getattr read search ioctl };
allow system_app dw_mmc_device:file { { getattr open read ioctl lock } { open append write } };
allow system_app ecryptfs:filesystem getattr;
allow system_app efs_file:file { create setattr open ioctl lock append getattr link unlink rename };
allow system_app epmd:unix_stream_socket connectto;
allow system_app epm_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_app epm_socket:sock_file write;
allow system_app fidodaemon:binder { call transfer };
allow system_app fidodaemon:binder transfer;
allow system_app fidodaemon:fd use;
allow system_app firmware:dir { open getattr read search ioctl };
allow system_app firmware:file { getattr open read ioctl lock };
allow system_app firmware:{ file lnk_file } { getattr open read ioctl lock };
allow system_app fixmo_app:binder { call transfer };
allow system_app fixmo_app:binder transfer;
allow system_app fixmo_app:fd use;
allow system_app fm_radio_device:chr_file { read open ioctl };
allow system_app gad_untrusted_app_data_file:file { execute execmod };
allow system_app good_app:binder { call transfer };
allow system_app good_app:binder transfer;
allow system_app good_app:fd use;
allow system_app gps_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app gps_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app healthd:binder { call transfer };
allow system_app healthd:fd use;
allow system_app hidden_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app hidden_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app icd_device:chr_file { getattr open read ioctl lock };
allow system_app icd_exec:file { getattr open read ioctl lock };
allow system_app ims_service:service_manager add;
allow system_app init:process signull;
allow system_app init:unix_dgram_socket sendto;
allow system_app init:unix_stream_socket connectto;
allow system_app init:unix_stream_socket connectto;
allow system_app init:unix_stream_socket setopt;
allow system_app input_device:chr_file { read write ioctl open };
allow system_app IPSecService:unix_stream_socket connectto;
allow system_app ipsec_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_app irm_media_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app irm_media_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app iss_efs_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_app iss_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow system_app jackservice:binder { call transfer };
allow system_app jackservice:fd use;
allow system_app kernel:process setsched;
allow system_app kernel:system module_request;
allow system_app kernel:system syslog_read;
allow system_app keychain_data_file:dir { open getattr read search ioctl };
allow system_app keychain_data_file:file { getattr open read ioctl lock };
allow system_app keystore:keystore_key { test get insert delete exist saw reset password lock unlock zero sign verify grant duplicate clear_uid };
allow system_app knox_clipboard_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_app knox_clipboard_file:file { { getattr open read ioctl lock } { open append write } };
allow system_app knox_dar_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app knox_kap_device:chr_file { getattr open read ioctl lock };
allow system_app knox_kap_prop:property_service set;
allow system_app log_device:chr_file read;
allow system_app logd_prop:property_service set;
allow system_app logd_socket:sock_file write;
allow system_app logd:unix_stream_socket connectto;
allow system_app log_prop:property_service set;
allow system_app logwrapper:unix_dgram_socket sendto;
allow system_app mediaserver:unix_stream_socket connectto;
allow system_app misc_user_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app misc_user_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app mm-pp-daemon:unix_stream_socket connectto;
allow system_app mm-pp-daemon:unix_stream_socket connectto;
allow system_app mobexdaemon:unix_stream_socket connectto;
allow system_app mobicoredaemon:unix_stream_socket connectto;
allow system_app mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app mpctl_socket:dir { open getattr read search ioctl };
allow system_app mpctl_socket:sock_file write;
allow system_app mpctl_socket:sock_file write;
allow system_app mpctl_socket:sock_file write;
allow system_app mpctl_socket:sock_file write;
allow system_app mpdecision:unix_dgram_socket sendto;
allow system_app mpdecision:unix_stream_socket connectto;
allow system_app mpdecision:unix_stream_socket connectto;
allow system_app msockets_socket:sock_file { open append write };
allow system_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app mtp_socket:sock_file { open append write };
allow system_app netd:unix_stream_socket connectto;
allow system_app net_radio_prop:property_service set;
allow system_app newAttr54:dir { open getattr read search ioctl };
allow system_app newAttr54:{ file lnk_file } { getattr open read ioctl lock };
allow system_app node:{ tcp_socket udp_socket } node_bind;
allow system_app null_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app oneseg_mw:binder transfer;
allow system_app otadm_efs_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_app otadm_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow system_app ovr_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app perfd:unix_dgram_socket sendto;
allow system_app perfd:unix_stream_socket connectto;
allow system_app platform_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app platform_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app port:tcp_socket { name_bind name_connect };
allow system_app port:udp_socket name_bind;
allow system_app pps_socket:sock_file { open append write };
allow system_app pps_socket:sock_file write;
allow system_app proc_avc_msg:file { getattr open read ioctl lock };
allow system_app proc:file { open append };
allow system_app proc_net:file write;
allow system_app property_socket:sock_file write;
allow system_app property_socket:sock_file write;
allow system_app prov_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app prov_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app qmuxd:unix_stream_socket connectto;
allow system_app qmux_radio_socket:dir { write add_name };
allow system_app qmux_radio_socket:sock_file { write create setattr };
allow system_app qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app qseecomd:unix_dgram_socket sendto;
allow system_app radio_data_file:file { getattr open read ioctl lock };
allow system_app s5p_smem_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app samsung_app:lnk_file { getattr open read ioctl lock };
allow system_app sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app sec_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app seclevel_prop:property_service set;
allow system_app seclevel_prop:property_service set;
allow system_app secstarter:unix_dgram_socket sendto;
allow system_app secure_storage_device:dir { open getattr read search ioctl };
allow system_app secure_storage_device:sock_file { open append write };
allow system_app secure_storage:unix_stream_socket connectto;
allow system_app security_file:dir { open getattr read search ioctl };
allow system_app security_file:file { getattr open read ioctl lock };
allow system_app security_spota_file:dir { open getattr read search ioctl };
allow system_app security_spota_file:file { getattr open read ioctl lock };
allow system_app seemp_file:dir { open getattr read search ioctl };
allow system_app seemp_file:{ file fifo_file } { { getattr open read ioctl lock } { open append write } };
allow system_app self:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app self:netlink_kobject_uevent_socket { read create getattr setattr lock relabelfrom relabelto bind connect listen accept getopt setopt shutdown recvfrom sendto recv_msg send_msg name_bind };
allow system_app self:netlink_route_socket *;
allow system_app self:packet_socket { write bind create read setopt };
allow system_app self:tun_socket create;
allow system_app self:{ udp_socket tcp_socket rawip_socket } *;
allow system_app selinuxfs:dir { open getattr read search ioctl };
allow system_app selinuxfs:file { getattr open read ioctl lock };
allow system_app sensor_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app sensorhubservice:binder { call transfer };
allow system_app sensorhubservice:fd use;
allow system_app sensorhubservice:fifo_file { getattr open read ioctl lock };
allow system_app shell_data_file:dir { open getattr read search ioctl };
allow system_app shell_data_file:file { open write };
allow system_app shell_exec:file { getattr execute execute_no_trans };
allow system_app shell_prop:property_service set;
allow system_app socket_device:dir { open search write add_name remove_name };
allow system_app socket_device:sock_file { create setattr { getattr open read ioctl lock } append { getattr link unlink rename } };
allow system_app sprintitson_file:dir { open getattr read search ioctl };
allow system_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow system_app store_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app store_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app su_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow system_app su_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow system_app syscope_app:process signal;
allow system_app syscope_app:process signal;
allow system_app sysfs_devices_system_cpu:file { { getattr open read ioctl lock } { open append write } };
allow system_app sysfs_exynos_writable:file { open append write };
allow system_app sysfs_lcd_writable:file { open append write };
allow system_app sysfs_mst_writable:file { { getattr open read ioctl lock } { open append write } };
allow system_app sysfs_mst_writable:file { { getattr open read ioctl lock } { open append write } };
allow system_app sysfs_sec:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_app sysfs_sec:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow system_app sysfs_sensor_writable:file { { getattr open read ioctl lock } { open append write } };
allow system_app sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow system_app system_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app system_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app system_app_data_file:file { getattr execute execute_no_trans };
allow system_app system_app_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app system_app_service:service_manager add;
allow system_app system_app_tmpfs:file execute;
allow system_app system_app_tmpfs:file { open append write };
allow system_app system_app_tmpfs:file { read write };
allow system_app system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app system_data_file:fifo_file { { getattr open read ioctl lock } { open append write } };
allow system_app system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app system_data_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow system_app system_data_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow system_app system_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app system_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app system_fifo:fifo_file { open append write };
allow system_app system_file:file { getattr execute execute_no_trans };
allow system_app system_file:file { getattr open read ioctl lock };
allow system_app system_file:lnk_file { getattr execute };
allow system_app system_prop:property_service set;
allow system_app system_prop:property_service set;
allow system_app system_radio_prop:property_service set;
allow system_app system_server:unix_dgram_socket sendto;
allow system_app system:tcp_socket { getattr getopt };
allow system_app system:tcp_socket { read write };
allow system_app system:unix_stream_socket connectto;
allow system_app tee:unix_dgram_socket sendto;
allow system_app tima_dump_exec:file { getattr execute execute_no_trans };
allow system_app time_daemon:unix_stream_socket connectto;
allow system_app tmpfs:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_app tmpfs:file { { getattr open read ioctl lock } { open append write } };
allow system_app tombstone_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app tombstone_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app tui_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app tzic_device:chr_file { getattr open read ioctl lock };
allow system_app uhid_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app unlabeled:file write;
allow system_app untrusteddomain:lnk_file { { getattr link unlink rename } { getattr open read ioctl lock } };
allow system_app url_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_app users_system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app users_system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app usf_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_app usf_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app usf_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app usf_data_file:sock_file write;
allow system_app usf_prop:property_service set;
allow system_app usf:unix_stream_socket connectto;
allow system_app validity_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_app validity_device:{ fifo_file chr_file } { { getattr open read ioctl lock } { open append write } };
allow system_app validity_device:file { getattr open read ioctl lock };
allow system_app vcsFPService:process signull;
allow system_app vold:unix_stream_socket connectto;
allow system_app vpnclientd_socket:sock_file write;
allow system_app vpnclientd:unix_stream_socket connectto;
allow system_app wallpaper_file:file { getattr open read ioctl lock };
allow system_app wfdservice:binder { call transfer };
allow system_app wfdservice:binder transfer;
allow system_app wfdservice:fd use;
allow system_app wifi_data_file:dir { open getattr read search ioctl };
allow system_app wifi_data_file:file { getattr open read ioctl lock };
allow system_app wifi_data_file:sock_file { getattr open read ioctl lock };
allow system_app wifi_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_app wifi_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_app wpa_socket:sock_file { open append write };
allow system_app wpa:unix_dgram_socket sendto;
allow system_app writingbuddymanager_service:service_manager add;
allow system_app zygote:binder { call transfer };
allow system_app zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow system_app zygote:fd use;
allow system bugreport_exec:file { execute execute_no_trans };
allow system connfwexe:binder transfer;
allow { system_domain device_domain } newAttr30:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow { system_domain device_domain } newAttr30:{ { file lnk_file sock_file fifo_file } chr_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow { system_domain device_domain } newAttr48:process { signal sigchld signull getsched getpgid getcap getattr };
allow { system_domain device_domain } newAttr59:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { getattr open read ioctl lock };
allow { system_domain device_domain } newAttr59:dir { open getattr read search ioctl };
allow { system_domain device_domain } newAttr74:filesystem ~{ mount remount unmount relabelfrom relabelto };
allow { system_domain device_domain } newAttr84 : { blk_file lnk_file sock_file fifo_file } { { getattr open read ioctl lock } { getattr link unlink rename } execute execmod };
allow { system_domain device_domain } newAttr84: { chr_file file } { getattr open read ioctl lock };
allow { system_domain device_domain } self:capability sys_nice;
allow { system_domain device_domain system_app s_system_app radio bluetooth } newAttr79:property_service set;
allow { system_domain device_domain trusted_app_domain } netif_type:netif *;
allow { system_domain device_domain trusted_app_domain } newAttr81 : { { chr_file blk_file } { file lnk_file sock_file fifo_file } } { getattr open read ioctl lock };
allow { system_domain device_domain trusted_app_domain } newAttr81: dir { open getattr read search ioctl };
allow { system_domain device_domain trusted_app_domain } newAttr84: dir { open getattr read search ioctl };
allow { system_domain device_domain trusted_app_domain } newAttr88 : { blk_file lnk_file sock_file fifo_file } { { getattr open read ioctl lock } execute execmod };
allow { system_domain device_domain trusted_app_domain } newAttr88 : { chr_file file } { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow { system_domain device_domain trusted_app_domain } newAttr88 : dir { open getattr read search ioctl };
allow { system_domain device_domain trusted_app_domain } node_type:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket } *;
allow { system_domain device_domain trusted_app_domain } port_type:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket } *;
allow { system_domain device_domain } { untrusteddomain shell }:process { signal sigchld signull getsched getpgid getcap getattr };
allow system_domain init:unix_stream_socket connectto;
allow system_domain newAttr48:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_domain newAttr48:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_domain newAttr48:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket } *;
allow system_domain property_socket:sock_file write;
allow { system_domain trusted_app_domain } newAttr48:key *;
allow { system_domain trusted_app_domain } newAttr48:{ sem msgq shm ipc } *;
allow { system_domain trusted_app_domain } { untrusteddomain shell }:key *;
allow { system_domain trusted_app_domain } { untrusteddomain shell }:{ sem msgq shm ipc } *;
allow system_domain { untrusteddomain shell }:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_domain { untrusteddomain shell }:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_domain { untrusteddomain shell }:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket } *;
allow system dumpstate:binder transfer;
allow system dumpstate_exec:file { execute execute_no_trans };
allow system dumpsys:binder transfer;
allow system dumpsys_exec:file { execute execute_no_trans };
allow system_fifo tmpfs:filesystem associate;
allow system fixmo_app:binder { call transfer };
allow system fixmo_app:binder transfer;
allow system fixmo_app:fd use;
allow system fixmo_app:process *;
allow system good_app:binder { call transfer };
allow system good_app:binder transfer;
allow system good_app:fd use;
allow system good_app:process *;
allow system gsiff_daemon:binder transfer;
allow system init_shell:binder transfer;
allow system kiesexe:binder transfer;
allow system mediaserver:binder transfer;
allow system rild:binder transfer;
allow system sec-ril:binder transfer;
allow system sensorhubservice:binder transfer;
allow system_server abt_pers_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server abt_pers_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server actlmand:unix_stream_socket connectto;
allow system_server actlmand:unix_stream_socket { read write };
allow system_server adbd:binder call;
allow system_server adbd:process sigchld;
allow system_server adbd_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_server adbd_socket:sock_file write;
allow system_server adb_keys_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server adb_keys_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server akm8963_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server alarm_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server anr_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server anr_data_file:dir relabelto;
allow system_server anr_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server apaservice:process setsched;
allow system_server { apk_data_file apk_private_data_file }:{ dir file } { relabelfrom relabelto };
allow system_server apk_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server apk_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server apk_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server apk_data_file:file { getattr open read ioctl lock };
allow system_server apk_data_file:sock_file unlink;
allow system_server apk_private_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server apk_private_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server apk_private_tmp_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server apk_private_tmp_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server { apk_tmp_file apk_private_tmp_file }:{ dir file } { relabelfrom relabelto };
allow system_server apk_tmp_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server apk_tmp_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server apk_tmp_file:file { { getattr open read ioctl lock } { open append write } };
allow system_server app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server app_data_file:dir relabelfrom;
allow system_server app_data_file:dir relabelfrom;
allow system_server app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server app_data_file:file execute;
allow system_server appdomain:binder { call transfer };
allow system_server appdomain:fd use;
allow system_server appdomain:fifo_file { { getattr open read ioctl lock } { open append write } };
allow system_server appdomain:fifo_file { getattr read write };
allow system_server appdomain:file write;
allow system_server appdomain:process getsched;
allow system_server appdomain:process { getsched setsched };
allow system_server appdomain:process { sigkill signal };
allow system_server appdomain:{ tcp_socket udp_socket } { getattr getopt setopt read write shutdown };
allow system_server app_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server app_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server app_efs_file:file { getattr open read ioctl lock };
allow system_server app_library_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelto relabelfrom };
allow system_server app_library_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } { getattr execute execute_no_trans } };
allow system_server asec_apk_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server asec_apk_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server asec_apk_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server asec_public_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server ashmem_device:chr_file execute;
allow system_server at_distributor:binder { call transfer };
allow system_server at_distributor:fd use;
allow system_server at_distributor:fd use;
allow system_server at_distributor:unix_stream_socket connectto;
allow system_server audio_data_file:file { { { getattr open read ioctl lock } { open append write } } { getattr execute execute_no_trans } };
allow system_server audio_device:chr_file { getattr open read ioctl lock };
allow system_server audio_device:dir { open getattr read search ioctl };
allow system_server audio_prop:property_service set;
allow system_server auditd:binder transfer;
allow system_server auditd:lnk_file { getattr open read ioctl lock };
allow system_server audit_log:dir { open search write add_name remove_name };
allow system_server audit_log:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server backup_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server backup_data_file:dir { relabelto relabelfrom };
allow system_server backup_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server bbccontainer_app_data_backend:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelto };
allow system_server bbccontainer_app_data_backend:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelto };
allow system_server binder_device:chr_file ioctl;
allow system_server binderservicedomain:binder { call transfer };
allow system_server binderservicedomain:fd use;
allow system_server bintvoutservice:binder { call transfer };
allow system_server bintvoutservice:fd use;
allow system_server block_device:dir search;
allow system_server bluetooth_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow system_server bluetooth_prop:property_service set;
allow system_server bluetooth_prop:property_service set;
allow system_server bluetooth:unix_stream_socket { getattr getopt read write shutdown };
allow system_server bt_firmware_file:dir { open getattr read search ioctl };
allow system_server bt_firmware_file:file { getattr open read ioctl lock };
allow system_server bugreport_exec:file { execute execute_no_trans };
allow system_server cache_backup_file:dir { relabelto relabelfrom { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } };
allow system_server cache_backup_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server cache_backup_file:file { relabelto relabelfrom };
allow system_server cache_file:dir { relabelfrom { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } };
allow system_server cache_file:file { relabelfrom { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } };
allow system_server camera_prop:property_service set;
allow system_server carrier_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server carrier_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server cellgeofenced:unix_stream_socket connectto;
allow system_server cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server cgroup:dir { remove_name rmdir };
allow system_server { charon_socket dumpstate_socket mtpd_socket racoon_socket }:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server { charon_socket dumpstate_socket mtpd_socket racoon_socket }:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server charon:unix_stream_socket connectto;
allow system_server charon:unix_stream_socket { read write };
allow system_server ciqbridge_device:{ chr_file file } { { getattr open read ioctl lock } { open append write } };
allow system_server ciqbridge_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server cnd_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server cnd_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server cnd_socket:sock_file write;
allow system_server cnd:unix_stream_socket connectto;
allow system_server connfwexe:binder { call transfer };
allow system_server connfwexe:fd use;
allow system_server container_app:binder { call transfer };
allow system_server container_app_data_backend:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelto };
allow system_server container_app_data_backend:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelto };
allow system_server container_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom };
allow system_server container_app_data_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelfrom };
allow system_server container_app:fd use;
allow system_server container_app:unix_stream_socket { read write };
allow system_server containerdomain:dir { open getattr read search ioctl };
allow system_server containerdomain:dir { open getattr read search ioctl };
allow system_server containerdomain:fifo_file { open append write };
allow system_server containerdomain:{ file lnk_file } { getattr open read ioctl lock };
allow system_server containerdomain:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow system_server containerdomain:process { getattr getsched setsched sigkill signal };
allow system_server containerdomain:{ tcp_socket udp_socket } { setopt read write getopt };
allow system_server container_mgmt_prop:property_service set;
allow system_server container_system_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server container_system_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server container_system_file:lnk_file { create rename unlink };
allow system_server ctl_bugreport_prop:property_service set;
allow system_server ctl_default_prop:property_service set;
allow system_server ctl_dhcp_pan_prop:property_service set;
allow system_server ctl_dumpstate_prop:property_service set;
allow system_server dalvikcache_data_file:file execute;
allow system_server dalvikcache_data_file:file execute;
allow system_server dalvikcache_profiles_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server dalvikcache_profiles_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server ddexe:unix_stream_socket connectto;
allow system_server debugfs:file { getattr open read ioctl lock };
allow system_server debuggerd:binder transfer;
allow system_server debug_prop:property_service set;
allow system_server denial_prop:property_service set;
allow system_server device:dir { open getattr read search ioctl };
allow system_server device:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_server devpts:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { { getattr open read ioctl lock } { open append write } };
allow system_server devpts:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server devpts:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server devpts:file { { getattr open read ioctl lock } { open append write } };
allow system_server dev_type:dir { open getattr read search ioctl };
allow system_server dev_type:{ file lnk_file } { getattr open read ioctl lock };
allow system_server dhcp:process signal;
allow system_server dhcp_prop:property_service set;
allow system_server diagandroid_app:unix_stream_socket connectto;
allow system_server diag_device:chr_file { getattr open read ioctl lock };
allow system_server diag_device:chr_file write;
allow system_server domain:dir { open getattr read search ioctl };
allow system_server domain:{ file lnk_file } { getattr open read ioctl lock };
allow system_server domain:file write;
allow system_server domain:lnk_file { getattr open read ioctl lock };
allow system_server domain:process getattr;
allow system_server domain:{ tcp_socket udp_socket } getattr;
allow system_server dpmd_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server dpmd_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server dpmd_socket:sock_file write;
allow system_server dpmd_socket:sock_file write;
allow system_server dpmd:unix_stream_socket connectto;
allow system_server dpmservice:service_manager add;
allow system_server drmserver:binder transfer;
allow system_server drmserver_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server drs_date_prop:property_service set;
allow system_server drsd_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_server drsd:unix_stream_socket connectto;
allow system_server drsd:unix_stream_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow system_server dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server dumpstate:binder { call transfer };
allow system_server dumpstate:binder { call transfer };
allow system_server dumpstate_exec:file { execute execute_no_trans };
allow system_server dumpstate:fd use;
allow system_server dumpstate:fd use;
allow system_server dumpsys_exec:file { execute execute_no_trans };
allow system_server efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server emmcblk_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow system_server epmd:unix_stream_socket connectto;
allow system_server epm_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_server epm_socket:sock_file write;
allow system_server exec_type:file execute;
allow system_server fingerprint_prop:property_service set;
allow system_server firmware:dir { open getattr read search ioctl };
allow system_server firmware:file { getattr open read ioctl lock };
allow system_server fm_radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server frigate_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_server frp_block_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow system_server fscklogs:dir { open getattr read search ioctl };
allow system_server fscklogs:dir { write remove_name };
allow system_server fscklogs:{ file lnk_file } { getattr open read ioctl lock };
allow system_server fscklogs:file unlink;
allow system_server fuse:dir search;
allow system_server gad_untrusted_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server gad_untrusted_app_data_file:dir relabelfrom;
allow system_server gad_untrusted_app_data_file:dir relabelfrom;
allow system_server gad_untrusted_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server gad_untrusted_app_data_file:file execute;
allow system_server good_mgmt_prop:property_service set;
allow system_server gps_control:file { { getattr open read ioctl lock } { open append write } };
allow system_server gps_data_file:{ sock_file file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server gpsd:binder { call transfer };
allow system_server gpsd:binder transfer;
allow system_server gps_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server gpsd:fd use;
allow system_server gpsd:unix_stream_socket connectto;
allow system_server gps_socket:sock_file write;
allow system_server gpu_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server gpu_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server gsiff_daemon:binder { call transfer };
allow system_server gsiff_daemon:fd use;
allow system_server healthd:binder transfer;
allow system_server hw_random_device:chr_file { getattr open read ioctl lock };
allow system_server i2c_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server iio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server imei_efs_file:dir { open getattr read search ioctl };
allow system_server init:fifo_file read;
allow system_server init:fifo_file { read write };
allow system_server init:process sigchld;
allow system_server init_shell:binder { call transfer };
allow system_server init_shell:fd use;
allow system_server init:unix_dgram_socket sendto;
allow system_server init:unix_stream_socket connectto;
allow system_server init:unix_stream_socket connectto;
allow system_server init:unix_stream_socket { getopt getattr setopt read write };
allow system_server input_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server input_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server input_device:dir { open getattr read search ioctl };
allow system_server inputflinger:binder transfer;
allow system_server inputflinger:dir { open getattr read search ioctl };
allow system_server inputflinger:{ file lnk_file } { getattr open read ioctl lock };
allow system_server installd_socket:sock_file write;
allow system_server installd:unix_stream_socket connectto;
allow system_server io_device:chr_file { read open ioctl };
allow system_server ir_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server itsonclient_app:unix_dgram_socket sendto;
allow system_server itsonclient_app:unix_stream_socket connectto;
allow system_server itson_socket:sock_file write;
allow system_server itson_socket:sock_file write;
allow system_server jackservice:process setsched;
allow system_server kernel:key search;
allow system_server kernel:key search;
allow system_server kernel:process { getsched setsched };
allow system_server kernel:process setsched;
allow system_server kernel:security compute_av;
allow system_server kernel:system module_request;
allow system_server kernel:system syslog_read;
allow system_server kernel:system syslog_read;
allow system_server keychain_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server keychain_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server keystore:keystore_key { insert_as_user get_by_uid delete_as_user set_max_retry_count };
allow system_server keystore:keystore_key { test get insert delete exist saw reset password lock unlock zero sign verify grant duplicate clear_uid reset_uid sync_uid password_uid };
allow system_server kgsl_device:chr_file { { { getattr open read ioctl lock } { open append write } } execute };
allow system_server kiesexe:binder { call transfer };
allow system_server kiesexe:fd use;
allow system_server kmsg_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server knox_clipboard_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelto };
allow system_server knox_clipboard_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server knox_dar_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server knox_dar_shared_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server knox_kap_device:chr_file { getattr open read ioctl lock };
allow system_server knox_kap_prop:property_service set;
allow system_server lmkd_socket:sock_file write;
allow system_server lmkd:unix_stream_socket connectto;
allow system_server location_app_data_file:dir { open getattr read search ioctl };
allow system_server location_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow system_server location:binder transfer;
allow system_server location_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server location_data_file:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server location_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server location_data_file:{ file sock_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server location_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server location:unix_stream_socket connectto;
allow system_server log_device:chr_file { getattr open read ioctl lock };
allow system_server log_device:chr_file read;
allow system_server logdr_socket:sock_file write;
allow system_server logd:unix_stream_socket connectto;
allow system_server logwrapper:lnk_file { getattr open read ioctl lock };
allow system_server logwrapper:unix_dgram_socket sendto;
allow system_server m2m1shot_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server mdns_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_server mdns_socket:sock_file { open append write };
allow system_server media_rw_data_file:file { getattr read write };
allow system_server mediaserver:dir { open getattr read search ioctl };
allow system_server mediaserver:{ file lnk_file } { getattr open read ioctl lock };
allow system_server mediaserver:process { getsched setsched };
allow system_server mediaserver:tcp_socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow system_server mediaserver:{ tcp_socket udp_socket } { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow system_server mediaserver_tmpfs:fd use;
allow system_server mediaserver:udp_socket { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown };
allow system_server mediaserver:unix_stream_socket connectto;
allow system_server mm-pp-daemon:binder transfer;
allow system_server mm-pp-daemon:unix_stream_socket connectto;
allow system_server mm-qcamerad:binder transfer;
allow system_server mobicoredaemon:unix_stream_socket connectto;
allow system_server mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server mpctl_socket:dir { open getattr read search ioctl };
allow system_server mpctl_socket:sock_file write;
allow system_server mpctl_socket:sock_file write;
allow system_server mpctl_socket:sock_file write;
allow system_server mpctl_socket:sock_file write;
allow system_server mpdecision_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_server mpdecision:unix_dgram_socket sendto;
allow system_server mpdecision:unix_dgram_socket sendto;
allow system_server mpdecision:unix_stream_socket connectto;
allow system_server mpdecision:unix_stream_socket connectto;
allow system_server mst_ctrl_device:chr_file { write open };
allow system_server mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server mtpd_socket:sock_file write;
allow system_server mtp:unix_stream_socket connectto;
allow system_server netd_socket:sock_file write;
allow system_server netd:unix_stream_socket connectto;
allow system_server net_radio_prop:property_service set;
allow system_server newAttr29:{ chr_file blk_file } getattr;
allow system_server newAttr60:dir { relabelto relabelfrom };
allow system_server newAttr60:file { relabelto relabelfrom };
allow system_server newAttr61:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server newAttr61:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server newAttr63:dir { open getattr read search ioctl };
allow system_server newAttr63:{ file lnk_file } { getattr open read ioctl lock };
allow system_server newAttr64:{ file lnk_file sock_file fifo_file } { getattr open read ioctl lock };
allow system_server nqs:unix_stream_socket connectto;
allow system_server oemfs:dir { open getattr read search ioctl };
allow system_server oemfs:{ file lnk_file } { getattr open read ioctl lock };
allow system_server oneseg_mw:binder transfer;
allow system_server otp_server_exec:file { getattr open read execute };
allow system_server otp_server:process { siginh rlimitinh };
allow system_server otp_server:process transition;
allow system_server p2p_supplicant:unix_dgram_socket sendto;
allow system_server p2p_supplicant:unix_dgram_socket sendto;
allow system_server padblk_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server paramblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow system_server perfd:unix_dgram_socket sendto;
allow system_server perfd:unix_stream_socket connectto;
allow system_server per_mgr:binder { call transfer };
allow system_server per_mgr:binder transfer;
allow system_server per_mgr:binder transfer;
allow system_server per_mgr:fd use;
allow system_server persdata_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server persdata_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server persist_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server persist_data_file:file { open append write };
allow system_server persist_file:dir search;
allow system_server platform_app_data_file:dir relabelfrom;
allow system_server platform_app:dir lock;
allow system_server platform_app:udp_socket getopt;
allow system_server policy_mgmt_prop:property_service set;
allow system_server powerctl_prop:property_service set;
allow system_server ppp_system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow system_server pps_socket:sock_file { open append write };
allow system_server proc_avc_msg:file { { getattr open read ioctl lock } { open append write } };
allow system_server proc:dir lock;
allow system_server proc:file { open append write };
allow system_server proc:file { open append write };
allow system_server proc_sysrq:file { { getattr open read ioctl lock } { open append write } };
allow system_server property_socket:sock_file write;
allow system_server property_socket:sock_file write;
allow system_server pstorefs:dir { open getattr read search ioctl };
allow system_server pstorefs:file { getattr open read ioctl lock };
allow system_server qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow system_server qmuxd_socket:sock_file write;
allow system_server qmuxd:unix_stream_socket connectto;
allow system_server qmuxd:unix_stream_socket connectto;
allow system_server qmux_radio_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server qmux_radio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server qseecom_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server qtaguid_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server qtaguid_proc:file { { getattr open read ioctl lock } { open append write } };
allow system_server racoon_socket:sock_file write;
allow system_server racoon:unix_stream_socket connectto;
allow system_server radio_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server radio_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server radio_device:chr_file { getattr open read ioctl lock };
allow system_server radio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server radio_prop:property_service set;
allow system_server radio:unix_stream_socket connectto;
allow system_server random_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server resourcecache_data_file:dir { open getattr read search ioctl };
allow system_server resourcecache_data_file:file { getattr open read ioctl lock };
allow system_server rild:binder call;
allow system_server rild:binder { call transfer };
allow system_server rild:fd use;
allow system_server rild:unix_stream_socket connectto;
allow system_server s5p_smem_device:chr_file write;
allow system_server sdcardd:dir { open getattr read search ioctl };
allow system_server sdcardd:{ file lnk_file } { getattr open read ioctl lock };
allow system_server sec_efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server sec_efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server sec-ril:binder { call transfer };
allow system_server sec-ril:fd use;
allow system_server secstarter:lnk_file read;
allow system_server secure_storage_device:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { getattr open read ioctl lock };
allow system_server secure_storage_device:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_server secure_storage:unix_stream_socket connectto;
allow system_server security_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server security_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server security_file:dir { open getattr read search ioctl };
allow system_server security_file:dir { open getattr read search ioctl };
allow system_server security_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server security_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server security_file:file { getattr open read ioctl lock };
allow system_server security_file:file { getattr open read ioctl lock };
allow system_server security_file:lnk_file { create rename unlink };
allow system_server security_prop:property_service set;
allow system_server security_spota_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server security_spota_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server security_spota_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelto };
allow system_server security_spota_file:dir { open getattr read search ioctl };
allow system_server security_spota_file:dir { open getattr read search ioctl };
allow system_server security_spota_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server security_spota_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server security_spota_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelto };
allow system_server security_spota_file:file { getattr open read ioctl lock };
allow system_server security_spota_file:file { getattr open read ioctl lock };
allow system_server security_spota_file:lnk_file { create rename unlink };
allow system_server self:capability2 block_suspend;
allow system_server self:capability2 block_suspend;
allow system_server self:capability { kill net_admin net_bind_service net_broadcast net_raw sys_boot sys_module sys_nice sys_resource sys_time sys_tty_config };
allow system_server self:capability { setuid chown fowner sys_ptrace setgid dac_override sys_module };
allow system_server self:capability { setuid chown sys_ptrace setgid dac_override };
allow system_server self:netlink_kobject_uevent_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow system_server self:netlink_route_socket *;
allow system_server self:netlink_route_socket nlmsg_write;
allow system_server self:netlink_route_socket { write getattr setopt };
allow system_server self:netlink_selinux_socket *;
allow system_server self:netlink_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow system_server self:packet_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow system_server self:process execmem;
allow system_server self:process ptrace;
allow system_server self:rawip_socket *;
allow system_server self:rawip_socket { getopt create setopt };
allow system_server self:rawip_socket { write read };
allow system_server self:tun_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow system_server self:zygote { specifyids specifyrlimits specifyseinfo };
allow system_server selinuxfs:file { { getattr open read ioctl lock } { open append write } };
allow system_server sensor_device:chr_file { getattr open read ioctl lock };
allow system_server sensor_efs_file:file { getattr open read ioctl lock };
allow system_server sensorhubservice:binder { call transfer };
allow system_server sensorhubservice:fd use;
allow system_server sensorhubservice:fd use;
allow system_server sensorhubservice:fifo_file read;
allow system_server sensors_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server sensors_socket:sock_file { getattr open read ioctl lock };
allow system_server sensors_socket:sock_file write;
allow system_server sensors_socket:sock_file write;
allow system_server sensors:unix_dgram_socket sendto;
allow system_server sensors:unix_stream_socket connectto;
allow system_server sensors:unix_stream_socket sendto;
allow system_server serial_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server servicemanager:binder { call transfer };
allow system_server servicemanager:binder { call transfer };
allow system_server servicemanager:binder { call transfer };
allow system_server servicemanager:fd use;
allow system_server setupwizard_prop:property_service set;
allow system_server shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow system_server shell:fifo_file { open append write };
allow system_server shell_prop:property_service set;
allow system_server smd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server smd_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server socket_device:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_server socket_device:sock_file { open append write };
allow system_server socket_device:sock_file write;
allow system_server s_platform_app:dir lock;
allow system_server s_platform_app:udp_socket getopt;
allow system_server sprintitson_file:dir { open getattr read search ioctl };
allow system_server sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow system_server ssr_device:chr_file { read open };
allow system_server s_system_app:dir lock;
allow system_server s_system_app:fifo_file { append write };
allow system_server s_system_app:unix_dgram_socket sendto;
allow system_server su_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow system_server surfaceflinger:dir { open getattr read search ioctl };
allow system_server surfaceflinger:fifo_file { getattr open read ioctl lock };
allow system_server surfaceflinger:{ file lnk_file } { getattr open read ioctl lock };
allow system_server surfaceflinger:unix_stream_socket { read write setopt };
allow system_server sysfs_battery_supply:file { { getattr open read ioctl lock } { open append write } };
allow system_server sysfs_battery_supply:file setattr;
allow system_server sysfs_devices_system_cpu:file { open append write };
allow system_server sysfs:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server sysfs:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server sysfs:file { { getattr open read ioctl lock } { open append write } };
allow system_server sysfs_lowmemorykiller:file { getattr { open append write } };
allow system_server sysfs_mst_writable:file { { getattr open read ioctl lock } { open append write } };
allow system_server sysfs_nfc_power_writable:file { { getattr open read ioctl lock } { open append write } };
allow system_server sysfs_sec:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server sysfs_sec:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow system_server sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow system_server sysfs_thermal:dir { open getattr read search ioctl };
allow system_server sysfs_thermal:file { getattr open read ioctl lock };
allow system_server sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow system_server sysrq_proc:file { { getattr open read ioctl lock } { open append write } };
allow system_server { system_app_data_file bluetooth_data_file nfc_data_file radio_data_file shell_data_file app_data_file gad_untrusted_app_data_file }:dir { getattr read search };
allow system_server { system_app_data_file bluetooth_data_file nfc_data_file radio_data_file shell_data_file app_data_file gad_untrusted_app_data_file }:file { getattr read write };
allow system_server system_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server system_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server system_app:dir lock;
allow system_server system_app:fifo_file { append write };
allow system_server system_app:unix_dgram_socket sendto;
allow system_server system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server system_data_file:dir relabelfrom;
allow system_server system_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server system_data_file:file relabelfrom;
allow system_server system_data_file:file relabelto;
allow system_server system_fifo:dir { open getattr read search ioctl };
allow system_server system_file:dir { open getattr read search ioctl };
allow system_server system_file:file { getattr execute execute_no_trans };
allow system_server system_file:file { getattr execute execute_no_trans };
allow system_server system_file:file { getattr open read ioctl lock };
allow system_server systemkeys_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server systemkeys_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server system_ndebug_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server system_prop:property_service set;
allow system_server system_prop:property_service set;
allow system_server system_radio_prop:property_service set;
allow system_server system_server_service:service_manager add;
allow system_server system_server_tmpfs:file execute;
allow system_server system_server_tmpfs:file { read write };
allow system_server system_wpa_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server telecom_service:service_manager add;
allow system_server thermal_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_server tima_dump_exec:file { getattr execute execute_no_trans };
allow system_server tima_keystore_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server tima_keystore_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server tima_log:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server tima_log:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server timerirq_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server tlc_mgmt_prop:property_service set;
allow system_server tlc_server_exec:file { getattr open read execute };
allow system_server tlc_server:process { siginh rlimitinh };
allow system_server tlc_server:process transition;
allow system_server tombstone_data_file:dir { open getattr read search ioctl };
allow system_server tombstone_data_file:file { getattr open read ioctl lock };
allow system_server tombstones_data_file:dir { open getattr read search ioctl };
allow system_server tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server tzic_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server tz_socket:sock_file write;
allow system_server uart_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server uhid_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server ump_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server unlabeled:dir { open getattr read search ioctl };
allow system_server unlabeled:dir { rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server unlabeled:file { getattr open read ioctl lock };
allow system_server unlabeled:file { setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server untrusteddomain:fifo_file { open append write };
allow system_server untrusteddomain:{ tcp_socket udp_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow system_server urandom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server usbaccessory_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server usb_bus_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server usb_bus_device:dir { open getattr read search ioctl };
allow system_server usb_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server usb_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server usb_device:dir { open getattr read search ioctl };
allow system_server user_prop:property_service set;
allow system_server users_system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server users_system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server usf_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server usf_data_file:file { getattr open read ioctl lock };
allow system_server usf_data_file:lnk_file { getattr open read ioctl lock };
allow system_server usf_data_file:sock_file write;
allow system_server usf:process signal;
allow system_server usf_prop:property_service set;
allow system_server usf_service:service_manager add;
allow system_server usf:unix_stream_socket connectto;
allow system_server validity_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server validity_device:{ fifo_file chr_file } { { getattr open read ioctl lock } { open append write } };
allow system_server vdc_exec:file { getattr execute execute_no_trans };
allow system_server video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow system_server video_device:dir { open getattr read search ioctl };
allow system_server vmware_app:process sigkill;
allow system_server vold_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow system_server vold_socket:sock_file write;
allow system_server vold:unix_stream_socket connectto;
allow system_server vpn_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server vpn_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server vpn_prop:property_service set;
allow system_server wallpaper_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server wallpaper_file:file { { { getattr open read ioctl lock } { open append write } } unlink };
allow system_server wallpaper_file:file relabelto;
allow system_server wbc_service:service_manager add;
allow system_server wcnss_service:unix_stream_socket connectto;
allow system_server wfdservice:binder transfer;
allow system_server wifi_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server wifi_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server wifi_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server wifi_efs_file:dir { open getattr read search ioctl };
allow system_server wifi_efs_file:file { getattr open read ioctl lock };
allow system_server wpa_socket:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow system_server wpa_socket:sock_file { getattr link unlink rename };
allow system_server wpa_socket:sock_file unlink;
allow system_server wpa_socket:sock_file write;
allow system_server wpa:unix_dgram_socket sendto;
allow system_server zoneinfo_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow system_server zoneinfo_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow system_server zygote:binder { call transfer };
allow system_server zygote_exec:file { getattr open read ioctl lock };
allow system_server zygote:fd use;
allow system_server zygote:fd use;
allow system_server zygote:file { open append write };
allow system_server zygote:process sigchld;
allow system_server zygote:process sigkill;
allow system_server zygote:process { signal sigkill getsched };
allow system_server zygote_socket:sock_file write;
allow system_server zygote_tmpfs:file read;
allow system_server zygote:unix_dgram_socket write;
allow system_server zygote:unix_stream_socket connectto;
allow system_server zygote:unix_stream_socket { getopt getattr };
allow system shell:process sigchld;
allow system sprintitson_file:file { getattr execute execute_no_trans };
allow system surfaceflinger:binder transfer;
allow { system system_app s_system_app } fixmo_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom relabelto };
allow { system system_app s_system_app } fixmo_app_data_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelfrom relabelto };
allow { system system_app s_system_app } fixmo_app:dir { open getattr read search ioctl };
allow { system system_app s_system_app } fixmo_app:{ file lnk_file fifo_file } { { getattr open read ioctl lock } { open append write } };
allow { system system_app s_system_app } fixmo_app:{ tcp_socket udp_socket unix_stream_socket } { setopt read write getopt };
allow { system system_app s_system_app } good_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } relabelfrom relabelto };
allow { system system_app s_system_app } good_app_data_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelfrom relabelto };
allow { system system_app s_system_app } good_app:dir { open getattr read search ioctl };
allow { system system_app s_system_app } good_app:{ file lnk_file fifo_file } { { getattr open read ioctl lock } { open append write } };
allow { system system_app s_system_app } good_app:{ tcp_socket udp_socket unix_stream_socket } { setopt read write getopt };
allow system tima_dump_exec:file { entrypoint open read execute getattr };
allow system zygote:binder transfer;
allow tbaseLoader firmware_file:dir { open getattr read search ioctl };
allow tbaseLoader firmware_file:{ file lnk_file } { getattr open read ioctl lock };
allow tbaseLoader init:process sigchld;
allow tbaseLoader tbaseLoader_exec:file { entrypoint open read execute getattr };
allow tbaseLoader tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow tee block_device:dir { open getattr read search ioctl };
allow tee data_qsee_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow tee data_qsee_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow tee device:dir { open getattr read search ioctl };
allow tee firmware_file:dir { open getattr read search ioctl };
allow tee firmware_file:file { getattr open read ioctl lock };
allow tee graphics_device:chr_file { getattr open read ioctl lock };
allow tee graphics_device:dir { open getattr read search ioctl };
allow tee init:process sigchld;
allow tee init:unix_stream_socket connectto;
allow tee persist_data_file:dir { open getattr read search ioctl };
allow tee persist_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow tee persist_drm_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow tee persist_drm_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow tee persist_file:dir { open getattr read search ioctl };
allow tee property_socket:sock_file write;
allow tee qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow tee rpmb_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow tee self:capability { dac_override };
allow tee self:capability { setuid setgid sys_admin chown dac_override sys_rawio };
allow tee self:netlink_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow tee servicemanager:binder { call transfer };
allow tee sg_device:chr_file { { { getattr open read ioctl lock } { open append write } } setattr };
allow tee ssd_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow tee s_system_app:unix_dgram_socket sendto;
allow tee surfaceflinger:binder { call transfer };
allow tee surfaceflinger:binder transfer;
allow tee surfaceflinger:fd use;
allow tee system_app:unix_dgram_socket sendto;
allow tee system_data_file:dir { open getattr read search ioctl };
allow tee system_prop:property_service set;
allow tee tee_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow tee tee_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow tee tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow tee tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow tee tee_exec:file { entrypoint open read execute getattr };
allow tee tee_tmpfs:file { read write };
allow tee time_daemon:unix_stream_socket connectto;
allow thermald device:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow thermald init:unix_stream_socket connectto;
allow thermald init:unix_stream_socket connectto;
allow thermald log_device:chr_file { getattr open read ioctl lock };
allow thermald mpdecision:unix_stream_socket connectto;
allow thermald property_socket:sock_file write;
allow thermald qmuxd:unix_stream_socket connectto;
allow thermald qmux_radio_socket:dir { open search write add_name remove_name };
allow thermald qmux_radio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow thermald self:capability { net_admin fsetid dac_override chown };
allow thermald self:capability sys_boot;
allow thermald self:netlink_kobject_uevent_socket *;
allow thermald self:socket *;
allow thermald socket_device:dir { open search write add_name remove_name };
allow thermald socket_device:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow thermald sysfs:file write;
allow thermald system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow thermald system_data_file:file { { getattr open read ioctl lock } { open append write } };
allow thermal-engine init:process sigchld;
allow thermal-engine mpctl_socket:dir search;
allow thermal-engine mpctl_socket:sock_file write;
allow thermal-engine mpctl_socket:sock_file write;
allow thermal-engine mpctl_socket:sock_file write;
allow thermal-engine mpdecision_socket:sock_file write;
allow thermal-engine mpdecision:unix_stream_socket connectto;
allow thermal-engine perfd:unix_dgram_socket sendto;
allow thermal-engine perfd:unix_stream_socket connectto;
allow thermal-engine qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow thermal-engine qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow thermal-engine qmuxd_socket:sock_file write;
allow thermal-engine qmuxd:unix_stream_socket connectto;
allow thermal-engine self:capability2 wake_alarm;
allow thermal-engine self:capability { dac_read_search dac_override fsetid sys_boot };
allow thermal-engine self:capability { net_admin chown };
allow thermal-engine self:netlink_kobject_uevent_socket { read bind create setopt };
allow thermal-engine self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow thermal-engine smem_log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow thermal-engine socket_device:dir { open search write add_name remove_name };
allow thermal-engine socket_device:dir { open search write add_name remove_name };
allow thermal-engine socket_device:sock_file { write create setattr };
allow thermal-engine sysfs:file { open append write };
allow thermal-engine sysfs:file write;
allow thermal-engine sysfs_mpdecision:file { { getattr open read ioctl lock } { open append write } };
allow thermal-engine sysfs_mpdecision:file { { getattr open read ioctl lock } { open append write } };
allow thermal-engine sysfs_ssr:dir { open getattr read search ioctl };
allow thermal-engine sysfs_ssr:{ file lnk_file } { getattr open read ioctl lock };
allow thermal-engine sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow thermal-engine sysfs_thermal:dir { open getattr read search ioctl };
allow thermal-engine sysfs_thermal:file { { getattr open read ioctl lock } { open append write } };
allow thermal-engine sysfs_thermal:lnk_file read;
allow thermal-engine thermal_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow thermal-engine thermal-engine_exec:file { entrypoint open read execute getattr };
allow thermal-engine thermal-engine_tmpfs:file { read write };
allow thermal-engine thermal_socket:dir { open search write add_name remove_name };
allow thermal-engine thermal_socket:sock_file { create setattr open read write };
allow time_daemon alarm_device:chr_file { open append write };
allow time_daemon alarm_device:chr_file { open read write ioctl };
allow time_daemon clock_device:chr_file { getattr open read ioctl lock };
allow time_daemon commonplatformappdomain:dir { open getattr read search ioctl };
allow time_daemon commonplatformappdomain:file { getattr open read ioctl lock };
allow time_daemon init:process sigchld;
allow time_daemon log_device:chr_file ioctl;
allow time_daemon log_device:chr_file read;
allow time_daemon rtc_device:chr_file { open read ioctl };
allow time_daemon self:capability { setuid setgid };
allow time_daemon self:capability { setuid setgid };
allow time_daemon self:socket *;
allow time_daemon self:socket { write read create ioctl };
allow time_daemon smem_log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow time_daemon sysfs_esoc:dir { open getattr read search ioctl };
allow time_daemon sysfs_esoc:{ file lnk_file } { getattr open read ioctl lock };
allow time_daemon system_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow time_daemon system_file:file { getattr execute execute_no_trans };
allow time_daemon time_daemon_exec:file { entrypoint open read execute getattr };
allow time_daemon time_daemon_tmpfs:file { read write };
allow time_daemon time_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow time_daemon time_data_file:dir { write add_name search };
allow time_daemon time_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow time_daemon time_data_file:file { write create open read };
allow tlc_server app_efs_file:file { read open };
allow tlc_server dcm_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow tlc_server dcm_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow tlc_server efs_file:dir search;
allow tlc_server efs_type:dir { open getattr read search ioctl };
allow tlc_server efs_type:{ file lnk_file } { getattr open read ioctl lock };
allow tlc_server firmware_file:dir { open getattr read search ioctl };
allow tlc_server firmware_file:file { getattr open read ioctl lock };
allow tlc_server init:process sigchld;
allow tlc_server mobicoredaemon:unix_stream_socket connectto;
allow tlc_server mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow tlc_server mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow tlc_server platform_app_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow tlc_server platform_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow tlc_server qseecom_device:chr_file { read write ioctl open };
allow tlc_server radio_data_file:dir search;
allow tlc_server radio_data_file:file { read open };
allow tlc_server self:capability dac_override;
allow tlc_server servicemanager:binder { call transfer };
allow tlc_server shell_exec:file { read execute open execute_no_trans };
allow tlc_server system_file:file execute_no_trans;
allow tlc_server system_server:fifo_file { read write getattr ioctl };
allow tlc_server system_server:process sigchld;
allow tlc_server tlc_server_exec:file { entrypoint open read execute getattr };
allow tlc_server tlc_server_exec:file { entrypoint open read execute getattr };
allow tlc_server tlc_server_service:service_manager add;
allow tlc_server tlc_server_service:service_manager add;
allow tlc_server tlc_server_tmpfs:file { read write };
allow tlc_server wifi_efs_file:file { read open };
allow trusted_app_domain appdomain:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow trusted_app_domain appdomain:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow trusted_app_domain fs_type:filesystem getattr;
allow trusted_app_domain kernel:system module_request;
allow trusted_app_domain newAttr26:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow trusted_app_domain newAttr26:{ { file lnk_file sock_file fifo_file } chr_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow trusted_app_domain newAttr48 : { socket tun_socket appletalk_socket key_socket packet_socket rawip_socket } { ioctl read getattr bind connect getopt accept };
allow trusted_app_domain newAttr48 : { tcp_socket unix_stream_socket } { { create { { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } listen accept } } connectto };
allow trusted_app_domain newAttr48 : { udp_socket unix_dgram_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow trusted_app_domain newAttr78 : { blk_file lnk_file sock_file fifo_file } { { getattr open read ioctl lock } execute execmod };
allow trusted_app_domain newAttr78 : { chr_file file } { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow trusted_app_domain newAttr78 : dir { open getattr read search ioctl };
allow trusted_app_domain newAttr82 : { { chr_file blk_file } { file lnk_file sock_file fifo_file } } { { getattr open read ioctl lock } { open append write } };
allow trusted_app_domain newAttr82 : dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow trusted_app_domain newAttr84 : { blk_file lnk_file sock_file fifo_file } { { getattr open read ioctl lock } execute execmod };
allow trusted_app_domain newAttr84: { chr_file file } { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow trusted_app_domain { system_file system_library_file }:file execmod;
allow trusted_app_domain { untrusteddomain shell } : { socket tun_socket appletalk_socket key_socket packet_socket rawip_socket } { ioctl read getattr bind connect getopt accept };
allow trusted_app_domain { untrusteddomain shell } : { tcp_socket unix_stream_socket } { { create { { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } listen accept } } connectto };
allow trusted_app_domain { untrusteddomain shell } : { udp_socket unix_dgram_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow trusteddomain debugfs:file { read getattr };
allow trusteddomain newAttr27:dir { open getattr read search ioctl };
allow trusteddomain newAttr27:{ { file lnk_file sock_file fifo_file } chr_file } { getattr open read ioctl lock };
allow trusteddomain newAttr35:binder { call transfer };
allow trusteddomain newAttr45:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { getattr open read ioctl lock };
allow trusteddomain newAttr45:dir { open getattr read search ioctl };
allow trusteddomain newAttr45:key { view read search };
allow trusteddomain newAttr45:msg *;
allow trusteddomain newAttr45:peer recv;
allow trusteddomain newAttr45:process { sigchld signull getsched getpgid getcap getattr };
allow trusteddomain newAttr48:fd use;
allow trusteddomain newAttr48:{ sem msgq shm ipc } { { getattr read associate unix_read } { write unix_write } };
allow trusteddomain newAttr48:{ tcp_socket unix_stream_socket } { { create { { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } listen accept } } connectto };
allow trusteddomain newAttr48:{ udp_socket unix_dgram_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow trusteddomain newAttr52:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow trusteddomain newAttr54:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { getattr open read ioctl lock };
allow trusteddomain newAttr54:dir { open getattr read search ioctl };
allow trusteddomain sysfs_app_writable:file { { getattr open read ioctl lock } { open append write } };
allow trusteddomain { untrusteddomain shell }:fd use;
allow trusteddomain { untrusteddomain shell }:{ sem msgq shm ipc } { { getattr read associate unix_read } { write unix_write } };
allow trusteddomain { untrusteddomain shell }:{ tcp_socket unix_stream_socket } { { create { { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } listen accept } } connectto };
allow trusteddomain { untrusteddomain shell }:{ udp_socket unix_dgram_socket } { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow trusteddomain zygote:unix_stream_socket { getopt getattr };
allow trustonicpartner_app anr_data_file:file { getattr open read ioctl lock };
allow trustonicpartner_app { apk_tmp_file apk_private_tmp_file }:dir { open getattr read search ioctl };
allow trustonicpartner_app { apk_tmp_file apk_private_tmp_file }:file { getattr open read ioctl lock };
allow trustonicpartner_app app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow trustonicpartner_app app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow trustonicpartner_app app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow trustonicpartner_app asec_apk_file:file { getattr open read ioctl lock };
allow trustonicpartner_app asec_public_file:file { execute execmod };
allow trustonicpartner_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow trustonicpartner_app block_device:blk_file getattr;
allow trustonicpartner_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow trustonicpartner_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow trustonicpartner_app container_app_data_backend:dir { open getattr read search ioctl };
allow trustonicpartner_app DMM-daemon:unix_stream_socket connectto;
allow trustonicpartner_app download_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow trustonicpartner_app download_file:fd use;
allow trustonicpartner_app download_file:file { unlink { { getattr open read ioctl lock } { open append write } } };
allow trustonicpartner_app gad_untrusted_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow trustonicpartner_app gad_untrusted_app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow trustonicpartner_app gad_untrusted_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow trustonicpartner_app itsonclient_app:unix_dgram_socket sendto;
allow trustonicpartner_app itsonclient_app:unix_stream_socket connectto;
allow trustonicpartner_app itson_socket:dir { open getattr read search ioctl };
allow trustonicpartner_app itson_socket:{ file lnk_file } { getattr open read ioctl lock };
allow trustonicpartner_app itson_socket:sock_file write;
allow trustonicpartner_app itson_socket:sock_file write;
allow trustonicpartner_app knox_dar_shared_device:chr_file write;
allow trustonicpartner_app knox_kap_device:chr_file getattr;
allow trustonicpartner_app knox_untrusted_app:process sigkill;
allow trustonicpartner_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow trustonicpartner_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow trustonicpartner_app mmb_data_file:sock_file write;
allow trustonicpartner_app mmb_mw:unix_stream_socket connectto;
allow trustonicpartner_app mobicoredaemon:unix_stream_socket connectto;
allow trustonicpartner_app mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow trustonicpartner_app mpctl_socket:sock_file write;
allow trustonicpartner_app mpctl_socket:sock_file write;
allow trustonicpartner_app mpdecision:unix_dgram_socket sendto;
allow trustonicpartner_app mpdecision:unix_stream_socket connectto;
allow trustonicpartner_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow trustonicpartner_app platform_app_data_file:file { rename unlink };
allow trustonicpartner_app shell_data_file:dir { open getattr read search ioctl };
allow trustonicpartner_app shell_data_file:file { getattr open read ioctl lock };
allow trustonicpartner_app sprintitson_file:dir { open getattr read search ioctl };
allow trustonicpartner_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow trustonicpartner_app s_system_app:unix_stream_socket connectto;
allow trustonicpartner_app s_system_app:unix_stream_socket { read write };
allow trustonicpartner_app system_app_data_file:file { read write getattr };
allow trustonicpartner_app system_app:unix_stream_socket connectto;
allow trustonicpartner_app system_app:unix_stream_socket { read write };
allow trustonicpartner_app system_server:unix_stream_socket connectto;
allow trustonicpartner_app tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow trustonicpartner_app untrusted_app_devpts:chr_file { open getattr read write ioctl };
allow trustonicpartner_app untrusted_app_tmpfs:file execmod;
allow trustonicpartner_app untrusted_app_tmpfs:file execute;
allow trustonicpartner_app untrusted_app_tmpfs:file { read write };
allow tsdaemon init:process sigchld;
allow tsdaemon mobicoredaemon:unix_stream_socket connectto;
allow tsdaemon mobicore_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow tsdaemon mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow tsdaemon rild_socket:sock_file write;
allow tsdaemon rild:unix_stream_socket connectto;
allow tsdaemon sysfs_wake_lock:file write;
allow tsdaemon tsdaemon_exec:file { entrypoint open read execute getattr };
allow tsdaemon tsdaemon_tmpfs:file { read write };
allow tzdaemon init:process sigchld;
allow tzdaemon init:unix_stream_socket connectto;
allow tzdaemon property_socket:sock_file write;
allow tzdaemon self:capability { ipc_lock dac_override };
allow tzdaemon shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow tzdaemon socket_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow tzdaemon socket_device:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow tzdaemon system_data_file:dir { write add_name };
allow tzdaemon system_data_file:file { write lock create open };
allow tzdaemon system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow tzdaemon system_prop:property_service set;
allow tzdaemon tee_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow tzdaemon tee_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow tzdaemon tzdaemon_exec:file { entrypoint open read execute getattr };
allow tzdaemon tzdaemon_prop:property_service set;
allow tzdaemon tzdaemon_tmpfs:file { read write };
allow tzdaemon tz_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow tzdaemon tz_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow ueventd app_data_type:dir { open getattr read search ioctl };
allow ueventd app_data_type:file { getattr open read ioctl lock };
allow ueventd block_device:lnk_file { { getattr open read ioctl lock } { getattr link unlink rename } };
allow ueventd device:chr_file { { getattr open read ioctl lock } { open append write } };
allow ueventd device:dir { write add_name remove_name };
allow ueventd device:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ueventd device:lnk_file { getattr link unlink rename };
allow ueventd device:lnk_file { getattr open read ioctl lock };
allow ueventd dev_type:blk_file { create setattr unlink };
allow ueventd dev_type:chr_file { create setattr unlink };
allow ueventd dev_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ueventd dev_type:lnk_file { create unlink };
allow ueventd dw_mmc_device:lnk_file { getattr open read ioctl lock };
allow ueventd dw_mmc_device:lnk_file { getattr open read ioctl lock };
allow ueventd efs_file:dir search;
allow ueventd efs_file:file { getattr open read ioctl lock };
allow ueventd firmware:dir { open getattr read search ioctl };
allow ueventd firmware_file:dir search;
allow ueventd firmware_file:file { read getattr open };
allow ueventd firmware:file { getattr open read ioctl lock };
allow ueventd init:process sigchld;
allow ueventd init:process sigchld;
allow ueventd init:unix_stream_socket connectto;
allow ueventd isolated_app_tmpfs:file { { getattr open read ioctl lock } { open append write } };
allow ueventd klog_device:chr_file { create open write unlink };
allow ueventd knox_kap_device : chr_file { create setattr unlink } ;
allow ueventd mba_debug_dev:blk_file { getattr open read ioctl lock };
allow ueventd newAttr85:file { open append write };
allow ueventd persist_data_file:dir { open getattr read search ioctl };
allow ueventd persist_data_file:dir { open getattr read search ioctl };
allow ueventd persist_data_file:file { getattr open read ioctl lock };
allow ueventd persist_data_file:file { getattr open read ioctl lock };
allow ueventd persist_file:dir search;
allow ueventd persist_file:file { read getattr open };
allow ueventd proc_avc_msg:file { { getattr open read ioctl lock } { open append write } };
allow ueventd property_socket:sock_file write;
allow ueventd rootfs:file { entrypoint open read execute getattr };
allow ueventd sdcard_external:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow ueventd sdcard_external:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow ueventd security_file:dir { open getattr read search ioctl };
allow ueventd security_file:file { getattr open read ioctl lock };
allow ueventd security_file:file { getattr open read ioctl lock };
allow ueventd security_spota_file:dir { open getattr read search ioctl };
allow ueventd security_spota_file:file { getattr open read ioctl lock };
allow ueventd security_spota_file:file { getattr open read ioctl lock };
allow ueventd self:capability { chown mknod net_admin setgid fsetid sys_rawio dac_override fowner };
allow ueventd self:capability fowner;
allow ueventd self:netlink_kobject_uevent_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow ueventd self:process setfscreate;
allow ueventd selinuxfs:dir { open getattr read search ioctl };
allow ueventd selinuxfs:file { getattr open read ioctl lock };
allow ueventd sysfs_battery_supply:file { open append write };
allow ueventd sysfs_devices_system_cpu:file { { getattr open read ioctl lock } { open append write } };
allow ueventd sysfs:dir { relabelfrom relabelto setattr };
allow ueventd sysfs:file { { getattr open read ioctl lock } { open append write } };
allow ueventd sysfs:file { relabelfrom relabelto };
allow ueventd sysfs_lcd_writable:file { { getattr open read ioctl lock } { open append write } };
allow ueventd sysfs_sec:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow ueventd sysfs_sec:{ file lnk_file } { { getattr open read ioctl lock } { open append write } };
allow ueventd sysfs_socinfo:file { open append write };
allow ueventd sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow ueventd sysfs_thermal:file { { getattr open read ioctl lock } { open append write } };
allow ueventd sysfs_thermal:file { open append write };
allow ueventd sysfs_type:dir { relabelfrom relabelto setattr { open getattr read search ioctl } };
allow ueventd sysfs_type:{ file lnk_file } { relabelfrom relabelto setattr getattr };
allow ueventd sysfs_type:file { relabelfrom relabelto };
allow ueventd sysfs_usb_supply:file { open append write };
allow ueventd system_data_file:dir { open getattr read search ioctl };
allow ueventd system_data_file:file { getattr open read ioctl lock };
allow ueventd tmpfs:chr_file { { getattr open read ioctl lock } { open append write } };
allow ueventd tmpfs:file { getattr open read ioctl lock };
allow ueventd ueventd_tmpfs:file { read write };
allow ueventd untrusted_app_tmpfs:file write;
allow ueventd usb_device:lnk_file { getattr open read ioctl lock };
allow ueventd wifi_data_file:dir search;
allow ueventd wifi_data_file:file { read getattr open };
allow umcagent_app anr_data_file:file { getattr open read ioctl lock };
allow umcagent_app { apk_tmp_file apk_private_tmp_file }:dir { open getattr read search ioctl };
allow umcagent_app { apk_tmp_file apk_private_tmp_file }:file { getattr open read ioctl lock };
allow umcagent_app app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow umcagent_app app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow umcagent_app app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow umcagent_app asec_apk_file:file { getattr open read ioctl lock };
allow umcagent_app asec_public_file:file { execute execmod };
allow umcagent_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow umcagent_app block_device:blk_file getattr;
allow umcagent_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow umcagent_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow umcagent_app container_app_data_backend:dir { open getattr read search ioctl };
allow umcagent_app dcm_data_file:dir { open getattr read search ioctl };
allow umcagent_app dcm_data_file:file { getattr open read ioctl lock };
allow umcagent_app DMM-daemon:unix_stream_socket connectto;
allow umcagent_app download_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow umcagent_app download_file:fd use;
allow umcagent_app download_file:file { unlink { { getattr open read ioctl lock } { open append write } } };
allow umcagent_app gad_untrusted_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow umcagent_app gad_untrusted_app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow umcagent_app gad_untrusted_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow umcagent_app itsonclient_app:unix_dgram_socket sendto;
allow umcagent_app itsonclient_app:unix_stream_socket connectto;
allow umcagent_app itson_socket:dir { open getattr read search ioctl };
allow umcagent_app itson_socket:{ file lnk_file } { getattr open read ioctl lock };
allow umcagent_app itson_socket:sock_file write;
allow umcagent_app itson_socket:sock_file write;
allow umcagent_app knox_dar_shared_device:chr_file write;
allow umcagent_app knox_kap_device:chr_file getattr;
allow umcagent_app knox_untrusted_app:process sigkill;
allow umcagent_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow umcagent_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow umcagent_app mmb_data_file:sock_file write;
allow umcagent_app mmb_mw:unix_stream_socket connectto;
allow umcagent_app mpctl_socket:sock_file write;
allow umcagent_app mpctl_socket:sock_file write;
allow umcagent_app mpdecision:unix_dgram_socket sendto;
allow umcagent_app mpdecision:unix_stream_socket connectto;
allow umcagent_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow umcagent_app platform_app_data_file:file { rename unlink };
allow umcagent_app shell_data_file:dir { open getattr read search ioctl };
allow umcagent_app shell_data_file:file { getattr open read ioctl lock };
allow umcagent_app sprintitson_file:dir { open getattr read search ioctl };
allow umcagent_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow umcagent_app s_system_app:unix_stream_socket connectto;
allow umcagent_app s_system_app:unix_stream_socket { read write };
allow umcagent_app system_app_data_file:file { read write getattr };
allow umcagent_app system_app:unix_stream_socket connectto;
allow umcagent_app system_app:unix_stream_socket { read write };
allow umcagent_app system_server:unix_stream_socket connectto;
allow umcagent_app tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow umcagent_app untrusted_app_devpts:chr_file { open getattr read write ioctl };
allow umcagent_app untrusted_app_tmpfs:file execmod;
allow umcagent_app untrusted_app_tmpfs:file execute;
allow umcagent_app untrusted_app_tmpfs:file { read write };
allow unconfineddomain contextmount_type:dir { open getattr read search ioctl };
allow unconfineddomain contextmount_type:{ file lnk_file sock_file fifo_file } { getattr open read ioctl lock };
allow unconfineddomain dev_type:{ dir lnk_file sock_file fifo_file } ~relabelto;
allow unconfineddomain domain:binder set_context_mgr;
allow unconfineddomain domain:dir { open getattr read search ioctl };
allow unconfineddomain domain:fd *;
allow unconfineddomain domain:{ fifo_file file } { { getattr open read ioctl lock } { open append write } };
allow unconfineddomain domain:key *;
allow unconfineddomain domain:lnk_file { getattr open read ioctl lock };
allow unconfineddomain domain:peer recv;
allow unconfineddomain domain:{ sem msgq shm ipc } *;
allow unconfineddomain domain:{ socket netlink_socket key_socket unix_stream_socket unix_dgram_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket } *;
allow unconfineddomain exec_type:dir { open getattr read search ioctl };
allow unconfineddomain exec_type:file { { getattr open read ioctl lock } execute };
allow unconfineddomain exec_type:lnk_file { getattr open read ioctl lock };
allow unconfineddomain kernel:security ~{ load_policy setenforce setcheckreqprot setbool setsecparam };
allow unconfineddomain kernel:system ~{ syslog_read syslog_mod syslog_console };
allow unconfineddomain netif_type:netif *;
allow unconfineddomain newAttr31:{ chr_file file } ~{ entrypoint execute_no_trans execmod execute relabelto };
allow unconfineddomain newAttr41:binder { call transfer set_context_mgr };
allow unconfineddomain newAttr65:{ chr_file file } ~{ entrypoint execute_no_trans execmod execute relabelto };
allow unconfineddomain newAttr65:{ dir lnk_file sock_file fifo_file } ~relabelto;
allow unconfineddomain newAttr67:{ dir lnk_file sock_file fifo_file } ~relabelto;
allow unconfineddomain newAttr77:{ chr_file file } ~{ entrypoint execute_no_trans execmod execute relabelto };
allow unconfineddomain node_type:node *;
allow unconfineddomain rootfs:file execute;
allow unconfineddomain self:capability2 ~{ mac_override mac_admin };
allow unconfineddomain self:capability ~{ sys_ptrace sys_rawio mknod sys_module audit_write audit_control linux_immutable };
allow unconfineddomain system_file:dir { open getattr read search ioctl };
allow unconfineddomain system_file:file { { getattr open read ioctl lock } execute };
allow unconfineddomain system_file:lnk_file { getattr open read ioctl lock };
allow uncrypt app_data_file:dir { open getattr read search ioctl };
allow uncrypt app_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow uncrypt block_device:blk_file { open append write };
allow uncrypt block_device:dir { open getattr read search ioctl };
allow uncrypt cache_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow uncrypt cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow uncrypt emmcblk_device:blk_file { open append write };
allow uncrypt emmcblk_device:lnk_file { getattr open read ioctl lock };
allow uncrypt gad_untrusted_app_data_file:dir { open getattr read search ioctl };
allow uncrypt gad_untrusted_app_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow uncrypt init:process sigchld;
allow uncrypt init:unix_stream_socket connectto;
allow uncrypt media_rw_data_file:dir { open getattr read search ioctl };
allow uncrypt media_rw_data_file:file { getattr open read ioctl lock };
allow uncrypt powerctl_prop:property_service set;
allow uncrypt property_socket:sock_file write;
allow uncrypt self:capability dac_override;
allow uncrypt self:capability sys_rawio;
allow uncrypt shell_data_file:dir { open getattr read search ioctl };
allow uncrypt shell_data_file:{ file lnk_file } { getattr open read ioctl lock };
allow uncrypt system_data_file:dir { open getattr read search ioctl };
allow uncrypt system_data_file:file { getattr open read ioctl lock };
allow uncrypt uncrypt_exec:file { entrypoint open read execute getattr };
allow uncrypt uncrypt_tmpfs:file { read write };
allow uncrypt userdatablk_device:blk_file { open append write };
allow uncrypt userdatablk_device:lnk_file { getattr open read ioctl lock };
allow undefined_service bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow undefined_service block_device:blk_file getattr;
allow undefined_service block_device:dir { open getattr read search ioctl };
allow undefined_service container_app_data_backend:dir { open getattr read search ioctl };
allow undefined_service efsblk_device:blk_file getattr;
allow undefined_service labeledfs:filesystem unmount;
allow undefined_service newAttr33:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { getattr open read ioctl lock };
allow undefined_service newAttr33:dir { open getattr read search ioctl };
allow undefined_service self:capability dac_override;
allow undefined_service self:capability sys_admin;
allow undefined_service systemblk_device:blk_file getattr;
allow undefined_service tmpfs:chr_file write;
allow undefined_service tmpfs:filesystem unmount;
allow undefined_service userdatablk_device:blk_file getattr;
allow untrusted_app anr_data_file:file { getattr open read ioctl lock };
allow untrusted_app { apk_tmp_file apk_private_tmp_file }:dir { open getattr read search ioctl };
allow untrusted_app { apk_tmp_file apk_private_tmp_file }:file { getattr open read ioctl lock };
allow untrusted_app app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow untrusted_app app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow untrusted_app app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow untrusted_app asec_apk_file:file { getattr open read ioctl lock };
allow untrusted_app asec_public_file:file { execute execmod };
allow untrusted_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow untrusted_app block_device:blk_file getattr;
allow untrusted_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow untrusted_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow untrusted_app container_app_data_backend:dir { open getattr read search ioctl };
allow untrusted_app DMM-daemon:unix_stream_socket connectto;
allow untrustedappdomain socket_device:sock_file { getattr open read ioctl lock };
allow untrustedappdomain zero_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow untrusted_app download_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow untrusted_app download_file:fd use;
allow untrusted_app download_file:file { unlink { { getattr open read ioctl lock } { open append write } } };
allow untrusted_app gad_untrusted_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow untrusted_app gad_untrusted_app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow untrusted_app gad_untrusted_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow untrusted_app itsonclient_app:unix_dgram_socket sendto;
allow untrusted_app itsonclient_app:unix_stream_socket connectto;
allow untrusted_app itson_socket:dir { open getattr read search ioctl };
allow untrusted_app itson_socket:{ file lnk_file } { getattr open read ioctl lock };
allow untrusted_app itson_socket:sock_file write;
allow untrusted_app itson_socket:sock_file write;
allow untrusted_app knox_dar_shared_device:chr_file write;
allow untrusted_app knox_kap_device:chr_file getattr;
allow untrusted_app knox_untrusted_app:process sigkill;
allow untrusted_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow untrusted_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow untrusted_app mmb_data_file:sock_file write;
allow untrusted_app mmb_mw:unix_stream_socket connectto;
allow untrusted_app mpctl_socket:sock_file write;
allow untrusted_app mpctl_socket:sock_file write;
allow untrusted_app mpdecision:unix_dgram_socket sendto;
allow untrusted_app mpdecision:unix_stream_socket connectto;
allow untrusted_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow untrusted_app platform_app_data_file:file { rename unlink };
allow untrusted_app shell_data_file:dir { open getattr read search ioctl };
allow untrusted_app shell_data_file:file { getattr open read ioctl lock };
allow untrusted_app sprintitson_file:dir { open getattr read search ioctl };
allow untrusted_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow untrusted_app s_system_app:unix_stream_socket connectto;
allow untrusted_app s_system_app:unix_stream_socket { read write };
allow untrusted_app system_app_data_file:file { read write getattr };
allow untrusted_app system_app:unix_stream_socket connectto;
allow untrusted_app system_app:unix_stream_socket { read write };
allow untrusted_app system_server:unix_stream_socket connectto;
allow untrusted_app tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow { untrusted_app umcagent_app vpn_untrusted_app trustonicpartner_app llk_untrusted_app filtered_untrusted_app filtered_google_app knox_untrusted_app irm_app gad_untrusted_app carrier_app adbd shell } msockets_socket:dir { open getattr read search ioctl };
allow { untrusted_app umcagent_app vpn_untrusted_app trustonicpartner_app llk_untrusted_app filtered_untrusted_app filtered_google_app knox_untrusted_app irm_app gad_untrusted_app carrier_app adbd shell } msockets_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow { untrusted_app umcagent_app vpn_untrusted_app trustonicpartner_app llk_untrusted_app filtered_untrusted_app filtered_google_app knox_untrusted_app irm_app gad_untrusted_app carrier_app platform_app s_platform_app } jackservice:binder { call transfer };
allow { untrusted_app umcagent_app vpn_untrusted_app trustonicpartner_app llk_untrusted_app filtered_untrusted_app filtered_google_app knox_untrusted_app irm_app gad_untrusted_app carrier_app platform_app s_platform_app } jackservice:binder transfer;
allow { untrusted_app umcagent_app vpn_untrusted_app trustonicpartner_app llk_untrusted_app filtered_untrusted_app filtered_google_app knox_untrusted_app irm_app gad_untrusted_app carrier_app platform_app s_platform_app } jackservice:fd use;
allow untrusted_app untrusted_app_devpts:chr_file { open getattr read write ioctl };
allow untrusted_app untrusted_app_tmpfs:file execmod;
allow untrusted_app untrusted_app_tmpfs:file execute;
allow untrusted_app untrusted_app_tmpfs:file { read write };
allow untrusteddomain apk_tmp_file:file { getattr open read ioctl lock };
allow untrusteddomain app_data_file:file { getattr execute execute_no_trans };
allow untrusteddomain app_data_file:file { getattr execute execute_no_trans };
allow untrusteddomain app_library_file:dir { read getattr };
allow untrusteddomain app_library_file:file { getattr open read ioctl lock };
allow untrusteddomain asec_apk_file:dir { getattr };
allow untrusteddomain asec_apk_file:file { getattr open read ioctl lock };
allow untrusteddomain asec_apk_file:file { getattr open read ioctl lock };
allow untrusteddomain at_distributor:unix_stream_socket connectto;
allow untrusteddomain bintvoutservice:binder { call transfer };
allow untrusteddomain bintvoutservice:fd use;
allow untrusteddomain bluetooth:unix_stream_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow untrusteddomain bugreport_exec:file { execute execute_no_trans };
allow untrusteddomain cache_file:file { open append write };
allow untrusteddomain cfiat_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain commonplatformappdomain:unix_stream_socket connectto;
allow untrusteddomain debugfs:file execute;
allow untrusteddomain devpts:chr_file { getattr open read ioctl lock };
allow untrusteddomain devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain devpts:dir { open getattr read search ioctl };
allow untrusteddomain dev_type:lnk_file { getattr open read ioctl lock };
allow untrusteddomain dhcp_system_file:file { getattr open read ioctl lock };
allow untrusteddomain diag_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow untrusteddomain dumplog_data_file:dir { open getattr read search ioctl };
allow untrusteddomain dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow untrusteddomain dumplog_data_file:file { getattr open read ioctl lock };
allow untrusteddomain dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow untrusteddomain dumpstate_exec:file { execute execute_no_trans };
allow untrusteddomain dumpsys_exec:file { execute execute_no_trans };
allow untrusteddomain exec_type:file getattr;
allow untrusteddomain { exec_type library_file_type }:file { getattr execute execute_no_trans };
allow untrusteddomain filtered_google_app:file write;
allow untrusteddomain gad_untrusted_app_data_file:file { getattr execute execute_no_trans };
allow untrusteddomain gad_untrusted_app_data_file:file { getattr execute execute_no_trans };
allow untrusteddomain init:unix_stream_socket setopt;
allow untrusteddomain init:unix_stream_socket setopt;
allow untrusteddomain kernel:process setsched;
allow untrusteddomain kernel:system { ipc_info };
allow untrusteddomain kernel:system module_request;
allow untrusteddomain kernel:unix_dgram_socket sendto;
allow untrusteddomain kipc_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain knox_untrusted_app:unix_stream_socket connectto;
allow untrusteddomain m2m1shot_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain mediaserver:unix_stream_socket connectto;
allow untrusteddomain mpdecision:unix_stream_socket connectto;
allow untrusteddomain newAttr28:{ { file lnk_file sock_file fifo_file } chr_file } { getattr open read ioctl lock };
allow untrusteddomain newAttr30:{ blk_file chr_file } getattr;
allow untrusteddomain newAttr30:{ chr_file blk_file } getattr;
allow untrusteddomain newAttr31:dir { open getattr read search ioctl };
allow untrusteddomain newAttr33:{ { chr_file blk_file } { file lnk_file sock_file fifo_file } } { getattr open read ioctl lock };
allow untrusteddomain newAttr33:dir { open getattr read search ioctl };
allow untrusteddomain newAttr33:dir { open getattr read search ioctl };
allow untrusteddomain newAttr33:fifo_file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain newAttr33:key { view read search };
allow untrusteddomain newAttr33:msg *;
allow untrusteddomain newAttr33:peer recv;
allow untrusteddomain newAttr33:process { signull getsched getpgid getcap getattr };
allow untrusteddomain newAttr33:{ sem msgq shm ipc } ~{ create destroy setattr };
allow untrusteddomain newAttr33:{ socket tun_socket { tcp_socket udp_socket unix_stream_socket unix_dgram_socket } } { ioctl read getattr bind connect getopt accept };
allow untrusteddomain newAttr53:sock_file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain newAttr55:dir { open getattr read search ioctl };
allow untrusteddomain newAttr55:{ file lnk_file sock_file fifo_file } { getattr open read ioctl lock };
allow untrusteddomain newAttr70:{ file lnk_file sock_file fifo_file } { getattr open read ioctl lock };
allow untrusteddomain newAttr76:dir { open getattr read search ioctl };
allow untrusteddomain node:rawip_socket node_bind;
allow untrusteddomain node_type:{ tcp_socket udp_socket } node_bind;
allow untrusteddomain ovr_device:chr_file { getattr open read ioctl lock };
allow untrusteddomain persist_data_file:dir { open getattr read search ioctl };
allow untrusteddomain platform_app_data_file:file { getattr open read ioctl lock };
allow untrusteddomain platform_media_app_data_file:file { getattr open read ioctl lock };
allow untrusteddomain port:{ tcp_socket udp_socket } name_bind;
allow untrusteddomain ppp_system_file:file { getattr open read ioctl lock };
allow untrusteddomain qmuxd:unix_stream_socket connectto;
allow untrusteddomain qmux_radio_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow untrusteddomain qmux_radio_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow untrusteddomain qtaguid_device:chr_file { getattr open read ioctl lock };
allow untrusteddomain qtaguid_device:chr_file { getattr open read ioctl lock };
allow untrusteddomain rild:unix_stream_socket connectto;
allow untrusteddomain rootfs:file { getattr open read ioctl lock };
allow untrusteddomain samsung_app:unix_stream_socket connectto;
allow untrusteddomain sdcard_external:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow untrusteddomain sdcard_external:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow untrusteddomain sdcard_internal:blk_file { getattr open read ioctl lock };
allow untrusteddomain sdcard_internal:chr_file { getattr open read ioctl lock };
allow untrusteddomain sdcard_internal:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow untrusteddomain sdcard_internal:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow untrusteddomain sdcard_internal:lnk_file write;
allow untrusteddomain sec-ril:unix_stream_socket connectto;
allow untrusteddomain self:file { getattr execute execute_no_trans };
allow untrusteddomain self:netlink_route_socket *;
allow untrusteddomain self:packet_socket create;
allow untrusteddomain self:rawip_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow untrusteddomain self:{ tcp_socket udp_socket } { { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } } accept listen };
allow untrusteddomain selinuxfs:dir { open getattr read search ioctl };
allow untrusteddomain selinuxfs:file { getattr open read };
allow untrusteddomain sensorhubservice:binder { call transfer };
allow untrusteddomain sensorhubservice:fd use;
allow untrusteddomain shell_data_file:dir { open search write add_name remove_name };
allow untrusteddomain shell_exec:file execute;
allow untrusteddomain shell:unix_stream_socket connectto;
allow untrusteddomain system_app_data_file:dir { open getattr read search ioctl };
allow untrusteddomain system_app_data_file:file { getattr open read ioctl lock };
allow untrusteddomain system_data_file:dir { open getattr read search ioctl };
allow untrusteddomain system_data_file:file { getattr open read ioctl lock };
allow untrusteddomain system_file:file execmod;
allow untrusteddomain system:tcp_socket { read write };
allow untrusteddomain system:unix_stream_socket { lock shutdown };
allow untrusteddomain tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain ueventd:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow untrusteddomain untrusted_app_tmpfs:file { open append write };
allow untrusteddomain video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain wifi_efs_file:file { getattr open read ioctl lock };
allow untrusteddomain wifi_efs_file:file { { getattr open read ioctl lock } { open append write } };
allow untrusteddomain zygote:binder call;
allow untrusteddomain zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow usb_uicc_daemon init:process sigchld;
allow usb_uicc_daemon init:unix_stream_socket connectto;
allow usb_uicc_daemon property_socket:sock_file { open append write };
allow usb_uicc_daemon self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow usb_uicc_daemon sysfs_usb_uicc:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow usb_uicc_daemon sysfs_usb_uicc:file { { getattr open read ioctl lock } { open append write } };
allow usb_uicc_daemon uicc_prop:property_service set;
allow usb_uicc_daemon usb_uicc_daemon_exec:file { entrypoint open read execute getattr };
allow usb_uicc_daemon usb_uicc_daemon_tmpfs:file { read write };
allow usb_uicc_daemon usb_uicc_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow usf audio_data_file:dir { open getattr read search ioctl };
allow usf audio_data_file:sock_file write;
allow usf audio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow usf audio_device:dir search;
allow usf ctl_default_prop:property_service set;
allow usf init:process sigchld;
allow usf init:unix_stream_socket connectto;
allow usf mediaserver:unix_stream_socket connectto;
allow usf persist_file:dir { open getattr read search ioctl };
allow usf persist_file:{ file lnk_file } { getattr open read ioctl lock };
allow usf persist_usf_file:dir { open getattr read search ioctl };
allow usf persist_usf_file:{ file lnk_file } { getattr open read ioctl lock };
allow usf proc_audiod:file { getattr open read ioctl lock };
allow usf property_socket:sock_file write;
allow usf usf_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow usf usf_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow usf usf_data_file:lnk_file { getattr open read ioctl lock };
allow usf usf_data_file:sock_file { create unlink setattr };
allow usf usf_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow usf usf_exec:file { entrypoint open read execute getattr };
allow usf usf_prop:property_service set;
allow usf usf_tmpfs:file { read write };
allow vcsFPService console_device:chr_file { open append write };
allow vcsFPService container_app:fd use;
allow vcsFPService dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vcsFPService firmware:dir { open getattr read search ioctl };
allow vcsFPService firmware:file { getattr open read ioctl lock };
allow vcsFPService init:process sigchld;
allow vcsFPService init:unix_stream_socket connectto;
allow vcsFPService input_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vcsFPService kmsg_device:chr_file { getattr open read ioctl lock };
allow vcsFPService mobicoredaemon:unix_stream_socket connectto;
allow vcsFPService mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vcsFPService property_socket:sock_file write;
allow vcsFPService qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vcsFPService s5p_smem_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vcsFPService sdcard_external:file { { getattr open read ioctl lock } { open append write } } ;
allow vcsFPService self:capability { kill dac_override };
allow vcsFPService shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow vcsFPService s_system_app:process signull;
allow vcsFPService system_app:process signull;
allow vcsFPService system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vcsFPService system_data_file:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vcsFPService system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vcsFPService system_file:file { getattr execute execute_no_trans };
allow vcsFPService tty_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vcsFPService uhid_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vcsFPService validity_device:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow vcsFPService validity_device:{ file fifo_file chr_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vcsFPService vcsFPService_exec:file { entrypoint open read execute getattr };
allow vcsFPService vcsFPService_tmpfs:file { read write };
allow vcsFPService vfsspi_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vdc audit_log:file { open append write };
allow vdc cache_file:file write;
allow vdc dumplog_data_file:dir { open getattr read search ioctl };
allow vdc dumplog_data_file:file { getattr open read ioctl lock };
allow vdc dumpstate:fd use;
allow vdc dumpstate:process sigchld;
allow vdc dumpstate:unix_dgram_socket { read write };
allow vdc dumpstate:unix_stream_socket { read write getattr };
allow vdc init:process sigchld;
allow vdc shell_data_file:file { write getattr };
allow vdc sysfs_wake_lock:file write;
allow vdc system_data_file:dir { open getattr read search ioctl };
allow vdc system_data_file:file { getattr open read ioctl lock };
allow vdc vdc_exec:file { entrypoint open read execute getattr };
allow vdc vdc_exec:file { entrypoint open read execute getattr };
allow vdc vdc_tmpfs:file { read write };
allow vdc vold:fifo_file write;
allow vdc vold:netlink_kobject_uevent_socket { read write };
allow vdc vold_socket:sock_file write;
allow vdc vold:unix_stream_socket connectto;
allow vfat xsdcardfs:filesystem associate;
allow vm_bms battery_data_device:chr_file { open read write ioctl };
allow vm_bms init:process sigchld;
allow vm_bms self:capability2 block_suspend;
allow vm_bms self:capability { setpcap setgid setuid };
allow vm_bms sysfs:file { { getattr open read ioctl lock } { open append write } };
allow vm_bms sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow vm_bms tmpfs:chr_file { read write getattr };
allow vm_bms vm_bms_device:chr_file { open read write ioctl };
allow vm_bms vm_bms_exec:file { entrypoint open read execute getattr };
allow vm_bms vm_bms_tmpfs:file { read write };
allow vmware_app app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vmware_app app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vmware_app app_library_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vmware_app ashmem_device:chr_file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow vmware_app devpts:chr_file { getattr open read ioctl lock };
allow vmware_app dnsproxyd_socket:sock_file write;
allow vmware_app gad_untrusted_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vmware_app gad_untrusted_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vmware_app init:unix_stream_socket connectto;
allow vmware_app kernel:unix_dgram_socket sendto;
allow vmware_app kgsl_device:chr_file { { { getattr open read ioctl lock } { open append write } } execute };
allow vmware_app knox_untrusted_app:binder call;
allow vmware_app netd:unix_stream_socket connectto;
allow vmware_app node:tcp_socket node_bind;
allow vmware_app node:udp_socket node_bind;
allow vmware_app port:tcp_socket *;
allow vmware_app port:udp_socket *;
allow vmware_app sdcard_internal:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vmware_app sdcard_internal:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vmware_app secure_storage:dir { open getattr read search ioctl };
allow vmware_app secure_storage:file { getattr open read ioctl lock };
allow vmware_app self:netlink_route_socket *;
allow vmware_app self:socket *;
allow vmware_app self:tcp_socket *;
allow vmware_app self:udp_socket *;
allow vmware_app surfaceflinger:unix_stream_socket *;
allow vmware_app system_file:file { getattr execute execute_no_trans };
allow vmware_app system:unix_stream_socket *;
allow vmware_app vmware_app_tmpfs:file execute;
allow vmware_app vmware_app_tmpfs:file { read write };
allow vmware_app vmwared:unix_stream_socket connectto;
allow vmware_app zygote_exec:file execute;
allow vmware_app zygote:fd use;
allow vmware_app zygote:process sigchld;
allow vmware_app zygote_tmpfs:file read;
allow vmwared adb_device:chr_file getattr;
allow vmwared adbd:tcp_socket getattr;
allow vmwared app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vmwared app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vmwared app_library_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vmwared app_library_file:file { read getattr open };
allow vmwared audio_data_file:dir { open getattr read search ioctl };
allow vmwared audio_data_file:file getattr;
allow vmwared cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vmwared cgroup:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vmwared dhcp_system_file:dir { open getattr read search ioctl };
allow vmwared dhcp_system_file:file getattr;
allow vmwared domain:dir { open getattr read search ioctl };
allow vmwared domain:fifo_file getattr;
allow vmwared domain:file getattr;
allow vmwared domain:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow vmwared domain:lnk_file { getattr open read ioctl lock };
allow vmwared domain:netlink_kobject_uevent_socket getattr;
allow vmwared domain:socket getattr;
allow vmwared domain:unix_stream_socket getattr;
allow vmwared exec_type:fifo_file getattr;
allow vmwared exec_type:file { getattr execute execute_no_trans };
allow vmwared exec_type:socket getattr;
allow vmwared exec_type:unix_stream_socket getattr;
allow vmwared firmware:dir { open getattr read search ioctl };
allow vmwared firmware:file getattr;
allow vmwared gad_untrusted_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vmwared gad_untrusted_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vmwared init:process sigchld;
allow vmwared init:unix_stream_socket connectto;
allow vmwared mpdecision:netlink_kobject_uevent_socket getattr;
allow vmwared mpdecision:unix_stream_socket getattr;
allow vmwared netd:fifo_file getattr;
allow vmwared netd:netlink_kobject_uevent_socket getattr;
allow vmwared netd:netlink_nflog_socket getattr;
allow vmwared netd:netlink_route_socket getattr;
allow vmwared netd:udp_socket getattr;
allow vmwared newAttr29:chr_file getattr;
allow vmwared newAttr63:file getattr;
allow vmwared ppp_system_file:dir { open getattr read search ioctl };
allow vmwared ppp_system_file:file getattr;
allow vmwared property_socket:sock_file write;
allow vmwared runas_exec:file getattr;
allow vmwared self:netlink_route_socket *;
allow vmwared selinuxfs:file getattr;
allow vmwared shell_exec:file getattr;
allow vmwared sysfs:file write;
allow vmwared system_file:lnk_file getattr;
allow vmwared ueventd:netlink_kobject_uevent_socket getattr;
allow vmwared vmware_device:chr_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vmwared vmwared_exec:file { entrypoint open read execute getattr };
allow vmwared vmwared_tmpfs:file { read write };
allow vmwared vold:netlink_kobject_uevent_socket getattr;
allow vmwared zygote:netlink_selinux_socket getattr;
allow vold anr_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold anr_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold app_data_file:dir search;
allow vold app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow vold app_data_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold app_data_type:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold asec_apk_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton relabelto };
allow vold asec_apk_file:dir { { { open getattr read search ioctl } { open search write add_name remove_name } } setattr relabelfrom relabelto };
allow vold asec_apk_file:file { { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } } relabelto };
allow vold asec_apk_file:file { { getattr open read ioctl lock } setattr relabelfrom relabelto };
allow vold asec_apk_file:lnk_file relabelto;
allow vold asec_image_file:dir { mounton create } ;
allow vold asec_image_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow vold asec_image_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold asec_public_file:dir { relabelto setattr };
allow vold asec_public_file:file { relabelto setattr };
allow vold bbccontainer_app_data_backend:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow vold bbccontainer_app_data_backend:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold block_device:blk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold block_device:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold cache_file:dir { write add_name };
allow vold cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold cache_file:file { write create open };
allow vold carrier_app:fd use;
allow vold carrierblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow vold { container_app_data_backend bbccontainer_app_data_backend media_rw_data_file system_data_file app_data_type } :dir { relabelfrom relabelto };
allow vold { container_app_data_backend bbccontainer_app_data_backend media_rw_data_file system_data_file app_data_type } :dir { write getattr rmdir read remove_name open };
allow vold { container_app_data_backend bbccontainer_app_data_backend media_rw_data_file system_data_file app_data_type } :{ file lnk_file } { getattr unlink };
allow vold { container_app_data_backend bbccontainer_app_data_backend media_rw_data_file system_data_file app_data_type } :{ file lnk_file } { relabelfrom relabelto };
allow vold container_app_data_backend:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow vold container_app_data_backend:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold container_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold container_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold container_app_data_file:filesystem { relabelfrom relabelto mount unmount };
allow vold container_app_data_file:lnk_file getattr;
allow vold container_app_data_file:lnk_file read;
allow vold container_app:fd use;
allow vold container_app_sdcard_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold container_app_sdcard_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold container_app_sdcard_file:filesystem { relabelfrom relabelto mount unmount };
allow vold container_system_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold container_system_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold ctl_default_prop:property_service set;
allow vold ctl_fuse_prop:property_service set;
allow vold daemon_app_process:process { siginh rlimitinh };
allow vold daemon_app_process:process transition;
allow vold device:chr_file { create setattr ioctl lock append execute { getattr link unlink rename } };
allow vold device:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold device:dir write;
allow vold device:dir { write add_name remove_name };
allow vold devpts:chr_file { { getattr open read ioctl lock } { open append write } };
allow vold dm_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vold domain:dir { open getattr read search ioctl };
allow vold domain:{ file lnk_file } { getattr open read ioctl lock };
allow vold domain:process getattr;
allow vold domain:process { signal sigkill };
allow vold dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold dumpstate_exec:file { getattr open read execute };
allow vold dumpstate:process { siginh rlimitinh };
allow vold dumpstate:process transition;
allow vold efs_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold efs_file:dir { open getattr read search ioctl };
allow vold efs_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold efs_file:file { { getattr open read ioctl lock } { open append write } };
allow vold emmcblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow vold epmd:key *;
allow vold filtered_google_app:fd use;
allow vold filtered_untrusted_app:fd use;
allow vold firmware:dir { open getattr read search ioctl };
allow vold firmware:file { getattr open read ioctl lock };
allow vold fixmo_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow vold fixmo_app_data_file:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold fixmo_app_data_file:filesystem { relabelfrom relabelto mount unmount remount };
allow vold fixmo_app:fd use;
allow vold frigate_socket:sock_file { { getattr open read ioctl lock } { open append write } };
allow vold fscklogs:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow vold fscklogs:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold fscklogs:file { write create open getattr };
allow vold gad_untrusted_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold gad_untrusted_app_data_file:dir search;
allow vold gad_untrusted_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold gad_untrusted_app_data_file:file { { getattr open read ioctl lock } { open append write } };
allow vold gad_untrusted_app:fd use;
allow vold good_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow vold good_app_data_file:{ file lnk_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold good_app_data_file:filesystem { relabelfrom relabelto mount unmount remount };
allow vold good_app:fd use;
allow vold healthd:binder { call transfer };
allow vold healthd:fd use;
allow vold hiddenblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow vold init:key write;
allow vold init:process sigchld;
allow vold init:unix_stream_socket connectto;
allow vold irm_app:fd use;
allow vold kernel:process setsched;
allow vold kernel:system module_request;
allow vold kernel:system module_request;
allow vold kernel:system syslog_read;
allow vold klog_device:chr_file { create open write unlink };
allow vold km_fips_prop:property_service set;
allow vold knox_clipboard_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold knox_clipboard_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold knox_dar_device:chr_file { getattr open read ioctl lock };
allow vold knox_dar_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vold knox_dar_shared_device:chr_file { getattr open read ioctl lock };
allow vold knox_dar_shared_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vold knox_untrusted_app:fd use;
allow vold labeledfs:filesystem { mount unmount remount };
allow vold labeledfs:filesystem relabelfrom;
allow vold llk_untrusted_app:fd use;
allow vold loop_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow vold media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold media_rw_data_file:dir mounton;
allow vold media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold mmcblk0_device:blk_file { getattr open read ioctl lock };
allow vold mmcblk0rpmb_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow vold mobicoredaemon:unix_stream_socket connectto;
allow vold mobicore-user_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vold obb_apk_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow vold obb_apk_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold paramblk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow vold persdatablk_device:blk_file { getattr open read ioctl lock };
allow vold personal_page_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold personal_page_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold platform_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold platform_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold powerctl_prop:property_service set;
allow vold proc_dirty_ratio:file { { getattr open read ioctl lock } { open append write } };
allow vold proc:file write;
allow vold proc_sysrq:file { { getattr open read ioctl lock } { open append write } };
allow vold property_socket:sock_file write;
allow vold qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vold qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vold random_device:chr_file { getattr open read ioctl lock };
allow vold rootfs:dir mounton;
allow vold sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold sdcard_type:dir mounton;
allow vold sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold sdcard_type:filesystem { mount remount unmount };
allow vold sdcard_type:filesystem relabelfrom;
allow vold secure_storage_device:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold secure_storage_device:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold secure_storage_device:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold secure_storage:unix_stream_socket connectto;
allow vold security_file:dir { open getattr read search ioctl };
allow vold security_file:dir { open getattr read search ioctl };
allow vold security_file:file { getattr open read ioctl lock };
allow vold security_file:file { getattr open read ioctl lock };
allow vold security_spota_file:dir { open getattr read search ioctl };
allow vold security_spota_file:dir { open getattr read search ioctl };
allow vold security_spota_file:file { getattr open read ioctl lock };
allow vold security_spota_file:file { getattr open read ioctl lock };
allow vold self:capability2 block_suspend;
allow vold self:capability2 block_suspend;
allow vold self:capability2 syslog;
allow vold self:capability { net_admin dac_override mknod sys_admin chown fowner fsetid };
allow vold self:capability sys_boot;
allow vold self:capability { sys_boot sys_rawio sys_resource setuid net_raw setgid kill ipc_lock };
allow vold self:capability { sys_ptrace kill };
allow vold self:key *;
allow vold self:netlink_kobject_uevent_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow vold servicemanager:binder { call transfer };
allow vold shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow vold swap_device:blk_file { getattr open read ioctl lock };
allow vold sysfs:file { { getattr open read ioctl lock } { open append write } };
allow vold sysfs_ss_writable:file { { getattr open read ioctl lock } { open append write } };
allow vold sysfs_wake_lock:file { { getattr open read ioctl lock } { open append write } };
allow vold sysrq_proc:file { open append write };
allow vold system_data_file:dir { create { { open getattr read search ioctl } { open search write add_name remove_name } } mounton };
allow vold system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold system_data_file:lnk_file { getattr link unlink rename };
allow vold system_data_file:lnk_file { getattr open read ioctl lock };
allow vold system_file:file { getattr execute execute_no_trans };
allow vold system_prop:property_service set;
allow vold tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vold tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vold tmpfs:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold tmpfs:dir mounton;
allow vold tmpfs:filesystem { mount unmount };
allow vold trustonicpartner_app:fd use;
allow vold umcagent_app:fd use;
allow vold unlabeled:dir { { open getattr read search ioctl } relabelfrom };
allow vold unlabeled:dir { { open getattr read search ioctl } setattr relabelfrom };
allow vold unlabeled:file { { getattr open read ioctl lock } setattr relabelfrom };
allow vold unlabeled:file relabelfrom;
allow vold unlabeled:filesystem { mount unmount relabelfrom };
allow vold unlabeled:lnk_file relabelfrom;
allow vold untrusted_app:fd use;
allow vold userdatablk_device:blk_file { { getattr open read ioctl lock } { open append write } };
allow vold users_system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vold users_system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vold vold_exec:file { entrypoint open read execute getattr };
allow vold vold_prop:property_service set;
allow vold vold_tmpfs:file { read write };
allow vold vpn_untrusted_app:fd use;
allow vold wifi_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow vold wifi_data_file:file { { getattr open read ioctl lock } { open append write } };
allow vold zygote_exec:file { getattr open read execute };
allow vpnclientd init:process sigchld;
allow vpnclientd netd_socket:sock_file write;
allow vpnclientd netd:unix_stream_socket connectto;
allow vpnclientd node_type:{ rawip_socket } node_bind;
allow vpnclientd proc_spd:file { { getattr open read ioctl lock } { open append write } };
allow vpnclientd rild_socket:sock_file write;
allow vpnclientd rild:tun_socket relabelfrom;
allow vpnclientd rild:unix_stream_socket connectto;
allow vpnclientd self:capability { net_admin net_raw };
allow vpnclientd self:netlink_route_socket nlmsg_write;
allow vpnclientd self:tun_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow vpnclientd sysfs_wake_lock:file write;
allow vpnclientd tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vpnclientd vpnclientd_data_file:dir { search write add_name };
allow vpnclientd vpnclientd_data_file:file { read create getattr append open };
allow vpnclientd vpnclientd_exec:file { entrypoint open read execute getattr };
allow vpnclientd vpnclientd_tmpfs:file { read write };
allow vpn_untrusted_app anr_data_file:file { getattr open read ioctl lock };
allow vpn_untrusted_app { apk_tmp_file apk_private_tmp_file }:dir { open getattr read search ioctl };
allow vpn_untrusted_app { apk_tmp_file apk_private_tmp_file }:file { getattr open read ioctl lock };
allow vpn_untrusted_app app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow vpn_untrusted_app app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow vpn_untrusted_app app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vpn_untrusted_app asec_apk_file:file { getattr open read ioctl lock };
allow vpn_untrusted_app asec_public_file:file { execute execmod };
allow vpn_untrusted_app bbccontainer_app_data_backend:dir { open getattr read search ioctl };
allow vpn_untrusted_app block_device:blk_file getattr;
allow vpn_untrusted_app cache_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vpn_untrusted_app cache_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vpn_untrusted_app container_app_data_backend:dir { open getattr read search ioctl };
allow vpn_untrusted_app DMM-daemon:unix_stream_socket connectto;
allow vpn_untrusted_app download_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow vpn_untrusted_app download_file:fd use;
allow vpn_untrusted_app download_file:file { unlink { { getattr open read ioctl lock } { open append write } } };
allow vpn_untrusted_app gad_untrusted_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } lock };
allow vpn_untrusted_app gad_untrusted_app_data_file:file { { { getattr open read ioctl lock } { getattr execute execute_no_trans } } execmod };
allow vpn_untrusted_app gad_untrusted_app_data_file:{ file lnk_file sock_file fifo_file } { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vpn_untrusted_app itsonclient_app:unix_dgram_socket sendto;
allow vpn_untrusted_app itsonclient_app:unix_stream_socket connectto;
allow vpn_untrusted_app itson_socket:dir { open getattr read search ioctl };
allow vpn_untrusted_app itson_socket:{ file lnk_file } { getattr open read ioctl lock };
allow vpn_untrusted_app itson_socket:sock_file write;
allow vpn_untrusted_app itson_socket:sock_file write;
allow vpn_untrusted_app knox_dar_shared_device:chr_file write;
allow vpn_untrusted_app knox_kap_device:chr_file getattr;
allow vpn_untrusted_app knox_untrusted_app:process sigkill;
allow vpn_untrusted_app media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow vpn_untrusted_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow vpn_untrusted_app mmb_data_file:sock_file write;
allow vpn_untrusted_app mmb_mw:unix_stream_socket connectto;
allow vpn_untrusted_app mpctl_socket:sock_file write;
allow vpn_untrusted_app mpctl_socket:sock_file write;
allow vpn_untrusted_app mpdecision:unix_dgram_socket sendto;
allow vpn_untrusted_app mpdecision:unix_stream_socket connectto;
allow vpn_untrusted_app mtp_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vpn_untrusted_app platform_app_data_file:file { rename unlink };
allow vpn_untrusted_app shell_data_file:dir { open getattr read search ioctl };
allow vpn_untrusted_app shell_data_file:file { getattr open read ioctl lock };
allow vpn_untrusted_app sprintitson_file:dir { open getattr read search ioctl };
allow vpn_untrusted_app sprintitson_file:{ file lnk_file } { getattr open read ioctl lock };
allow vpn_untrusted_app s_system_app:unix_stream_socket connectto;
allow vpn_untrusted_app s_system_app:unix_stream_socket { read write };
allow vpn_untrusted_app system_app_data_file:file { read write getattr };
allow vpn_untrusted_app system_app:unix_stream_socket connectto;
allow vpn_untrusted_app system_app:unix_stream_socket { read write };
allow vpn_untrusted_app system_server:unix_stream_socket connectto;
allow vpn_untrusted_app tun_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow vpn_untrusted_app untrusted_app_devpts:chr_file { open getattr read write ioctl };
allow vpn_untrusted_app untrusted_app_tmpfs:file execmod;
allow vpn_untrusted_app untrusted_app_tmpfs:file execute;
allow vpn_untrusted_app untrusted_app_tmpfs:file { read write };
allow watchdogd device:dir { add_name write remove_name };
allow watchdogd device:dir { write add_name remove_name };
allow watchdogd init:process sigchld;
allow watchdogd klog_device:chr_file { create open write unlink };
allow watchdogd null_device:chr_file { create unlink };
allow watchdogd rootfs:file { entrypoint open read execute getattr };
allow watchdogd self:capability mknod;
allow watchdogd watchdog_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wcnss_service cnd:unix_dgram_socket sendto;
allow wcnss_service firmware_file:dir { open getattr read search ioctl };
allow wcnss_service firmware_file:file { getattr open read ioctl lock };
allow wcnss_service init:process sigchld;
allow wcnss_service init:unix_stream_socket connectto;
allow wcnss_service init:unix_stream_socket connectto;
allow wcnss_service persist_file:dir { open getattr read search ioctl };
allow wcnss_service proc_net:file write;
allow wcnss_service property_socket:sock_file write;
allow wcnss_service property_socket:sock_file write;
allow wcnss_service qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow wcnss_service qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow wcnss_service qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow wcnss_service qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow wcnss_service qmuxd_socket:sock_file write;
allow wcnss_service qmuxd_socket:sock_file write;
allow wcnss_service qmuxd:unix_stream_socket connectto;
allow wcnss_service qmuxd:unix_stream_socket connectto;
allow wcnss_service self:capability { setuid setgid dac_override net_admin };
allow wcnss_service self:netlink_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow wcnss_service self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow wcnss_service smem_log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wcnss_service sysfs_msmuart_file:file write;
allow wcnss_service system_prop:property_service set;
allow wcnss_service wcnss_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wcnss_service wcnss_service_exec:file { entrypoint open read execute getattr };
allow wcnss_service wcnss_service_tmpfs:file { read write };
allow wcnss_service wifi_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow wcnss_service wifi_data_file:dir { open search write add_name remove_name };
allow wcnss_service wifi_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow wcnss_service wifi_data_file:file { { { getattr open read ioctl lock } { open append write } } setattr };
allow wcnss_service wifi_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wfd_app audio_device:dir { open getattr read search ioctl };
allow wfd_app dalvikcache_data_file:file { write setattr };
allow wfd_app firmware_file:dir { open getattr read search ioctl };
allow wfd_app firmware_file:file { getattr open read ioctl lock };
allow wfd_app fwmarkd_socket:sock_file write;
allow wfd_app graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wfd_app graphics_device:dir { open getattr read search ioctl };
allow wfd_app init:unix_stream_socket connectto;
allow wfd_app media_rw_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow wfd_app media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow wfd_app mpctl_socket:dir { open getattr read search ioctl };
allow wfd_app netd:unix_stream_socket connectto;
allow wfd_app node:tcp_socket node_bind;
allow wfd_app node:udp_socket node_bind;
allow wfd_app port:tcp_socket { name_bind name_connect };
allow wfd_app port:udp_socket name_bind;
allow wfd_app qseecom_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wfd_app self:tcp_socket { bind create setopt listen write read getopt connect accept getattr };
allow wfd_app self:udp_socket { bind create getattr write setopt ioctl read getopt };
allow wfd_app system_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow wfd_app uhid_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wfd_app video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wfd_app video_device:dir { open getattr read search ioctl };
allow wfd_app wfd_app_tmpfs:file execute;
allow wfd_app wfd_app_tmpfs:file { read write };
allow wfdservice audio_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wfdservice audio_device:dir { open getattr read search ioctl };
allow wfdservice firmware_file:dir { open getattr read search ioctl };
allow wfdservice firmware_file:file { getattr open read ioctl lock };
allow wfdservice graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wfdservice init:process sigchld;
allow wfdservice init:unix_stream_socket connectto;
allow wfdservice media_rw_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow wfdservice media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow wfdservice mediaserver:binder { call transfer };
allow wfdservice mediaserver:fd use;
allow wfdservice platform_app:binder { call transfer };
allow wfdservice platform_app:binder transfer;
allow wfdservice platform_app:fd use;
allow wfdservice property_socket:sock_file write;
allow wfdservice self:netlink_kobject_uevent_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow wfdservice self:process execmem;
allow wfdservice servicemanager:binder { call transfer };
allow wfdservice s_platform_app:binder { call transfer };
allow wfdservice s_platform_app:binder transfer;
allow wfdservice s_platform_app:fd use;
allow wfdservice s_system_app:binder { call transfer };
allow wfdservice s_system_app:binder transfer;
allow wfdservice s_system_app:fd use;
allow wfdservice surfaceflinger:binder { call transfer };
allow wfdservice surfaceflinger:binder transfer;
allow wfdservice surfaceflinger:fd use;
allow wfdservice sysfs_graphics:file { { getattr open read ioctl lock } { open append write } };
allow wfdservice system_app:binder { call transfer };
allow wfdservice system_app:binder transfer;
allow wfdservice system_app:fd use;
allow wfdservice system_server:binder { call transfer };
allow wfdservice system_server:fd use;
allow wfdservice tee_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wfdservice uhid_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wfdservice video_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wfdservice video_device:dir { open getattr read search ioctl };
allow wfdservice wfdservice_exec:file { entrypoint open read execute getattr };
allow wfdservice wfdservice_service:service_manager add;
allow wfdservice wfdservice_tmpfs:file { read write };
allow wiperiface init:process sigchld;
allow wiperiface qmuxd:unix_stream_socket connectto;
allow wiperiface qmux_gps_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow wiperiface qmux_gps_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow wiperiface self:socket *;
allow wiperiface system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow wiperiface system_data_file:fifo_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow wiperiface wiperiface_exec:file { entrypoint open read execute getattr };
allow wiperiface wiperiface_tmpfs:file { read write };
allow wlandutservice init:process sigchld;
allow wlandutservice init:unix_stream_socket connectto;
allow wlandutservice self:capability net_admin;
allow wlandutservice servicemanager:binder { call transfer };
allow wlandutservice shell_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow wlandutservice system_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow wlandutservice system_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow wlandutservice system_file:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow wlandutservice wlandutservice_exec:file { entrypoint open read execute getattr };
allow wlandutservice wlandutservice_service:service_manager add;
allow wlandutservice wlandutservice_tmpfs:file { read write };
allow wpa cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow wpa cnd:unix_dgram_socket sendto;
allow wpa debuggerd:unix_dgram_socket sendto;
allow wpa device:file { getattr open read ioctl lock };
allow wpa dumpstate:unix_dgram_socket sendto;
allow wpa ims:unix_dgram_socket sendto;
allow wpa init:process sigchld;
allow wpa init_shell:unix_dgram_socket sendto;
allow wpa init:unix_dgram_socket sendto;
allow wpa init:unix_stream_socket connectto;
allow wpa kernel:system module_request;
allow wpa keystore:binder { call transfer };
allow wpa keystore:binder { call transfer };
allow wpa keystore:fd use;
allow wpa keystore:fd use;
allow wpa keystore:keystore_key { get sign verify };
allow wpa keystore:unix_stream_socket connectto;
allow wpa newAttr59:dir { open getattr read search ioctl };
allow wpa newAttr59:{ file lnk_file } { getattr open read ioctl lock };
allow wpa persist_file:dir search;
allow wpa proc_net:file write;
allow wpa property_socket:sock_file { open append write };
allow wpa qmuxd_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow wpa qmuxd_socket:sock_file { read getattr write setattr create unlink };
allow wpa qmuxd_socket:sock_file write;
allow wpa qmuxd:unix_stream_socket connectto;
allow wpa rild:unix_stream_socket connectto;
allow wpa sdcard_type:dir getattr;
allow wpa secure_storage_device:dir { open getattr read search ioctl };
allow wpa secure_storage_device:sock_file { open append write };
allow wpa secure_storage:unix_stream_socket connectto;
allow wpa self:capability { setuid net_admin setgid net_raw };
allow wpa self:netlink_route_socket *;
allow wpa self:netlink_route_socket nlmsg_write;
allow wpa self:netlink_socket *;
allow wpa self:netlink_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow wpa self:packet_socket *;
allow wpa self:packet_socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow wpa self:socket { create { ioctl read getattr write setattr lock append bind connect getopt setopt shutdown } };
allow wpa self:udp_socket *;
allow wpa servicemanager:binder { call transfer };
allow wpa servicemanager:binder { call transfer };
allow wpa servicemanager:fd use;
allow wpa shell:unix_dgram_socket sendto;
allow wpa smem_log_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow wpa s_system_app:unix_dgram_socket sendto;
allow wpa su:unix_dgram_socket sendto;
allow wpa su:unix_dgram_socket sendto;
allow wpa system_app:unix_dgram_socket sendto;
allow wpa system_data_file:dir { open getattr read search ioctl };
allow wpa system_data_file:file { open append write };
allow wpa system_server:unix_dgram_socket sendto;
allow wpa system_wpa_socket:sock_file write;
allow wpa wifi_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow wpa wifi_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow wpa wifi_data_file:sock_file { open append write };
allow wpa wpa_exec:file { entrypoint open read execute getattr };
allow wpa wpa_exec:file execute_no_trans;
allow wpa wpa_socket:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow wpa wpa_socket:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow wpa wpa_socket:sock_file write;
allow wpa wpa_tmpfs:file { read write };
allow zygote anr_data_file:file { { getattr open read ioctl lock } { open append write } };
allow zygote app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow zygote app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote appdomain:binder { call transfer };
allow zygote appdomain:dir { getattr search };
allow zygote appdomain:fd use;
allow zygote appdomain:file { { getattr open read ioctl lock } };
allow zygote appdomain:process dyntransition;
allow zygote appdomain:process { getpgid setpgid };
allow zygote app_library_file:dir { open getattr read search ioctl };
allow zygote app_library_file:file { getattr open read ioctl lock };
allow zygote ashmem_device:chr_file execute;
allow zygote at_distributor:fd use;
allow zygote audit_log:file { { getattr open read ioctl lock } { open append write } };
allow zygote bbccontainer_app_data_backend:dir { { { open getattr read search ioctl } { open search write add_name remove_name } } mounton setattr };
allow zygote bluetooth_efs_file:dir { open getattr read search ioctl };
allow zygote bluetooth_efs_file:{ file lnk_file } { getattr open read ioctl lock };
allow zygote bluetooth_serial_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow zygote bugreport_exec:file { execute execute_no_trans };
allow zygote cgroup:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow zygote commonplatformappdomain:binder transfer;
allow zygote container_app_data_backend:dir { { { open getattr read search ioctl } { open search write add_name remove_name } } mounton setattr };
allow zygote container_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow zygote container_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote container_app_sdcard_file:dir mounton;
allow zygote containerdomain:binder { call transfer };
allow zygote containerdomain:fd use;
allow zygote containerdomain:fd use;
allow zygote containerdomain:process { dyntransition getpgid setpgid };
allow zygote container_file_type:dir { open getattr read search ioctl };
allow zygote csc_prop:property_service set;
allow zygote dalvikcache_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow zygote dalvikcache_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote dalvikcache_data_file:file execute;
allow zygote dalvikcache_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote dalvikcache_data_file:lnk_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote denial_prop:property_service set;
allow zygote dex2oat_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow zygote dnsproxyd_socket:sock_file write;
allow zygote dumplog_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow zygote dumplog_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote dumplog_data_file:sock_file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote dumpstate_exec:file { execute execute_no_trans };
allow zygote dumpsys_exec:file { execute execute_no_trans };
allow zygote fixmo_app:binder { call transfer };
allow zygote fixmo_app:binder transfer;
allow zygote fixmo_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow zygote fixmo_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote fixmo_app:fd use;
allow zygote fixmo_app:process *;
allow zygote gad_untrusted_app_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow zygote gad_untrusted_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote good_app:binder { call transfer };
allow zygote good_app:binder transfer;
allow zygote good_app_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow zygote good_app_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote good_app:fd use;
allow zygote good_app:process *;
allow zygote graphics_device:chr_file { { getattr open read ioctl lock } { open append write } };
allow zygote hci_attach_dev:chr_file { { getattr open read ioctl lock } { open append write } };
allow zygote ime_app:binder transfer;
allow zygote init:fifo_file { { getattr open read ioctl lock } { open append write } };
allow zygote init:process sigchld;
allow zygote init:unix_stream_socket connectto;
allow zygote init:unix_stream_socket connectto;
allow zygote init:unix_stream_socket { read write };
allow zygote irm_media_data_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow zygote irm_media_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote kernel:security check_context;
allow zygote kernel:security compute_av;
allow zygote keychain_data_file:dir { open getattr read search ioctl };
allow zygote keychain_data_file:file { getattr open read ioctl lock };
allow zygote labeledfs:filesystem remount;
allow zygote labeledfs:filesystem unmount;
allow zygote log_device:chr_file read;
allow zygote media_rw_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow zygote media_rw_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow zygote media_rw_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote netd:unix_stream_socket connectto;
allow zygote nfc:binder transfer;
allow zygote { node port }:tcp_socket { node_bind name_bind };
allow zygote obb_apk_file:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow zygote platform_app:process ptrace;
allow zygote proc_avc_msg:file { { getattr open read ioctl lock } { open append write } };
allow zygote proc_cpuinfo:file mounton;
allow zygote property_socket:sock_file write;
allow zygote radio:binder { call transfer };
allow zygote radio:binder transfer;
allow zygote radio:fd use;
allow zygote resourcecache_data_file:dir { { open getattr read search ioctl } { open search write add_name remove_name } };
allow zygote resourcecache_data_file:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote rootfs:dir mounton;
allow zygote samsung_app:binder transfer;
allow zygote samsung_app:process ptrace;
allow zygote sdcard_type:dir { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } };
allow zygote sdcard_type:dir { write search setattr create add_name mounton };
allow zygote sdcard_type:file { create setattr { { getattr open read ioctl lock } { open append write } } { getattr link unlink rename } };
allow zygote sdcard_type:filesystem unmount;
allow zygote security_file:dir { open getattr read search ioctl };
allow zygote security_file:file { getattr open read ioctl lock };
allow zygote security_spota_file:dir { open getattr read search ioctl };
allow zygote security_spota_file:file { getattr open read ioctl lock };
allow zygote self:capability { dac_override setgid setuid fowner chown };
allow zygote self:capability { net_admin fsetid kill net_raw sys_resource };
allow zygote self:capability setpcap;
allow zygote self:capability sys_admin;
allow zygote self:netlink_selinux_socket *;
allow zygote self:process setcurrent;
allow zygote self:tcp_socket *;
allow zygote selinuxfs:file { { getattr open read ioctl lock } { open append write } };
allow zygote selinuxfs:file { { getattr open read ioctl lock } { open append write } };
allow zygote servicemanager:binder { call };
allow zygote servicemanager:binder { call transfer };
allow zygote servicemanager:binder { call transfer };
allow zygote servicemanager:fd use;
allow zygote setupwizard_prop:property_service set;
allow zygote shell_data_file:dir { { open getattr read search ioctl } mounton };
allow zygote shell_data_file:dir search;
allow zygote shell_data_file:file { write getattr };
allow zygote s_platform_app:process ptrace;
allow zygote s_system_app:binder transfer;
allow zygote surfaceflinger:binder { call transfer };
allow zygote surfaceflinger:binder transfer;
allow zygote surfaceflinger:fd use;
allow zygote sysfs_devices_system_cpu:file { { getattr open read ioctl lock } { open append write } };
allow zygote { sysfs proc }:file write;
allow zygote system_app:binder transfer;
allow zygote system:binder { call transfer };
allow zygote system:binder { transfer call };
allow zygote system_data_file:dir { { create reparent rmdir setattr { { open getattr read search ioctl } { open search write add_name remove_name } } { getattr link unlink rename } } mounton };
allow zygote system_data_file:dir { open getattr read search ioctl };
allow zygote system_data_file:file { getattr open read ioctl lock };
allow zygote system:fd use;
allow zygote system:fifo_file { open append write };
allow zygote system_file:file { getattr execute execute_no_trans };
allow zygote system_file:file { getattr execute execute_no_trans };
allow zygote system_library_file:dir { open getattr read search ioctl };
allow zygote system_prop:property_service set;
allow zygote system_server:binder transfer;
allow zygote system_server:process dyntransition;
allow zygote system_server:process { getpgid setpgid };
allow zygote tmpfs:dir { open getattr read search ioctl };
allow zygote tmpfs:dir { write create add_name setattr mounton search };
allow zygote tmpfs:filesystem mount;
allow zygote tmpfs:filesystem unmount;
allow zygote vmware_app:process { dyntransition setpgid };
allow zygote zygote:capability2 syslog;
allow zygote zygote_exec:file { entrypoint open read execute getattr };
allow zygote zygote_exec:file { { getattr open read ioctl lock } { getattr execute execute_no_trans } };
allow zygote zygote_exec:file { open execute_no_trans };
allow zygote zygote_tmpfs:file append;
allow zygote zygote_tmpfs:file { read write };
